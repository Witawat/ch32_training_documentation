
loud_speaker_pro.elf:     file format elf32-littleriscv
loud_speaker_pro.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x000071d4 memsz 0x000071d4 flags r-x
    LOAD off    0x00009000 vaddr 0x20000000 paddr 0x000071d4 align 2**12
         filesz 0x00000200 memsz 0x0000c670 flags rw-
    LOAD off    0x00009800 vaddr 0x2001f800 paddr 0x2001f800 align 2**12
         filesz 0x00000000 memsz 0x00000800 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .init         00000038  00000000  00000000  00001000  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .vector       000001c8  00000038  00000038  00001038  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00006fd4  00000200  00000200  00001200  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .fini         00000000  000071d4  000071d4  00009200  2**0
                  CONTENTS, ALLOC, LOAD, CODE
  4 .dalign       00000000  20000000  20000000  00009200  2**0
                  CONTENTS
  5 .dlalign      00000000  000071d4  000071d4  00009200  2**0
                  CONTENTS
  6 .data         00000200  20000000  000071d4  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          0000c470  20000200  000073d4  00009200  2**2
                  ALLOC
  8 .stack        00000800  2001f800  2001f800  00009800  2**0
                  ALLOC
  9 .debug_info   00015e6f  00000000  00000000  00009200  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00003b19  00000000  00000000  0001f06f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00007854  00000000  00000000  00022b88  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000c78  00000000  00000000  0002a3e0  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00001718  00000000  00000000  0002b058  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   000142fc  00000000  00000000  0002c770  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00003bf7  00000000  00000000  00040a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      00000033  00000000  00000000  00044663  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00002bec  00000000  00000000  00044698  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .stab         00000084  00000000  00000000  00047284  2**2
                  CONTENTS, READONLY, DEBUGGING
 19 .stabstr      00000117  00000000  00000000  00047308  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .init	00000000 .init
00000038 l    d  .vector	00000000 .vector
00000200 l    d  .text	00000000 .text
000071d4 l    d  .fini	00000000 .fini
20000000 l    d  .dalign	00000000 .dalign
000071d4 l    d  .dlalign	00000000 .dlalign
20000000 l    d  .data	00000000 .data
20000200 l    d  .bss	00000000 .bss
2001f800 l    d  .stack	00000000 .stack
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 ./Startup/startup_ch32v30x_D8C.o
00000038 l       .vector	00000000 _vector_base
00000000 l    df *ABS*	00000000 adc.c
20000200 l     O .bss	00000001 adc_buffer_flag.5248
00000000 l    df *ABS*	00000000 dac.c
00000000 l    df *ABS*	00000000 multi_button.c
20000204 l     O .bss	00000004 head_handle
00000000 l    df *ABS*	00000000 my_button.c
200001e0 l     O .data	00000001 recorePlayFlag
200001e1 l     O .data	00000001 speakLoudFlag
00000000 l    df *ABS*	00000000 opa.c
00000000 l    df *ABS*	00000000 ch32v30x_it.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 system_ch32v30x.c
00000000 l    df *ABS*	00000000 ch32v30x_adc.c
00000000 l    df *ABS*	00000000 ch32v30x_dac.c
00000000 l    df *ABS*	00000000 ch32v30x_dma.c
00000000 l    df *ABS*	00000000 ch32v30x_flash.c
00000000 l    df *ABS*	00000000 ch32v30x_gpio.c
00000000 l    df *ABS*	00000000 ch32v30x_opa.c
00000000 l    df *ABS*	00000000 ch32v30x_rcc.c
20000000 l     O .data	00000010 APBAHBPrescTable
200001ec l     O .data	00000004 ADCPrescTable
00000000 l    df *ABS*	00000000 ch32v30x_tim.c
00000000 l    df *ABS*	00000000 ch32v30x_usart.c
00000000 l    df *ABS*	00000000 debug.c
20000208 l     O .bss	00000002 p_ms
2000020a l     O .bss	00000001 p_us
200001f0 l     O .data	00000004 curbrk.5253
00000000 l    df *ABS*	00000000 core_riscv.c
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002cc8 l     F .text	0000013a quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00003bae l     F .text	00000066 std
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 mprec.c
00006f20 l     O .text	0000000c p05.3319
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00004822 l     F .text	00000028 __sfputc_r
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 trunctfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 close.c
00000000 l    df *ABS*	00000000 fstat.c
00000000 l    df *ABS*	00000000 isatty.c
00000000 l    df *ABS*	00000000 lseek.c
00000000 l    df *ABS*	00000000 read.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 impure.c
20000010 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 reent.c
00001ff2 g     F .text	000000ea __cvt
00000ed6  w      .text	00000000 EXTI2_IRQHandler
00000f20  w      .text	00000000 TIM8_TRG_COM_IRQHandler
00000f22  w      .text	00000000 TIM8_CC_IRQHandler
00004c8c g     F .text	00000032 _isatty_r
00002a10 g     F .text	000000d8 _puts_r
00004cbe g     F .text	00000036 _lseek_r
00001478 g     F .text	00000016 DMA_Cmd
000009a8 g     F .text	000000c0 button_play_single_click_handler
00000f58  w      .text	00000000 UART8_IRQHandler
00005a62 g     F .text	0000006a .hidden __eqdf2
000029ce g     F .text	00000042 printf
200009e0 g       .data	00000000 __global_pointer$
00000efc  w      .text	00000000 TIM1_CC_IRQHandler
00004bba g     F .text	00000030 __sseek
00003c66 g     F .text	00000066 __sinit
00002b04 g     F .text	000000c2 __swbuf_r
00000cea g     F .text	00000026 HardFault_Handler
00003c1e g     F .text	00000048 __sfmoreglue
00004d28 g     F .text	00000002 __malloc_unlock
000010d8 g     F .text	00000014 ADC_DMACmd
00000f32  w      .text	00000000 TIM6_IRQHandler
00000ec2  w      .text	00000000 SysTick_Handler
00000ec8  w      .text	00000000 PVD_IRQHandler
00000f28  w      .text	00000000 SDIO_IRQHandler
00000f5a  w      .text	00000000 TIM9_BRK_IRQHandler
00000f6e  w      .text	00000000 DMA2_Channel8_IRQHandler
00000cd4 g     F .text	00000016 NMI_Handler
00003faa g     F .text	00000086 _Balloc
00000f48  w      .text	00000000 CAN2_RX1_IRQHandler
00000ed8  w      .text	00000000 EXTI3_IRQHandler
00000650 g     F .text	00000054 button_init
00005acc g     F .text	000000ae .hidden __gtdf2
00000f50  w      .text	00000000 USBHS_IRQHandler
0000152e g     F .text	00000060 FLASH_ProgramPage_Fast
00001ee4 g     F .text	0000000a USART_GetFlagStatus
00000f70  w      .text	00000000 DMA2_Channel9_IRQHandler
00004c58 g     F .text	00000034 _fstat_r
00000f68  w      .text	00000000 TIM10_CC_IRQHandler
2000c66c g     O .bss	00000004 errno
20000200 g       .bss	00000000 _sbss
00000800 g       *ABS*	00000000 __stack_size
000011aa g     F .text	0000001a ADC_ExternalTrigConvCmd
00001f14 g     F .text	0000005a USART_Printf_Init
0000140a g     F .text	00000040 DMA_Init
00003ef8 g     F .text	000000b2 memcpy
000010c6 g     F .text	00000012 ADC_Cmd
00003c14 g     F .text	0000000a _cleanup_r
000068c8 g     F .text	00000070 .hidden __floatsidf
00005b7a g     F .text	000000b6 .hidden __ltdf2
00000ed2  w      .text	00000000 EXTI0_IRQHandler
00000f08  w      .text	00000000 I2C2_EV_IRQHandler
00000f66  w      .text	00000000 TIM10_TRG_COM_IRQHandler
00001d54 g     F .text	0000001a TIM_Cmd
00002ae8 g     F .text	0000000a puts
200001e8 g     O .data	00000004 SystemCoreClock
00003ed4 g     F .text	0000000c malloc
00006c3a g     F .text	00000010 _fstat
00006e58 g     O .text	000000c8 __mprec_tens
00000038 g       .init	00000000 _einit
00000904 g     F .text	0000007a button_record_long_press_start_handler
00001dce g     F .text	0000000c TIM_ClearITPendingBit
000014ce g     F .text	0000001e FLASH_Unlock_Fast
00001c42 g     F .text	0000001e RCC_APB2PeriphClockCmd
00000f4a  w      .text	00000000 CAN2_SCE_IRQHandler
00000eea  w      .text	00000000 ADC1_2_IRQHandler
0000158e g     F .text	00000480 GPIO_Init
00001a86 g     F .text	00000012 RCC_ADCCLKConfig
00000ec0  w      .text	00000000 Break_Point_Handler
00003dd2 g     F .text	00000018 _localeconv_r
000041b4 g     F .text	0000001a __i2b
00000f0c  w      .text	00000000 SPI1_IRQHandler
00001ec4 g     F .text	00000018 USART_Cmd
00004b14 g     F .text	00000032 _sbrk_r
00000eca  w      .text	00000000 TAMPER_IRQHandler
00004d2a g     F .text	00000036 _read_r
00000f46  w      .text	00000000 CAN2_RX0_IRQHandler
000014a2 g     F .text	0000002c DMA_ClearITPendingBit
00000f1e  w      .text	00000000 TIM8_UP_IRQHandler
00001a56 g     F .text	00000030 OPA_Cmd
00001c60 g     F .text	0000001e RCC_APB1PeriphClockCmd
00004d7e g     F .text	00000730 .hidden __adddf3
00000ebc  w      .text	00000000 Ecall_M_Mode_Handler
2001f800 g       .stack	00000000 _heap_end
00006c4a g     F .text	00000010 _isatty
200001f8 g     O .data	00000004 _global_impure_ptr
00000f38  w      .text	00000000 DMA2_Channel2_IRQHandler
00001c24 g     F .text	0000001e RCC_AHBPeriphClockCmd
00000ee2  w      .text	00000000 DMA1_Channel4_IRQHandler
000010ec g     F .text	000000be ADC_RegularChannelConfig
00006e30 g     O .text	00000028 __mprec_bigtens
00006938 g     F .text	00000066 .hidden __floatunsidf
00001fba g     F .text	0000002c _sbrk
00004494 g     F .text	00000032 __mcmp
0000144a g     F .text	0000002e DMA_StructInit
00000f5c  w      .text	00000000 TIM9_UP_IRQHandler
00000f14  w      .text	00000000 USART3_IRQHandler
00000ecc  w      .text	00000000 RTC_IRQHandler
2000c670 g       .bss	00000000 _ebss
00000ee8  w      .text	00000000 DMA1_Channel7_IRQHandler
00004104 g     F .text	00000046 __hi0bits
00000ef0  w      .text	00000000 CAN1_RX1_IRQHandler
00006860 g     F .text	00000068 .hidden __fixdfsi
00001eee g     F .text	00000026 Delay_Init
00000f52  w      .text	00000000 DVP_IRQHandler
00000f30  w      .text	00000000 UART5_IRQHandler
20000414 g     O .bss	00000200 adc_data_buffer_2
00001a18 g     F .text	00000004 GPIO_SetBits
00000f02  w      .text	00000000 TIM4_IRQHandler
00005b7a g     F .text	000000b6 .hidden __ledf2
00001d82 g     F .text	0000001c TIM_ARRPreloadConfig
00000f36  w      .text	00000000 DMA2_Channel1_IRQHandler
00004310 g     F .text	000000b6 __pow5mult
00006dd0 g     O .text	00000020 __sf_fake_stderr
00000f04  w      .text	00000000 I2C1_EV_IRQHandler
00001db6 g     F .text	00000018 TIM_GetITStatus
000006ac g     F .text	00000218 button_handler
00001a98 g     F .text	0000018c RCC_GetClocksFreq
00000ee6  w      .text	00000000 DMA1_Channel6_IRQHandler
00006bbc g     F .text	0000006e .hidden __clzsi2
0000484a g     F .text	00000040 __sfputs_r
00000f2e  w      .text	00000000 UART4_IRQHandler
00000f3c  w      .text	00000000 DMA2_Channel4_IRQHandler
00003ee0 g     F .text	00000018 memchr
00002160  w    F .text	000004c0 _printf_float
00001dda g     F .text	000000ea USART_Init
000046b0 g     F .text	000000a4 _free_r
00000f00  w      .text	00000000 TIM3_IRQHandler
00000ed0  w      .text	00000000 RCC_IRQHandler
000002a8 g     F .text	00000098 adc_dma_init
00000efa  w      .text	00000000 TIM1_TRG_COM_IRQHandler
0000043a g     F .text	00000110 DMA1_Channel1_IRQHandler
00000000 g       .init	00000000 _start
00000f6c  w      .text	00000000 DMA2_Channel7_IRQHandler
0000097e g     F .text	0000002a read_button_pin
00006c5a g     F .text	00000010 _lseek
000043c6 g     F .text	000000ce __lshift
00000f16  w      .text	00000000 EXTI15_10_IRQHandler
00001d6e g     F .text	00000014 TIM_ITConfig
000041ce g     F .text	00000142 __multiply
000045b6 g     F .text	000000d4 __d2b
00001a1c g     F .text	00000004 GPIO_ResetBits
00001fec g     F .text	00000006 __get_MCAUSE
00001d9e g     F .text	00000018 TIM_SelectOutputTrigger
00000f34  w      .text	00000000 TIM7_IRQHandler
00004c26 g     F .text	00000032 _close_r
00000f44  w      .text	00000000 CAN2_TX_IRQHandler
20000000 g       .dalign	00000000 _data_vma
00000f2a  w      .text	00000000 TIM5_IRQHandler
00002bc6 g     F .text	00000102 __swsetup_r
00000ef4  w      .text	00000000 EXTI9_5_IRQHandler
000054ae g     F .text	000005b4 .hidden __divdf3
00003ccc g     F .text	0000009c __sfp
20000614 g     O .bss	0000c000 adc_record_data_buffer
00001a20 g     F .text	00000036 OPA_Init
00005c30 g     F .text	000004b8 .hidden __muldf3
00004b46 g     F .text	0000002c __sread
00000f42  w      .text	00000000 ETH_WKUP_IRQHandler
00004d26 g     F .text	00000002 __malloc_lock
0000054a g     F .text	00000106 dac_init
00001fe6 g     F .text	00000006 __get_MEPC
200001e4 g     O .data	00000004 speakerLoudMode
00003b4a g     F .text	00000064 _fflush_r
000008c4 g     F .text	00000024 button_start
0000468a g     F .text	00000026 _calloc_r
00000f0e  w      .text	00000000 SPI2_IRQHandler
00006df0 g     O .text	00000020 __sf_fake_stdin
00000200 g     F .text	000000a8 memset
00000d10 g     F .text	000000a0 main
00000f62  w      .text	00000000 TIM10_BRK_IRQHandler
00000f60  w      .text	00000000 TIM9_CC_IRQHandler
2000c640 g     O .bss	0000002c buttonRecord
00004bea g     F .text	00000006 __sclose
00000f3e  w      .text	00000000 DMA2_Channel5_IRQHandler
00002e02 g     F .text	00000c16 _dtoa_r
00004754 g     F .text	000000ce _malloc_r
00004d60 g     F .text	0000001e __ascii_wctomb
00000ee4  w      .text	00000000 DMA1_Channel5_IRQHandler
00000eda  w      .text	00000000 EXTI4_IRQHandler
00000eee  w      .text	00000000 USB_LP_CAN1_RX0_IRQHandler
000011c4 g     F .text	0000001a ADC_BufferCmd
00000db0 g     F .text	00000108 SystemInit
00000f24  w      .text	00000000 RNG_IRQHandler
00005a62 g     F .text	0000006a .hidden __nedf2
000029ce g     F .text	00000042 iprintf
00000eec  w      .text	00000000 USB_HP_CAN1_TX_IRQHandler
000070d4 g     O .text	00000100 .hidden __clz_tab
000020dc g     F .text	00000084 __exponent
20000214 g     O .bss	00000200 adc_data_buffer_1
00000000 g       .init	00000000 _sinit
00004bf0 g     F .text	00000036 _write_r
00000ee0  w      .text	00000000 DMA1_Channel3_IRQHandler
00000f26  w      .text	00000000 FSMC_IRQHandler
00000f40  w      .text	00000000 ETH_IRQHandler
00002620 g     F .text	0000010c _printf_common
200001f4 g     O .data	00000004 _impure_ptr
00000ef8  w      .text	00000000 TIM1_UP_IRQHandler
00000340 g     F .text	000000fa adc_init
00003a18 g     F .text	00000132 __sflush_r
00000ec6  w      .text	00000000 WWDG_IRQHandler
00000a68 g     F .text	000000b6 button_play_double_click_handler
00000c46 g     F .text	0000008e opa_init
00000f4e  w      .text	00000000 USBHSWakeup_IRQHandler
00000f74  w      .text	00000000 DMA2_Channel11_IRQHandler
00004cf4 g     F .text	00000032 __ascii_mbtowc
00000ebe  w      .text	00000000 Ecall_U_Mode_Handler
0000148e g     F .text	00000014 DMA_ITConfig
00000f6a  w      .text	00000000 DMA2_Channel6_IRQHandler
00000c26 g     F .text	00000020 TIM2_IRQHandler
20020000 g       .stack	00000000 _eusrstack
00000ec4  w      .text	00000000 SW_Handler
0000101a g     F .text	00000052 ADC_DeInit
000014ec g     F .text	0000000e FLASH_Lock_Fast
00000ef6  w      .text	00000000 TIM1_BRK_IRQHandler
00003dea g     F .text	00000058 __swhatbuf_r
0000106c g     F .text	0000005a ADC_Init
00001edc g     F .text	00000008 USART_SendData
00000f72  w      .text	00000000 DMA2_Channel10_IRQHandler
00000ed4  w      .text	00000000 EXTI1_IRQHandler
00001236 g     F .text	00000024 DAC_DMACmd
00001f6e g     F .text	0000004c _write
20000200 g       .data	00000000 _edata
2000c670 g       .bss	00000000 _end
00001212 g     F .text	00000024 DAC_Cmd
000006a4 g     F .text	00000008 button_attach
00001c9c g     F .text	000000b8 TIM_TimeBaseInit
00000f18  w      .text	00000000 RTCAlarm_IRQHandler
2000c614 g     O .bss	0000002c buttonPlay
000071d4 g       .dlalign	00000000 _data_lma
00000f64  w      .text	00000000 TIM10_UP_IRQHandler
00000f5e  w      .text	00000000 TIM9_TRG_COM_IRQHandler
00000f56  w      .text	00000000 UART7_IRQHandler
000011de g     F .text	00000034 DAC_Init
00000f12  w      .text	00000000 USART2_IRQHandler
00000f54  w      .text	00000000 UART6_IRQHandler
00004b72 g     F .text	00000048 __swrite
0000488a g     F .text	0000028a _vfiprintf_r
00003d68 g     F .text	0000006a _fwalk_reent
000044c6 g     F .text	000000f0 __mdiff
00000f0a  w      .text	00000000 I2C2_ER_IRQHandler
00000ede  w      .text	00000000 DMA1_Channel2_IRQHandler
00006e10 g     O .text	00000020 __sf_fake_stdout
000014fa g     F .text	00000034 FLASH_EraseBlock_64K_Fast
00000f1c  w      .text	00000000 TIM8_BRK_IRQHandler
00006f50 g     O .text	00000101 _ctype_
00006c6a g     F .text	00000010 _read
00006824 g     F .text	0000003c .hidden __unorddf2
00000f76  w      .text	00000000 handle_reset
00000ef2  w      .text	00000000 CAN1_SCE_IRQHandler
00000ece  w      .text	00000000 FLASH_IRQHandler
00000f10  w      .text	00000000 USART1_IRQHandler
00003e42 g     F .text	00000092 __smakebuf_r
00002af2 g     F .text	00000012 strlen
00000f4c  w      .text	00000000 OTG_FS_IRQHandler
0000272c g     F .text	000002a2 _printf_i
00000f2c  w      .text	00000000 SPI3_IRQHandler
00005acc g     F .text	000000ae .hidden __gedf2
20000210 g     O .bss	00000004 __malloc_sbrk_start
00001c7e g     F .text	0000001e RCC_APB2PeriphResetCmd
00000f06  w      .text	00000000 I2C1_ER_IRQHandler
0000125a g     F .text	000001b0 DMA_DeInit
2000020c g     O .bss	00000004 __malloc_free_list
000060e8 g     F .text	0000073c .hidden __subdf3
0000488a g     F .text	0000028a _vfprintf_r
0000414a g     F .text	0000006a __lo0bits
00001a0e g     F .text	0000000a GPIO_ReadInputDataBit
00000b1e g     F .text	00000108 my_button_init
20000070 g     O .data	0000016c __global_locale
00000f1a  w      .text	00000000 USBWakeUp_IRQHandler
0000699e g     F .text	0000021e .hidden __trunctfdf2
00006c2a g     F .text	00000010 _close
000008e8 g     F .text	0000001c button_ticks
00000f3a  w      .text	00000000 DMA2_Channel3_IRQHandler
00004072 g     F .text	00000092 __multadd
00004030 g     F .text	00000042 _Bfree



Disassembly of section .init:

00000000 <_sinit>:

	.section	.init,"ax",@progbits
	.global	_start
	.align	1
_start:
	j	handle_reset
   0:	7770006f          	j	f76 <handle_reset>
   4:	00000013          	nop
   8:	00000013          	nop
   c:	00000013          	nop
  10:	00000013          	nop
  14:	00000013          	nop
  18:	00000013          	nop
  1c:	00000013          	nop
  20:	00000013          	nop
  24:	00000013          	nop
  28:	00000013          	nop
  2c:	00000013          	nop
  30:	00000013          	nop
  34:	00100073          	ebreak

Disassembly of section .vector:

00000038 <_vector_base>:
	...
  40:	0cd4                	addi	a3,sp,596
  42:	0000                	unimp
  44:	0cea                	slli	s9,s9,0x1a
  46:	0000                	unimp
  48:	0000                	unimp
  4a:	0000                	unimp
  4c:	0ebc                	addi	a5,sp,856
	...
  56:	0000                	unimp
  58:	0ebe                	slli	t4,t4,0xf
  5a:	0000                	unimp
  5c:	0ec0                	addi	s0,sp,852
	...
  66:	0000                	unimp
  68:	0ec2                	slli	t4,t4,0x10
  6a:	0000                	unimp
  6c:	0000                	unimp
  6e:	0000                	unimp
  70:	0ec4                	addi	s1,sp,852
  72:	0000                	unimp
  74:	0000                	unimp
  76:	0000                	unimp
  78:	0ec6                	slli	t4,t4,0x11
  7a:	0000                	unimp
  7c:	0ec8                	addi	a0,sp,852
  7e:	0000                	unimp
  80:	0eca                	slli	t4,t4,0x12
  82:	0000                	unimp
  84:	0ecc                	addi	a1,sp,852
  86:	0000                	unimp
  88:	0ece                	slli	t4,t4,0x13
  8a:	0000                	unimp
  8c:	0ed0                	addi	a2,sp,852
  8e:	0000                	unimp
  90:	0ed2                	slli	t4,t4,0x14
  92:	0000                	unimp
  94:	0ed4                	addi	a3,sp,852
  96:	0000                	unimp
  98:	0ed6                	slli	t4,t4,0x15
  9a:	0000                	unimp
  9c:	0ed8                	addi	a4,sp,852
  9e:	0000                	unimp
  a0:	0eda                	slli	t4,t4,0x16
  a2:	0000                	unimp
  a4:	043a                	slli	s0,s0,0xe
  a6:	0000                	unimp
  a8:	0ede                	slli	t4,t4,0x17
  aa:	0000                	unimp
  ac:	0ee0                	addi	s0,sp,860
  ae:	0000                	unimp
  b0:	0ee2                	slli	t4,t4,0x18
  b2:	0000                	unimp
  b4:	0ee4                	addi	s1,sp,860
  b6:	0000                	unimp
  b8:	0ee6                	slli	t4,t4,0x19
  ba:	0000                	unimp
  bc:	0ee8                	addi	a0,sp,860
  be:	0000                	unimp
  c0:	0eea                	slli	t4,t4,0x1a
  c2:	0000                	unimp
  c4:	0eec                	addi	a1,sp,860
  c6:	0000                	unimp
  c8:	0eee                	slli	t4,t4,0x1b
  ca:	0000                	unimp
  cc:	0ef0                	addi	a2,sp,860
  ce:	0000                	unimp
  d0:	0ef2                	slli	t4,t4,0x1c
  d2:	0000                	unimp
  d4:	0ef4                	addi	a3,sp,860
  d6:	0000                	unimp
  d8:	0ef6                	slli	t4,t4,0x1d
  da:	0000                	unimp
  dc:	0ef8                	addi	a4,sp,860
  de:	0000                	unimp
  e0:	0efa                	slli	t4,t4,0x1e
  e2:	0000                	unimp
  e4:	0efc                	addi	a5,sp,860
  e6:	0000                	unimp
  e8:	0c26                	slli	s8,s8,0x9
  ea:	0000                	unimp
  ec:	0f00                	addi	s0,sp,912
  ee:	0000                	unimp
  f0:	0f02                	c.slli64	t5
  f2:	0000                	unimp
  f4:	0f04                	addi	s1,sp,912
  f6:	0000                	unimp
  f8:	0f06                	slli	t5,t5,0x1
  fa:	0000                	unimp
  fc:	0f08                	addi	a0,sp,912
  fe:	0000                	unimp
 100:	0f0a                	slli	t5,t5,0x2
 102:	0000                	unimp
 104:	0f0c                	addi	a1,sp,912
 106:	0000                	unimp
 108:	0f0e                	slli	t5,t5,0x3
 10a:	0000                	unimp
 10c:	0f10                	addi	a2,sp,912
 10e:	0000                	unimp
 110:	0f12                	slli	t5,t5,0x4
 112:	0000                	unimp
 114:	0f14                	addi	a3,sp,912
 116:	0000                	unimp
 118:	0f16                	slli	t5,t5,0x5
 11a:	0000                	unimp
 11c:	0f18                	addi	a4,sp,912
 11e:	0000                	unimp
 120:	0f1a                	slli	t5,t5,0x6
 122:	0000                	unimp
 124:	0f1c                	addi	a5,sp,912
 126:	0000                	unimp
 128:	0f1e                	slli	t5,t5,0x7
 12a:	0000                	unimp
 12c:	0f20                	addi	s0,sp,920
 12e:	0000                	unimp
 130:	0f22                	slli	t5,t5,0x8
 132:	0000                	unimp
 134:	0f24                	addi	s1,sp,920
 136:	0000                	unimp
 138:	0f26                	slli	t5,t5,0x9
 13a:	0000                	unimp
 13c:	0f28                	addi	a0,sp,920
 13e:	0000                	unimp
 140:	0f2a                	slli	t5,t5,0xa
 142:	0000                	unimp
 144:	0f2c                	addi	a1,sp,920
 146:	0000                	unimp
 148:	0f2e                	slli	t5,t5,0xb
 14a:	0000                	unimp
 14c:	0f30                	addi	a2,sp,920
 14e:	0000                	unimp
 150:	0f32                	slli	t5,t5,0xc
 152:	0000                	unimp
 154:	0f34                	addi	a3,sp,920
 156:	0000                	unimp
 158:	0f36                	slli	t5,t5,0xd
 15a:	0000                	unimp
 15c:	0f38                	addi	a4,sp,920
 15e:	0000                	unimp
 160:	0f3a                	slli	t5,t5,0xe
 162:	0000                	unimp
 164:	0f3c                	addi	a5,sp,920
 166:	0000                	unimp
 168:	0f3e                	slli	t5,t5,0xf
 16a:	0000                	unimp
 16c:	0f40                	addi	s0,sp,916
 16e:	0000                	unimp
 170:	0f42                	slli	t5,t5,0x10
 172:	0000                	unimp
 174:	0f44                	addi	s1,sp,916
 176:	0000                	unimp
 178:	0f46                	slli	t5,t5,0x11
 17a:	0000                	unimp
 17c:	0f48                	addi	a0,sp,916
 17e:	0000                	unimp
 180:	0f4a                	slli	t5,t5,0x12
 182:	0000                	unimp
 184:	0f4c                	addi	a1,sp,916
 186:	0000                	unimp
 188:	0f4e                	slli	t5,t5,0x13
 18a:	0000                	unimp
 18c:	0f50                	addi	a2,sp,916
 18e:	0000                	unimp
 190:	0f52                	slli	t5,t5,0x14
 192:	0000                	unimp
 194:	0f54                	addi	a3,sp,916
 196:	0000                	unimp
 198:	0f56                	slli	t5,t5,0x15
 19a:	0000                	unimp
 19c:	0f58                	addi	a4,sp,916
 19e:	0000                	unimp
 1a0:	0f5a                	slli	t5,t5,0x16
 1a2:	0000                	unimp
 1a4:	0f5c                	addi	a5,sp,916
 1a6:	0000                	unimp
 1a8:	0f5e                	slli	t5,t5,0x17
 1aa:	0000                	unimp
 1ac:	0f60                	addi	s0,sp,924
 1ae:	0000                	unimp
 1b0:	0f62                	slli	t5,t5,0x18
 1b2:	0000                	unimp
 1b4:	0f64                	addi	s1,sp,924
 1b6:	0000                	unimp
 1b8:	0f66                	slli	t5,t5,0x19
 1ba:	0000                	unimp
 1bc:	0f68                	addi	a0,sp,924
 1be:	0000                	unimp
 1c0:	0f6a                	slli	t5,t5,0x1a
 1c2:	0000                	unimp
 1c4:	0f6c                	addi	a1,sp,924
 1c6:	0000                	unimp
 1c8:	0f6e                	slli	t5,t5,0x1b
 1ca:	0000                	unimp
 1cc:	0f70                	addi	a2,sp,924
 1ce:	0000                	unimp
 1d0:	0f72                	slli	t5,t5,0x1c
 1d2:	0000                	unimp
 1d4:	0f74                	addi	a3,sp,924
	...

Disassembly of section .text:

00000200 <memset>:
     200:	433d                	li	t1,15
     202:	872a                	mv	a4,a0
     204:	02c37363          	bgeu	t1,a2,22a <memset+0x2a>
     208:	00f77793          	andi	a5,a4,15
     20c:	efbd                	bnez	a5,28a <memset+0x8a>
     20e:	e5ad                	bnez	a1,278 <memset+0x78>
     210:	ff067693          	andi	a3,a2,-16
     214:	8a3d                	andi	a2,a2,15
     216:	96ba                	add	a3,a3,a4
     218:	c30c                	sw	a1,0(a4)
     21a:	c34c                	sw	a1,4(a4)
     21c:	c70c                	sw	a1,8(a4)
     21e:	c74c                	sw	a1,12(a4)
     220:	0741                	addi	a4,a4,16
     222:	fed76be3          	bltu	a4,a3,218 <memset+0x18>
     226:	e211                	bnez	a2,22a <memset+0x2a>
     228:	8082                	ret
     22a:	40c306b3          	sub	a3,t1,a2
     22e:	068a                	slli	a3,a3,0x2
     230:	00000297          	auipc	t0,0x0
     234:	9696                	add	a3,a3,t0
     236:	00a68067          	jr	10(a3)
     23a:	00b70723          	sb	a1,14(a4)
     23e:	00b706a3          	sb	a1,13(a4)
     242:	00b70623          	sb	a1,12(a4)
     246:	00b705a3          	sb	a1,11(a4)
     24a:	00b70523          	sb	a1,10(a4)
     24e:	00b704a3          	sb	a1,9(a4)
     252:	00b70423          	sb	a1,8(a4)
     256:	00b703a3          	sb	a1,7(a4)
     25a:	00b70323          	sb	a1,6(a4)
     25e:	00b702a3          	sb	a1,5(a4)
     262:	00b70223          	sb	a1,4(a4)
     266:	00b701a3          	sb	a1,3(a4)
     26a:	00b70123          	sb	a1,2(a4)
     26e:	00b700a3          	sb	a1,1(a4)
     272:	00b70023          	sb	a1,0(a4)
     276:	8082                	ret
     278:	0ff5f593          	andi	a1,a1,255
     27c:	00859693          	slli	a3,a1,0x8
     280:	8dd5                	or	a1,a1,a3
     282:	01059693          	slli	a3,a1,0x10
     286:	8dd5                	or	a1,a1,a3
     288:	b761                	j	210 <memset+0x10>
     28a:	00279693          	slli	a3,a5,0x2
     28e:	00000297          	auipc	t0,0x0
     292:	9696                	add	a3,a3,t0
     294:	8286                	mv	t0,ra
     296:	fa8680e7          	jalr	-88(a3)
     29a:	8096                	mv	ra,t0
     29c:	17c1                	addi	a5,a5,-16
     29e:	8f1d                	sub	a4,a4,a5
     2a0:	963e                	add	a2,a2,a5
     2a2:	f8c374e3          	bgeu	t1,a2,22a <memset+0x2a>
     2a6:	b7a5                	j	20e <memset+0xe>

000002a8 <adc_dma_init>:
    // TIM_Cmd(TIM3,ENABLE);
}


void adc_dma_init(void)
{
     2a8:	7139                	addi	sp,sp,-64

    DMA_InitTypeDef DMA_InitStructure = {0};

    RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1, ENABLE);
     2aa:	4585                	li	a1,1
     2ac:	4505                	li	a0,1
{
     2ae:	de06                	sw	ra,60(sp)
     2b0:	dc22                	sw	s0,56(sp)
    DMA_InitTypeDef DMA_InitStructure = {0};
     2b2:	c202                	sw	zero,4(sp)

    DMA_DeInit(DMA1_Channel1);
     2b4:	40020437          	lui	s0,0x40020
    DMA_InitTypeDef DMA_InitStructure = {0};
     2b8:	c402                	sw	zero,8(sp)
     2ba:	c602                	sw	zero,12(sp)
     2bc:	c802                	sw	zero,16(sp)
     2be:	ca02                	sw	zero,20(sp)
     2c0:	cc02                	sw	zero,24(sp)
     2c2:	ce02                	sw	zero,28(sp)
     2c4:	d002                	sw	zero,32(sp)
     2c6:	d202                	sw	zero,36(sp)
     2c8:	d402                	sw	zero,40(sp)
     2ca:	d602                	sw	zero,44(sp)
    RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1, ENABLE);
     2cc:	159010ef          	jal	ra,1c24 <RCC_AHBPeriphClockCmd>
    DMA_DeInit(DMA1_Channel1);
     2d0:	00840513          	addi	a0,s0,8 # 40020008 <_eusrstack+0x20000008>
     2d4:	787000ef          	jal	ra,125a <DMA_DeInit>
    DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)&ADC1->RDATAR;
     2d8:	400127b7          	lui	a5,0x40012
     2dc:	44c78793          	addi	a5,a5,1100 # 4001244c <_eusrstack+0x1fff244c>
     2e0:	c23e                	sw	a5,4(sp)
    DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)adc_data_buffer_1;
     2e2:	83418793          	addi	a5,gp,-1996 # 20000214 <adc_data_buffer_1>
     2e6:	c43e                	sw	a5,8(sp)
    DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
    DMA_InitStructure.DMA_BufferSize = ADC_DATA_LENGTH;
    DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
    DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
     2e8:	08000793          	li	a5,128
     2ec:	cc3e                	sw	a5,24(sp)
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
     2ee:	40000793          	li	a5,1024
    DMA_InitStructure.DMA_BufferSize = ADC_DATA_LENGTH;
     2f2:	10000713          	li	a4,256
    DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
    DMA_InitStructure.DMA_Priority = DMA_Priority_High;
    DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
    DMA_Init(DMA1_Channel1, &DMA_InitStructure);
     2f6:	004c                	addi	a1,sp,4
     2f8:	00840513          	addi	a0,s0,8
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
     2fc:	d03e                	sw	a5,32(sp)
    DMA_InitStructure.DMA_Priority = DMA_Priority_High;
     2fe:	6789                	lui	a5,0x2
    DMA_InitStructure.DMA_BufferSize = ADC_DATA_LENGTH;
     300:	c83a                	sw	a4,16(sp)
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
     302:	ce3a                	sw	a4,28(sp)
    DMA_InitStructure.DMA_Priority = DMA_Priority_High;
     304:	d43e                	sw	a5,40(sp)
    DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
     306:	c602                	sw	zero,12(sp)
    DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
     308:	ca02                	sw	zero,20(sp)
    DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
     30a:	d202                	sw	zero,36(sp)
    DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
     30c:	d602                	sw	zero,44(sp)
    DMA_Init(DMA1_Channel1, &DMA_InitStructure);
     30e:	0fc010ef          	jal	ra,140a <DMA_Init>


    DMA_ITConfig(DMA1_Channel1,DMA_IT_TC,ENABLE);
     312:	00840513          	addi	a0,s0,8
     316:	4589                	li	a1,2
     318:	4605                	li	a2,1
     31a:	174010ef          	jal	ra,148e <DMA_ITConfig>
 *              bit6~bit4 - subpriority
 * @return  None
 */
RV_STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint8_t priority)
{
  NVIC->IPRIOR[(uint32_t)(IRQn)] = priority;
     31e:	e000e7b7          	lui	a5,0xe000e
     322:	40078da3          	sb	zero,1051(a5) # e000e41b <_eusrstack+0xbffee41b>
  NVIC->IENR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
     326:	08000737          	lui	a4,0x8000
    NVIC_SetPriority(DMA1_Channel1_IRQn, 0x00);
    NVIC_EnableIRQ(DMA1_Channel1_IRQn);

    DMA_Cmd(DMA1_Channel1,ENABLE);
     32a:	00840513          	addi	a0,s0,8
     32e:	10e7a023          	sw	a4,256(a5)
     332:	4585                	li	a1,1
     334:	144010ef          	jal	ra,1478 <DMA_Cmd>

}
     338:	50f2                	lw	ra,60(sp)
     33a:	5462                	lw	s0,56(sp)
     33c:	6121                	addi	sp,sp,64
     33e:	8082                	ret

00000340 <adc_init>:


void adc_init(void)
{
     340:	715d                	addi	sp,sp,-80
    /* ADC 通道1 引脚初始化 */
    GPIO_InitTypeDef GPIO_InitStructure = {0};
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
     342:	4585                	li	a1,1
     344:	4511                	li	a0,4
{
     346:	c686                	sw	ra,76(sp)
     348:	c4a2                	sw	s0,72(sp)
     34a:	c2a6                	sw	s1,68(sp)
    GPIO_InitTypeDef GPIO_InitStructure = {0};
     34c:	ca02                	sw	zero,20(sp)
     34e:	cc02                	sw	zero,24(sp)
     350:	ce02                	sw	zero,28(sp)
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
     352:	0f1010ef          	jal	ra,1c42 <RCC_APB2PeriphClockCmd>

    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
     356:	40011537          	lui	a0,0x40011
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
     35a:	4485                	li	s1,1
    GPIO_Init(GPIOA, &GPIO_InitStructure);
     35c:	084c                	addi	a1,sp,20
     35e:	80050513          	addi	a0,a0,-2048 # 40010800 <_eusrstack+0x1fff0800>
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
     362:	82e4                	sh	s1,20(sp)
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
     364:	ce02                	sw	zero,28(sp)
    GPIO_Init(GPIOA, &GPIO_InitStructure);
     366:	228010ef          	jal	ra,158e <GPIO_Init>

    /* ADC1 模块初始化 */
    ADC_InitTypeDef ADC_InitStructure = {0};
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE);
     36a:	4585                	li	a1,1
     36c:	20000513          	li	a0,512
    ADC_InitTypeDef ADC_InitStructure = {0};
     370:	d002                	sw	zero,32(sp)
     372:	d202                	sw	zero,36(sp)
     374:	d402                	sw	zero,40(sp)
     376:	d602                	sw	zero,44(sp)
     378:	d802                	sw	zero,48(sp)
     37a:	da02                	sw	zero,52(sp)
     37c:	dc02                	sw	zero,56(sp)
     37e:	de02                	sw	zero,60(sp)
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE);
     380:	0c3010ef          	jal	ra,1c42 <RCC_APB2PeriphClockCmd>
    RCC_ADCCLKConfig(RCC_PCLK2_Div6);
     384:	6521                	lui	a0,0x8

    ADC_DeInit(ADC1);
     386:	40012437          	lui	s0,0x40012
    RCC_ADCCLKConfig(RCC_PCLK2_Div6);
     38a:	6fc010ef          	jal	ra,1a86 <RCC_ADCCLKConfig>
    ADC_DeInit(ADC1);
     38e:	40040513          	addi	a0,s0,1024 # 40012400 <_eusrstack+0x1fff2400>
     392:	489000ef          	jal	ra,101a <ADC_DeInit>

    ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
    ADC_InitStructure.ADC_ScanConvMode = ENABLE;
     396:	4785                	li	a5,1
    ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
    ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_T3_TRGO;  //触发模式
    ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
    ADC_InitStructure.ADC_NbrOfChannel = 1;
    ADC_Init(ADC1, &ADC_InitStructure);
     398:	100c                	addi	a1,sp,32
     39a:	40040513          	addi	a0,s0,1024
    ADC_InitStructure.ADC_ScanConvMode = ENABLE;
     39e:	d23e                	sw	a5,36(sp)
    ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_T3_TRGO;  //触发模式
     3a0:	000807b7          	lui	a5,0x80
     3a4:	d63e                	sw	a5,44(sp)
    ADC_InitStructure.ADC_NbrOfChannel = 1;
     3a6:	02910a23          	sb	s1,52(sp)
    ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
     3aa:	d002                	sw	zero,32(sp)
    ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
     3ac:	d402                	sw	zero,40(sp)
    ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
     3ae:	d802                	sw	zero,48(sp)
    ADC_Init(ADC1, &ADC_InitStructure);
     3b0:	4bd000ef          	jal	ra,106c <ADC_Init>

    ADC_Cmd(ADC1,ENABLE);
     3b4:	40040513          	addi	a0,s0,1024
     3b8:	4585                	li	a1,1
     3ba:	50d000ef          	jal	ra,10c6 <ADC_Cmd>
    ADC_BufferCmd(ADC1, ENABLE);   //enable buffer
     3be:	40040513          	addi	a0,s0,1024
     3c2:	4585                	li	a1,1
     3c4:	601000ef          	jal	ra,11c4 <ADC_BufferCmd>

    /* ADC DMA 初始化 */
    adc_dma_init();
     3c8:	35c5                	jal	2a8 <adc_dma_init>
    ADC_DMACmd(ADC1, ENABLE);
     3ca:	40040513          	addi	a0,s0,1024
     3ce:	4585                	li	a1,1
     3d0:	509000ef          	jal	ra,10d8 <ADC_DMACmd>

    /* 使能外部触发模式 */
    ADC_ExternalTrigConvCmd(ADC1, ENABLE);
     3d4:	40040513          	addi	a0,s0,1024
     3d8:	4585                	li	a1,1
     3da:	5d1000ef          	jal	ra,11aa <ADC_ExternalTrigConvCmd>
    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
     3de:	4585                	li	a1,1
     3e0:	4509                	li	a0,2
    TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure = {0};
     3e2:	c402                	sw	zero,8(sp)
     3e4:	c602                	sw	zero,12(sp)
     3e6:	00011823          	sh	zero,16(sp)
    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
     3ea:	077010ef          	jal	ra,1c60 <RCC_APB1PeriphClockCmd>
    TIM_TimeBaseInit(TIM3, &TIM_TimeBaseInitStructure);
     3ee:	400004b7          	lui	s1,0x40000
    TIM_TimeBaseInitStructure.TIM_Prescaler = psc;
     3f2:	08f00793          	li	a5,143
    TIM_TimeBaseInit(TIM3, &TIM_TimeBaseInitStructure);
     3f6:	002c                	addi	a1,sp,8
     3f8:	40048513          	addi	a0,s1,1024 # 40000400 <_eusrstack+0x1ffe0400>
    TIM_TimeBaseInitStructure.TIM_Prescaler = psc;
     3fc:	c43e                	sw	a5,8(sp)
     3fe:	07d00793          	li	a5,125
     402:	c63e                	sw	a5,12(sp)
    TIM_TimeBaseInitStructure.TIM_RepetitionCounter = 0;
     404:	00010823          	sb	zero,16(sp)
    TIM_TimeBaseInit(TIM3, &TIM_TimeBaseInitStructure);
     408:	095010ef          	jal	ra,1c9c <TIM_TimeBaseInit>
    TIM_ARRPreloadConfig(TIM3, ENABLE);
     40c:	40048513          	addi	a0,s1,1024
     410:	4585                	li	a1,1
     412:	171010ef          	jal	ra,1d82 <TIM_ARRPreloadConfig>
    TIM_SelectOutputTrigger(TIM3,TIM_TRGOSource_Update);
     416:	40048513          	addi	a0,s1,1024
     41a:	02000593          	li	a1,32
     41e:	181010ef          	jal	ra,1d9e <TIM_SelectOutputTrigger>

    /* timer3 初始化 */
    timer3_init(125,144-1); //8KHz

    ADC_RegularChannelConfig(ADC1, ADC_Channel_0, 1, ADC_SampleTime_239Cycles5 );
     422:	40040513          	addi	a0,s0,1024
     426:	469d                	li	a3,7
     428:	4605                	li	a2,1
     42a:	4581                	li	a1,0
     42c:	4c1000ef          	jal	ra,10ec <ADC_RegularChannelConfig>

}
     430:	40b6                	lw	ra,76(sp)
     432:	4426                	lw	s0,72(sp)
     434:	4496                	lw	s1,68(sp)
     436:	6161                	addi	sp,sp,80
     438:	8082                	ret

0000043a <DMA1_Channel1_IRQHandler>:
}

/* ADC DMA 中断服务函数 */
__attribute__((interrupt("WCH-Interrupt-fast")))
void DMA1_Channel1_IRQHandler(void)
{
     43a:	1141                	addi	sp,sp,-16
    DMA_ClearITPendingBit(DMA1_IT_TC1);
     43c:	4509                	li	a0,2
{
     43e:	c622                	sw	s0,12(sp)
     440:	c426                	sw	s1,8(sp)
     442:	c24a                	sw	s2,4(sp)
    DMA_ClearITPendingBit(DMA1_IT_TC1);
     444:	05e010ef          	jal	ra,14a2 <DMA_ClearITPendingBit>

    switch(speakerLoudMode)
     448:	200007b7          	lui	a5,0x20000
     44c:	1e47a783          	lw	a5,484(a5) # 200001e4 <speakerLoudMode>
     450:	cfa5                	beqz	a5,4c8 <DMA1_Channel1_IRQHandler+0x8e>
     452:	4705                	li	a4,1
     454:	06e79463          	bne	a5,a4,4bc <DMA1_Channel1_IRQHandler+0x82>
    DMA1_Channel1->CFGR &= (uint16_t)(~DMA_CFGR1_EN); //修改 MADDR/CNTR 时，要先 关闭 DMA CFGR EN位
     458:	40020737          	lui	a4,0x40020
     45c:	4710                	lw	a2,8(a4)
     45e:	66c1                	lui	a3,0x10
     460:	16f9                	addi	a3,a3,-2
     462:	8e75                	and	a2,a2,a3
     464:	c710                	sw	a2,8(a4)
    DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_EN);
     466:	43072583          	lw	a1,1072(a4) # 40020430 <_eusrstack+0x20000430>
    if(adc_buffer_flag == 0)
     46a:	82018613          	addi	a2,gp,-2016 # 20000200 <_edata>
    DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_EN);
     46e:	8eed                	and	a3,a3,a1
     470:	42d72823          	sw	a3,1072(a4)
    if(adc_buffer_flag == 0)
     474:	2214                	lbu	a3,0(a2)
     476:	83418513          	addi	a0,gp,-1996 # 20000214 <adc_data_buffer_1>
     47a:	0ff6f693          	andi	a3,a3,255
    DMA1_Channel1->CFGR &= (uint16_t)(~DMA_CFGR1_EN); //修改 MADDR/CNTR 时，要先 关闭 DMA CFGR EN位
     47e:	00870813          	addi	a6,a4,8
     482:	a3418593          	addi	a1,gp,-1484 # 20000414 <adc_data_buffer_2>
    DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_EN);
     486:	43070713          	addi	a4,a4,1072
    if(adc_buffer_flag == 0)
     48a:	cadd                	beqz	a3,540 <DMA1_Channel1_IRQHandler+0x106>
        adc_buffer_flag = 0;
     48c:	00060023          	sb	zero,0(a2)
        DMA1_Channel1->MADDR = (uint32_t)adc_data_buffer_1;  // adc_data_buffer_2采集完成，切换adc_data_buffer_1
     490:	00a82623          	sw	a0,12(a6)
        DMA2_Channel3->MADDR = (uint32_t)adc_data_buffer_2;  //dac 输出
     494:	c74c                	sw	a1,12(a4)
    DMA2_Channel3->CNTR = ADC_DATA_LENGTH; //更新 DMA传输长度
     496:	400207b7          	lui	a5,0x40020
     49a:	10000693          	li	a3,256
     49e:	42d7aa23          	sw	a3,1076(a5) # 40020434 <_eusrstack+0x20000434>
    DMA2_Channel3->CFGR |= DMA_CFGR1_EN;   //启动 DAC DMA
     4a2:	4307a703          	lw	a4,1072(a5)
    DMA1_Channel1->CNTR = ADC_DATA_LENGTH; //更新 DMA传输长度
     4a6:	00878613          	addi	a2,a5,8
    DMA2_Channel3->CFGR |= DMA_CFGR1_EN;   //启动 DAC DMA
     4aa:	00176713          	ori	a4,a4,1
     4ae:	42e7a823          	sw	a4,1072(a5)
    DMA1_Channel1->CNTR = ADC_DATA_LENGTH; //更新 DMA传输长度
     4b2:	c7d4                	sw	a3,12(a5)
    DMA1_Channel1->CFGR |= DMA_CFGR1_EN;   //启动 ADC DMA
     4b4:	4798                	lw	a4,8(a5)
     4b6:	00176713          	ori	a4,a4,1
     4ba:	c798                	sw	a4,8(a5)
            break;

        default:
            break;
    }  
     4bc:	4432                	lw	s0,12(sp)
     4be:	44a2                	lw	s1,8(sp)
     4c0:	4912                	lw	s2,4(sp)
     4c2:	0141                	addi	sp,sp,16
     4c4:	30200073          	mret
            GPIO_SetBits(GPIOA,GPIO_Pin_7);
     4c8:	40011537          	lui	a0,0x40011
     4cc:	80050513          	addi	a0,a0,-2048 # 40010800 <_eusrstack+0x1fff0800>
     4d0:	08000593          	li	a1,128
     4d4:	544010ef          	jal	ra,1a18 <GPIO_SetBits>
            TIM_Cmd(TIM3, DISABLE); 
     4d8:	40000537          	lui	a0,0x40000
     4dc:	4581                	li	a1,0
     4de:	40050513          	addi	a0,a0,1024 # 40000400 <_eusrstack+0x1ffe0400>
     4e2:	073010ef          	jal	ra,1d54 <TIM_Cmd>
            printf("recore over\r\n");
     4e6:	00007537          	lui	a0,0x7
     4ea:	c7c50513          	addi	a0,a0,-900 # 6c7c <_read+0x12>
     4ee:	5fa020ef          	jal	ra,2ae8 <puts>
  __asm volatile ("csrw 0x800, %0" : : "r" (0x6000) );
     4f2:	6799                	lui	a5,0x6
     4f4:	80079073          	csrw	0x800,a5
    FLASH_Unlock_Fast();
     4f8:	7d7000ef          	jal	ra,14ce <FLASH_Unlock_Fast>
    FLASH_EraseBlock_64K_Fast(PAGE_WRITE_START_ADDR);
     4fc:	08010537          	lui	a0,0x8010
     500:	17ff04b7          	lui	s1,0x17ff0
     504:	7f7000ef          	jal	ra,14fa <FLASH_EraseBlock_64K_Fast>
     508:	08010437          	lui	s0,0x8010
     50c:	61448493          	addi	s1,s1,1556 # 17ff0614 <_data_lma+0x17fe9440>
    for(uint8_t i=0; i<FLASH_PAGE_SIZE/256; i++)
     510:	0801c937          	lui	s2,0x801c
        FLASH_ProgramPage_Fast(PAGE_WRITE_START_ADDR + 256 * i, (uint32_t*)adc_record_data_buffer + 64*i );
     514:	008485b3          	add	a1,s1,s0
     518:	8522                	mv	a0,s0
     51a:	10040413          	addi	s0,s0,256 # 8010100 <_data_lma+0x8008f2c>
     51e:	010010ef          	jal	ra,152e <FLASH_ProgramPage_Fast>
    for(uint8_t i=0; i<FLASH_PAGE_SIZE/256; i++)
     522:	ff2419e3          	bne	s0,s2,514 <DMA1_Channel1_IRQHandler+0xda>
    FLASH_Lock_Fast();
     526:	7c7000ef          	jal	ra,14ec <FLASH_Lock_Fast>
  __asm volatile ("csrw 0x800, %0" : : "r" (0x6088) );
     52a:	6799                	lui	a5,0x6
     52c:	08878793          	addi	a5,a5,136 # 6088 <__muldf3+0x458>
     530:	80079073          	csrw	0x800,a5
     534:	4432                	lw	s0,12(sp)
     536:	44a2                	lw	s1,8(sp)
     538:	4912                	lw	s2,4(sp)
     53a:	0141                	addi	sp,sp,16
     53c:	30200073          	mret
        adc_buffer_flag = 1;
     540:	a21c                	sb	a5,0(a2)
        DMA1_Channel1->MADDR = (uint32_t)adc_data_buffer_2;// adc_data_buffer_1采集完成，切换adc_data_buffer_2
     542:	00b82623          	sw	a1,12(a6)
        DMA2_Channel3->MADDR = (uint32_t)adc_data_buffer_1;//dac 输出，
     546:	c748                	sw	a0,12(a4)
     548:	b7b9                	j	496 <DMA1_Channel1_IRQHandler+0x5c>

0000054a <dac_init>:
    DMA_Init(DMA2_Channel3, &DMA_InitStructure);
//    DMA_Cmd(DMA2_Channel3, ENABLE);
}

void dac_init(void)
{
     54a:	711d                	addi	sp,sp,-96
    GPIO_InitTypeDef GPIO_InitStructure = {0};
    DAC_InitTypeDef  DAC_InitType = {0};

    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
     54c:	4585                	li	a1,1
     54e:	4511                	li	a0,4
{
     550:	ce86                	sw	ra,92(sp)
     552:	cca2                	sw	s0,88(sp)
    GPIO_InitTypeDef GPIO_InitStructure = {0};
     554:	c402                	sw	zero,8(sp)
     556:	c602                	sw	zero,12(sp)
     558:	c802                	sw	zero,16(sp)
    DAC_InitTypeDef  DAC_InitType = {0};
     55a:	ca02                	sw	zero,20(sp)
     55c:	cc02                	sw	zero,24(sp)
     55e:	ce02                	sw	zero,28(sp)
     560:	d002                	sw	zero,32(sp)
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
     562:	6e0010ef          	jal	ra,1c42 <RCC_APB2PeriphClockCmd>
    RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE);
     566:	4585                	li	a1,1
     568:	20000537          	lui	a0,0x20000
     56c:	6f4010ef          	jal	ra,1c60 <RCC_APB1PeriphClockCmd>

    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN; /* 模拟输入 */
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
     570:	40011437          	lui	s0,0x40011
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
     574:	47c1                	li	a5,16
    GPIO_Init(GPIOA, &GPIO_InitStructure);
     576:	002c                	addi	a1,sp,8
     578:	80040513          	addi	a0,s0,-2048 # 40010800 <_eusrstack+0x1fff0800>
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
     57c:	847c                	sh	a5,8(sp)
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     57e:	478d                	li	a5,3
     580:	c63e                	sw	a5,12(sp)
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN; /* 模拟输入 */
     582:	c802                	sw	zero,16(sp)
    GPIO_Init(GPIOA, &GPIO_InitStructure);
     584:	00a010ef          	jal	ra,158e <GPIO_Init>
    GPIO_SetBits(GPIOA, GPIO_Pin_4);
     588:	80040513          	addi	a0,s0,-2048
     58c:	45c1                	li	a1,16
     58e:	48a010ef          	jal	ra,1a18 <GPIO_SetBits>

    /* timer8 触发 */
    DAC_InitType.DAC_Trigger = DAC_Trigger_T8_TRGO;
     592:	47b1                	li	a5,12
//    DAC_InitType.DAC_LFSRUnmask_TriangleAmplitude = DAC_TriangleAmplitude_4095;

    /* 使能输出Buffer，减少输出阻抗  */
    DAC_InitType.DAC_OutputBuffer = DAC_OutputBuffer_Enable;

    DAC_Init(DAC_Channel_1, &DAC_InitType);
     594:	084c                	addi	a1,sp,20
     596:	4501                	li	a0,0
    DAC_InitType.DAC_Trigger = DAC_Trigger_T8_TRGO;
     598:	ca3e                	sw	a5,20(sp)
    DAC_InitType.DAC_WaveGeneration = DAC_WaveGeneration_None;
     59a:	cc02                	sw	zero,24(sp)
    DAC_InitType.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
     59c:	d002                	sw	zero,32(sp)
    DAC_Init(DAC_Channel_1, &DAC_InitType);
     59e:	441000ef          	jal	ra,11de <DAC_Init>
    DAC_Cmd(DAC_Channel_1, ENABLE);
     5a2:	4585                	li	a1,1
     5a4:	4501                	li	a0,0
     5a6:	46d000ef          	jal	ra,1212 <DAC_Cmd>
    RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA2, ENABLE);
     5aa:	4585                	li	a1,1
     5ac:	4509                	li	a0,2
    DMA_InitTypeDef DMA_InitStructure={0};
     5ae:	d202                	sw	zero,36(sp)
     5b0:	d402                	sw	zero,40(sp)
     5b2:	d602                	sw	zero,44(sp)
     5b4:	d802                	sw	zero,48(sp)
     5b6:	da02                	sw	zero,52(sp)
     5b8:	dc02                	sw	zero,56(sp)
     5ba:	de02                	sw	zero,60(sp)
     5bc:	c082                	sw	zero,64(sp)
     5be:	c282                	sw	zero,68(sp)
     5c0:	c482                	sw	zero,72(sp)
     5c2:	c682                	sw	zero,76(sp)
    RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA2, ENABLE);
     5c4:	660010ef          	jal	ra,1c24 <RCC_AHBPeriphClockCmd>
    DMA_StructInit( &DMA_InitStructure);
     5c8:	1048                	addi	a0,sp,36
     5ca:	681000ef          	jal	ra,144a <DMA_StructInit>
    DMA_InitStructure.DMA_PeripheralBaseAddr = (u32)&(DAC->R12BDHR1);
     5ce:	400077b7          	lui	a5,0x40007
     5d2:	40878793          	addi	a5,a5,1032 # 40007408 <_eusrstack+0x1ffe7408>
     5d6:	d23e                	sw	a5,36(sp)
    DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
     5d8:	47c1                	li	a5,16
     5da:	d63e                	sw	a5,44(sp)
    DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
     5dc:	08000793          	li	a5,128
     5e0:	dc3e                	sw	a5,56(sp)
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
     5e2:	10000793          	li	a5,256
     5e6:	de3e                	sw	a5,60(sp)
    DMA_Init(DMA2_Channel3, &DMA_InitStructure);
     5e8:	40020537          	lui	a0,0x40020
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
     5ec:	40000793          	li	a5,1024
    DMA_Init(DMA2_Channel3, &DMA_InitStructure);
     5f0:	104c                	addi	a1,sp,36
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
     5f2:	c0be                	sw	a5,64(sp)
    DMA_Init(DMA2_Channel3, &DMA_InitStructure);
     5f4:	43050513          	addi	a0,a0,1072 # 40020430 <_eusrstack+0x20000430>
    DMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
     5f8:	678d                	lui	a5,0x3
     5fa:	c4be                	sw	a5,72(sp)
    DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
     5fc:	da02                	sw	zero,52(sp)
    DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
     5fe:	c282                	sw	zero,68(sp)
    DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
     600:	c682                	sw	zero,76(sp)
    DMA_Init(DMA2_Channel3, &DMA_InitStructure);
     602:	609000ef          	jal	ra,140a <DMA_Init>

    /* 使能DAC DMA */
    dac_dma_init();
    DAC_DMACmd(DAC_Channel_1, ENABLE);
     606:	4585                	li	a1,1
     608:	4501                	li	a0,0
     60a:	42d000ef          	jal	ra,1236 <DAC_DMACmd>
    RCC_APB2PeriphClockCmd( RCC_APB2Periph_TIM8, ENABLE );
     60e:	4585                	li	a1,1
     610:	6509                	lui	a0,0x2
    TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure={0};
     612:	d202                	sw	zero,36(sp)
     614:	d402                	sw	zero,40(sp)
     616:	02011623          	sh	zero,44(sp)
    RCC_APB2PeriphClockCmd( RCC_APB2Periph_TIM8, ENABLE );
     61a:	628010ef          	jal	ra,1c42 <RCC_APB2PeriphClockCmd>
    TIM_TimeBaseInit( TIM8, &TIM_TimeBaseInitStructure);
     61e:	40013437          	lui	s0,0x40013
    TIM_TimeBaseInitStructure.TIM_Prescaler = psc;
     622:	08f00793          	li	a5,143
    TIM_TimeBaseInit( TIM8, &TIM_TimeBaseInitStructure);
     626:	104c                	addi	a1,sp,36
     628:	40040513          	addi	a0,s0,1024 # 40013400 <_eusrstack+0x1fff3400>
    TIM_TimeBaseInitStructure.TIM_Prescaler = psc;
     62c:	d23e                	sw	a5,36(sp)
     62e:	07d00793          	li	a5,125
     632:	d43e                	sw	a5,40(sp)
    TIM_TimeBaseInitStructure.TIM_RepetitionCounter =  0x00;
     634:	02010623          	sb	zero,44(sp)
    TIM_TimeBaseInit( TIM8, &TIM_TimeBaseInitStructure);
     638:	664010ef          	jal	ra,1c9c <TIM_TimeBaseInit>
    TIM_SelectOutputTrigger(TIM8, TIM_TRGOSource_Update);
     63c:	40040513          	addi	a0,s0,1024
     640:	02000593          	li	a1,32
     644:	75a010ef          	jal	ra,1d9e <TIM_SelectOutputTrigger>

    /* 定时器8初始化 */
    timer8_init(125,144-1); //8KHz
}
     648:	40f6                	lw	ra,92(sp)
     64a:	4466                	lw	s0,88(sp)
     64c:	6125                	addi	sp,sp,96
     64e:	8082                	ret

00000650 <button_init>:
  * @param  active_level: pressed GPIO level.
  * @param  button_id: the button id.
  * @retval None
  */
void button_init(struct Button* handle, uint8_t(*pin_level)(uint8_t), uint8_t active_level, uint8_t button_id)
{
     650:	1101                	addi	sp,sp,-32
     652:	ca26                	sw	s1,20(sp)
     654:	c64e                	sw	s3,12(sp)
     656:	84b2                	mv	s1,a2
     658:	89ae                	mv	s3,a1
	memset(handle, 0, sizeof(struct Button));
     65a:	02c00613          	li	a2,44
     65e:	4581                	li	a1,0
{
     660:	ce06                	sw	ra,28(sp)
     662:	cc22                	sw	s0,24(sp)
     664:	c84a                	sw	s2,16(sp)
     666:	842a                	mv	s0,a0
     668:	8936                	mv	s2,a3
	memset(handle, 0, sizeof(struct Button));
     66a:	3e59                	jal	200 <memset>
	handle->event = (uint8_t)NONE_PRESS;
     66c:	08000793          	li	a5,128
     670:	a03e                	sh	a5,2(s0)
	handle->hal_button_Level = pin_level;
     672:	01342423          	sw	s3,8(s0)
	handle->button_level = handle->hal_button_Level(button_id);
     676:	854a                	mv	a0,s2
     678:	9982                	jalr	s3
     67a:	203e                	lhu	a5,2(s0)
     67c:	053e                	slli	a0,a0,0xf
	handle->active_level = active_level;
     67e:	8885                	andi	s1,s1,1
	handle->button_level = handle->hal_button_Level(button_id);
     680:	07c6                	slli	a5,a5,0x11
     682:	83c5                	srli	a5,a5,0x11
     684:	8fc9                	or	a5,a5,a0
	handle->active_level = active_level;
     686:	7571                	lui	a0,0xffffc
     688:	157d                	addi	a0,a0,-1
     68a:	04ba                	slli	s1,s1,0xe
     68c:	8fe9                	and	a5,a5,a0
     68e:	8fc5                	or	a5,a5,s1
     690:	a03e                	sh	a5,2(s0)
	handle->button_id = button_id;
     692:	01240223          	sb	s2,4(s0)
}
     696:	40f2                	lw	ra,28(sp)
     698:	4462                	lw	s0,24(sp)
     69a:	44d2                	lw	s1,20(sp)
     69c:	4942                	lw	s2,16(sp)
     69e:	49b2                	lw	s3,12(sp)
     6a0:	6105                	addi	sp,sp,32
     6a2:	8082                	ret

000006a4 <button_attach>:
  * @param  cb: callback function.
  * @retval None
  */
void button_attach(struct Button* handle, PressEvent event, BtnCallback cb)
{
	handle->cb[event] = cb;
     6a4:	058a                	slli	a1,a1,0x2
     6a6:	95aa                	add	a1,a1,a0
     6a8:	c5d0                	sw	a2,12(a1)
}
     6aa:	8082                	ret

000006ac <button_handler>:
  * @brief  Button driver core function, driver state machine.
  * @param  handle: the button handle strcut.
  * @retval None
  */
void button_handler(struct Button* handle)
{
     6ac:	1141                	addi	sp,sp,-16
     6ae:	c422                	sw	s0,8(sp)
     6b0:	c606                	sw	ra,12(sp)
	uint8_t read_gpio_level = handle->hal_button_Level(handle->button_id);
     6b2:	451c                	lw	a5,8(a0)
{
     6b4:	842a                	mv	s0,a0
	uint8_t read_gpio_level = handle->hal_button_Level(handle->button_id);
     6b6:	2148                	lbu	a0,4(a0)
     6b8:	9782                	jalr	a5

	//ticks counter working..
	if((handle->state) > 0) handle->ticks++;
     6ba:	203e                	lhu	a5,2(s0)
     6bc:	7007f793          	andi	a5,a5,1792
     6c0:	c781                	beqz	a5,6c8 <button_handler+0x1c>
     6c2:	201e                	lhu	a5,0(s0)
     6c4:	0785                	addi	a5,a5,1
     6c6:	a01e                	sh	a5,0(s0)

	/*------------button debounce handle---------------*/
	if(read_gpio_level != handle->button_level) { //not equal to prev one
     6c8:	401c                	lw	a5,0(s0)
     6ca:	01f7d693          	srli	a3,a5,0x1f
     6ce:	06a68f63          	beq	a3,a0,74c <button_handler+0xa0>
		//continue read 3 times same new level change
		if(++(handle->debounce_cnt) >= DEBOUNCE_TICKS) {
     6d2:	203a                	lhu	a4,2(s0)
     6d4:	83ed                	srli	a5,a5,0x1b
     6d6:	0785                	addi	a5,a5,1
     6d8:	7671                	lui	a2,0xffffc
     6da:	8b9d                	andi	a5,a5,7
     6dc:	7ff60613          	addi	a2,a2,2047 # ffffc7ff <_eusrstack+0xdffdc7ff>
     6e0:	00b79593          	slli	a1,a5,0xb
     6e4:	8f71                	and	a4,a4,a2
     6e6:	8f4d                	or	a4,a4,a1
     6e8:	a03a                	sh	a4,2(s0)
     6ea:	4589                	li	a1,2
     6ec:	02f5e063          	bltu	a1,a5,70c <button_handler+0x60>
	} else { //leved not change ,counter reset.
		handle->debounce_cnt = 0;
	}

	/*-----------------State machine-------------------*/
	switch (handle->state) {
     6f0:	4018                	lw	a4,0(s0)
     6f2:	4615                	li	a2,5
     6f4:	01875793          	srli	a5,a4,0x18
     6f8:	8b9d                	andi	a5,a5,7
     6fa:	04f66163          	bltu	a2,a5,73c <button_handler+0x90>
     6fe:	661d                	lui	a2,0x7
     700:	078a                	slli	a5,a5,0x2
     702:	c8c60613          	addi	a2,a2,-884 # 6c8c <_read+0x22>
     706:	97b2                	add	a5,a5,a2
     708:	439c                	lw	a5,0(a5)
     70a:	8782                	jr	a5
			handle->button_level = read_gpio_level;
     70c:	00157693          	andi	a3,a0,1
     710:	0746                	slli	a4,a4,0x11
     712:	00f69793          	slli	a5,a3,0xf
     716:	8345                	srli	a4,a4,0x11
     718:	8f5d                	or	a4,a4,a5
			handle->debounce_cnt = 0;
     71a:	8f71                	and	a4,a4,a2
     71c:	a03a                	sh	a4,2(s0)
     71e:	bfc9                	j	6f0 <button_handler+0x44>
			handle->state = 0;
		}
		break;

	case 5:
		if(handle->button_level == handle->active_level) {
     720:	8379                	srli	a4,a4,0x1e
     722:	8b05                	andi	a4,a4,1
			//continue hold trigger
			handle->event = (uint8_t)LONG_PRESS_HOLD;
     724:	203e                	lhu	a5,2(s0)
		if(handle->button_level == handle->active_level) {
     726:	12d70c63          	beq	a4,a3,85e <__stack_size+0x5e>
			EVENT_CB(LONG_PRESS_HOLD);

		} else { //releasd
			handle->event = (uint8_t)PRESS_UP;
     72a:	f0f7f793          	andi	a5,a5,-241
			EVENT_CB(PRESS_UP);
     72e:	4818                	lw	a4,16(s0)
			handle->event = (uint8_t)PRESS_UP;
     730:	0107e793          	ori	a5,a5,16
     734:	a03e                	sh	a5,2(s0)
			EVENT_CB(PRESS_UP);
     736:	c319                	beqz	a4,73c <button_handler+0x90>
				EVENT_CB(DOUBLE_CLICK); // repeat hit
     738:	8522                	mv	a0,s0
     73a:	9702                	jalr	a4
			handle->state = 0; //reset
		}
		break;
    default:
        handle->state = 0; //reset
     73c:	203e                	lhu	a5,2(s0)
     73e:	8ff7f793          	andi	a5,a5,-1793
     742:	a03e                	sh	a5,2(s0)
        break;
	}
}
     744:	40b2                	lw	ra,12(sp)
     746:	4422                	lw	s0,8(sp)
     748:	0141                	addi	sp,sp,16
     74a:	8082                	ret
		handle->debounce_cnt = 0;
     74c:	203e                	lhu	a5,2(s0)
     74e:	7771                	lui	a4,0xffffc
     750:	7ff70713          	addi	a4,a4,2047 # ffffc7ff <_eusrstack+0xdffdc7ff>
     754:	8ff9                	and	a5,a5,a4
     756:	a03e                	sh	a5,2(s0)
     758:	bf61                	j	6f0 <button_handler+0x44>
		if(handle->button_level == handle->active_level) {	//start press down
     75a:	8379                	srli	a4,a4,0x1e
     75c:	8b05                	andi	a4,a4,1
			handle->event = (uint8_t)PRESS_DOWN;
     75e:	203e                	lhu	a5,2(s0)
		if(handle->button_level == handle->active_level) {	//start press down
     760:	0cd70f63          	beq	a4,a3,83e <__stack_size+0x3e>
			handle->event = (uint8_t)NONE_PRESS;
     764:	f0f7f793          	andi	a5,a5,-241
     768:	0807e793          	ori	a5,a5,128
     76c:	a03e                	sh	a5,2(s0)
}
     76e:	40b2                	lw	ra,12(sp)
     770:	4422                	lw	s0,8(sp)
     772:	0141                	addi	sp,sp,16
     774:	8082                	ret
		if(handle->button_level == handle->active_level) { //press down again
     776:	8379                	srli	a4,a4,0x1e
     778:	8b05                	andi	a4,a4,1
     77a:	10d70063          	beq	a4,a3,87a <__stack_size+0x7a>
		} else if(handle->ticks > SHORT_TICKS) { //released timeout
     77e:	201a                	lhu	a4,0(s0)
     780:	03c00793          	li	a5,60
     784:	fce7f0e3          	bgeu	a5,a4,744 <button_handler+0x98>
			if(handle->repeat == 1) {
     788:	203e                	lhu	a5,2(s0)
     78a:	4685                	li	a3,1
     78c:	00f7f713          	andi	a4,a5,15
     790:	12d70163          	beq	a4,a3,8b2 <__stack_size+0xb2>
			} else if(handle->repeat == 2) {
     794:	4689                	li	a3,2
     796:	fad713e3          	bne	a4,a3,73c <button_handler+0x90>
				handle->event = (uint8_t)DOUBLE_CLICK;
     79a:	f0f7f793          	andi	a5,a5,-241
				EVENT_CB(DOUBLE_CLICK); // repeat hit
     79e:	4c58                	lw	a4,28(s0)
				handle->event = (uint8_t)DOUBLE_CLICK;
     7a0:	0407e793          	ori	a5,a5,64
     7a4:	a03e                	sh	a5,2(s0)
				EVENT_CB(DOUBLE_CLICK); // repeat hit
     7a6:	fb49                	bnez	a4,738 <button_handler+0x8c>
     7a8:	bf51                	j	73c <button_handler+0x90>
		if(handle->button_level != handle->active_level) { //released press up
     7aa:	8379                	srli	a4,a4,0x1e
     7ac:	8b05                	andi	a4,a4,1
     7ae:	06d70263          	beq	a4,a3,812 <__stack_size+0x12>
			handle->event = (uint8_t)PRESS_UP;
     7b2:	203e                	lhu	a5,2(s0)
			EVENT_CB(PRESS_UP);
     7b4:	4818                	lw	a4,16(s0)
			handle->event = (uint8_t)PRESS_UP;
     7b6:	f0f7f793          	andi	a5,a5,-241
     7ba:	0107e793          	ori	a5,a5,16
     7be:	a03e                	sh	a5,2(s0)
			EVENT_CB(PRESS_UP);
     7c0:	c319                	beqz	a4,7c6 <button_handler+0x11a>
     7c2:	8522                	mv	a0,s0
     7c4:	9702                	jalr	a4
			handle->ticks = 0;
     7c6:	4018                	lw	a4,0(s0)
     7c8:	f8ff07b7          	lui	a5,0xf8ff0
     7cc:	8ff9                	and	a5,a5,a4
     7ce:	02000737          	lui	a4,0x2000
     7d2:	8fd9                	or	a5,a5,a4
     7d4:	c01c                	sw	a5,0(s0)
}
     7d6:	40b2                	lw	ra,12(sp)
     7d8:	4422                	lw	s0,8(sp)
     7da:	0141                	addi	sp,sp,16
     7dc:	8082                	ret
		if(handle->button_level != handle->active_level) { //released press up
     7de:	8379                	srli	a4,a4,0x1e
     7e0:	8b05                	andi	a4,a4,1
     7e2:	02d70263          	beq	a4,a3,806 <__stack_size+0x6>
			handle->event = (uint8_t)PRESS_UP;
     7e6:	203e                	lhu	a5,2(s0)
			EVENT_CB(PRESS_UP);
     7e8:	4818                	lw	a4,16(s0)
			handle->event = (uint8_t)PRESS_UP;
     7ea:	f0f7f793          	andi	a5,a5,-241
     7ee:	0107e793          	ori	a5,a5,16
     7f2:	a03e                	sh	a5,2(s0)
			EVENT_CB(PRESS_UP);
     7f4:	c319                	beqz	a4,7fa <button_handler+0x14e>
     7f6:	8522                	mv	a0,s0
     7f8:	9702                	jalr	a4
			if(handle->ticks < SHORT_TICKS) {
     7fa:	201a                	lhu	a4,0(s0)
     7fc:	03b00793          	li	a5,59
     800:	fce7f3e3          	bgeu	a5,a4,7c6 <button_handler+0x11a>
     804:	bf25                	j	73c <button_handler+0x90>
		}else if(handle->ticks > SHORT_TICKS){ // long press up
     806:	201a                	lhu	a4,0(s0)
     808:	03c00793          	li	a5,60
     80c:	f2e7e8e3          	bltu	a5,a4,73c <button_handler+0x90>
     810:	bf15                	j	744 <button_handler+0x98>
		} else if(handle->ticks > LONG_TICKS) {
     812:	201a                	lhu	a4,0(s0)
     814:	0c800793          	li	a5,200
     818:	f2e7f6e3          	bgeu	a5,a4,744 <button_handler+0x98>
			handle->event = (uint8_t)LONG_PRESS_START;
     81c:	203e                	lhu	a5,2(s0)
			EVENT_CB(LONG_PRESS_START);
     81e:	5018                	lw	a4,32(s0)
			handle->event = (uint8_t)LONG_PRESS_START;
     820:	f0f7f793          	andi	a5,a5,-241
     824:	0507e793          	ori	a5,a5,80
     828:	a03e                	sh	a5,2(s0)
			EVENT_CB(LONG_PRESS_START);
     82a:	c319                	beqz	a4,830 <__stack_size+0x30>
     82c:	8522                	mv	a0,s0
     82e:	9702                	jalr	a4
			handle->state = 5;
     830:	203e                	lhu	a5,2(s0)
     832:	8ff7f793          	andi	a5,a5,-1793
     836:	5007e793          	ori	a5,a5,1280
     83a:	a03e                	sh	a5,2(s0)
     83c:	b721                	j	744 <button_handler+0x98>
			EVENT_CB(PRESS_DOWN);
     83e:	4458                	lw	a4,12(s0)
			handle->event = (uint8_t)PRESS_DOWN;
     840:	f0f7f793          	andi	a5,a5,-241
     844:	a03e                	sh	a5,2(s0)
			EVENT_CB(PRESS_DOWN);
     846:	c319                	beqz	a4,84c <__stack_size+0x4c>
     848:	8522                	mv	a0,s0
     84a:	9702                	jalr	a4
			handle->ticks = 0;
     84c:	4018                	lw	a4,0(s0)
     84e:	f8f007b7          	lui	a5,0xf8f00
     852:	8ff9                	and	a5,a5,a4
     854:	01010737          	lui	a4,0x1010
     858:	8fd9                	or	a5,a5,a4
     85a:	c01c                	sw	a5,0(s0)
     85c:	b5e5                	j	744 <button_handler+0x98>
			handle->event = (uint8_t)LONG_PRESS_HOLD;
     85e:	f0f7f793          	andi	a5,a5,-241
			EVENT_CB(LONG_PRESS_HOLD);
     862:	02442303          	lw	t1,36(s0)
			handle->event = (uint8_t)LONG_PRESS_HOLD;
     866:	0607e793          	ori	a5,a5,96
     86a:	a03e                	sh	a5,2(s0)
			EVENT_CB(LONG_PRESS_HOLD);
     86c:	ec030ce3          	beqz	t1,744 <button_handler+0x98>
     870:	8522                	mv	a0,s0
}
     872:	4422                	lw	s0,8(sp)
     874:	40b2                	lw	ra,12(sp)
     876:	0141                	addi	sp,sp,16
			EVENT_CB(LONG_PRESS_HOLD);
     878:	8302                	jr	t1
			handle->event = (uint8_t)PRESS_DOWN;
     87a:	203e                	lhu	a5,2(s0)
			EVENT_CB(PRESS_DOWN);
     87c:	4458                	lw	a4,12(s0)
			handle->event = (uint8_t)PRESS_DOWN;
     87e:	f0f7f793          	andi	a5,a5,-241
     882:	a03e                	sh	a5,2(s0)
			EVENT_CB(PRESS_DOWN);
     884:	c701                	beqz	a4,88c <__stack_size+0x8c>
     886:	8522                	mv	a0,s0
     888:	9702                	jalr	a4
     88a:	203e                	lhu	a5,2(s0)
			handle->repeat++;
     88c:	203a                	lhu	a4,2(s0)
     88e:	9bc1                	andi	a5,a5,-16
			EVENT_CB(PRESS_REPEAT); // repeat hit
     890:	4854                	lw	a3,20(s0)
			handle->repeat++;
     892:	0705                	addi	a4,a4,1
     894:	8b3d                	andi	a4,a4,15
     896:	8fd9                	or	a5,a5,a4
     898:	a03e                	sh	a5,2(s0)
			EVENT_CB(PRESS_REPEAT); // repeat hit
     89a:	c299                	beqz	a3,8a0 <__stack_size+0xa0>
     89c:	8522                	mv	a0,s0
     89e:	9682                	jalr	a3
			handle->ticks = 0;
     8a0:	4018                	lw	a4,0(s0)
     8a2:	f8ff07b7          	lui	a5,0xf8ff0
     8a6:	8ff9                	and	a5,a5,a4
     8a8:	03000737          	lui	a4,0x3000
     8ac:	8fd9                	or	a5,a5,a4
     8ae:	c01c                	sw	a5,0(s0)
     8b0:	bd51                	j	744 <button_handler+0x98>
				handle->event = (uint8_t)SINGLE_CLICK;
     8b2:	f0f7f793          	andi	a5,a5,-241
				EVENT_CB(SINGLE_CLICK);
     8b6:	4c18                	lw	a4,24(s0)
				handle->event = (uint8_t)SINGLE_CLICK;
     8b8:	0307e793          	ori	a5,a5,48
     8bc:	a03e                	sh	a5,2(s0)
				EVENT_CB(SINGLE_CLICK);
     8be:	e6071de3          	bnez	a4,738 <button_handler+0x8c>
     8c2:	bdad                	j	73c <button_handler+0x90>

000008c4 <button_start>:
  * @param  handle: target handle strcut.
  * @retval 0: succeed. -1: already exist.
  */
int button_start(struct Button* handle)
{
	struct Button* target = head_handle;
     8c4:	82418713          	addi	a4,gp,-2012 # 20000204 <head_handle>
     8c8:	4314                	lw	a3,0(a4)
	while(target) {
     8ca:	ca89                	beqz	a3,8dc <button_start+0x18>
		if(target == handle) return -1;	//already exist.
     8cc:	00a68c63          	beq	a3,a0,8e4 <button_start+0x20>
     8d0:	87b6                	mv	a5,a3
     8d2:	a019                	j	8d8 <button_start+0x14>
     8d4:	00f50863          	beq	a0,a5,8e4 <button_start+0x20>
		target = target->next;
     8d8:	579c                	lw	a5,40(a5)
	while(target) {
     8da:	ffed                	bnez	a5,8d4 <button_start+0x10>
	}
	handle->next = head_handle;
     8dc:	d514                	sw	a3,40(a0)
	head_handle = handle;
     8de:	c308                	sw	a0,0(a4)
	return 0;
     8e0:	4501                	li	a0,0
     8e2:	8082                	ret
		if(target == handle) return -1;	//already exist.
     8e4:	557d                	li	a0,-1
}
     8e6:	8082                	ret

000008e8 <button_ticks>:
  * @brief  background ticks, timer repeat invoking interval 5ms.
  * @param  None.
  * @retval None
  */
void button_ticks()
{
     8e8:	1141                	addi	sp,sp,-16
     8ea:	c422                	sw	s0,8(sp)
	struct Button* target;
	for(target=head_handle; target; target=target->next) {
     8ec:	8241a403          	lw	s0,-2012(gp) # 20000204 <head_handle>
{
     8f0:	c606                	sw	ra,12(sp)
	for(target=head_handle; target; target=target->next) {
     8f2:	c409                	beqz	s0,8fc <button_ticks+0x14>
		button_handler(target);
     8f4:	8522                	mv	a0,s0
     8f6:	3b5d                	jal	6ac <button_handler>
	for(target=head_handle; target; target=target->next) {
     8f8:	5400                	lw	s0,40(s0)
     8fa:	fc6d                	bnez	s0,8f4 <button_ticks+0xc>
	}
}
     8fc:	40b2                	lw	ra,12(sp)
     8fe:	4422                	lw	s0,8(sp)
     900:	0141                	addi	sp,sp,16
     902:	8082                	ret

00000904 <button_record_long_press_start_handler>:
/* 长按RECORD 指示灯亮后开始录音 */
void button_record_long_press_start_handler(void* btn)
{
    speakerLoudMode = RECORE_MODE;
    /* 录音模式 */
    TIM_Cmd(TIM8, DISABLE);  // 关闭DAC 播放
     904:	40013537          	lui	a0,0x40013
{
     908:	1141                	addi	sp,sp,-16
    TIM_Cmd(TIM8, DISABLE);  // 关闭DAC 播放
     90a:	4581                	li	a1,0
     90c:	40050513          	addi	a0,a0,1024 # 40013400 <_eusrstack+0x1fff3400>
{
     910:	c606                	sw	ra,12(sp)
    speakerLoudMode = RECORE_MODE;
     912:	8001a223          	sw	zero,-2044(gp) # 200001e4 <speakerLoudMode>
    TIM_Cmd(TIM8, DISABLE);  // 关闭DAC 播放
     916:	43e010ef          	jal	ra,1d54 <TIM_Cmd>
    recorePlayFlag = 1;
     91a:	4785                	li	a5,1
     91c:	200006b7          	lui	a3,0x20000
     920:	1ef68023          	sb	a5,480(a3) # 200001e0 <recorePlayFlag>
    speakLoudFlag = 1;
     924:	20000737          	lui	a4,0x20000
     928:	1ef700a3          	sb	a5,481(a4) # 200001e1 <speakLoudFlag>

    DMA1_Channel1->CFGR &= (uint16_t)(~DMA_CFGR1_EN); //修改 MADDR/CNTR 时，要先 关闭 DMA CFGR EN位
     92c:	400207b7          	lui	a5,0x40020
     930:	4798                	lw	a4,8(a5)
     932:	66c1                	lui	a3,0x10
     934:	16f9                	addi	a3,a3,-2
     936:	8f75                	and	a4,a4,a3
     938:	c798                	sw	a4,8(a5)
    DMA1_Channel1->MADDR = (uint32_t)adc_record_data_buffer;
     93a:	20000737          	lui	a4,0x20000
     93e:	61470713          	addi	a4,a4,1556 # 20000614 <adc_record_data_buffer>
     942:	cbd8                	sw	a4,20(a5)
    DMA1_Channel1->CNTR = ADC_RECORD_DATA_LENGTH; //更新 DMA传输长度
     944:	6719                	lui	a4,0x6
     946:	c7d8                	sw	a4,12(a5)
    DMA1_Channel1->CFGR |= DMA_CFGR1_EN;   //启动 ADC DMA
     948:	4798                	lw	a4,8(a5)

    GPIO_ResetBits(GPIOA,GPIO_Pin_7);
     94a:	40011537          	lui	a0,0x40011
     94e:	08000593          	li	a1,128
    DMA1_Channel1->CFGR |= DMA_CFGR1_EN;   //启动 ADC DMA
     952:	00176713          	ori	a4,a4,1
    GPIO_ResetBits(GPIOA,GPIO_Pin_7);
     956:	80050513          	addi	a0,a0,-2048 # 40010800 <_eusrstack+0x1fff0800>
    DMA1_Channel1->CFGR |= DMA_CFGR1_EN;   //启动 ADC DMA
     95a:	c798                	sw	a4,8(a5)
    GPIO_ResetBits(GPIOA,GPIO_Pin_7);
     95c:	0c0010ef          	jal	ra,1a1c <GPIO_ResetBits>
    TIM_Cmd(TIM3, ENABLE); 
     960:	40000537          	lui	a0,0x40000
     964:	40050513          	addi	a0,a0,1024 # 40000400 <_eusrstack+0x1ffe0400>
     968:	4585                	li	a1,1
     96a:	3ea010ef          	jal	ra,1d54 <TIM_Cmd>

    printf("record long press start \r\n");
}
     96e:	40b2                	lw	ra,12(sp)
    printf("record long press start \r\n");
     970:	00007537          	lui	a0,0x7
     974:	ccc50513          	addi	a0,a0,-820 # 6ccc <_read+0x62>
}
     978:	0141                	addi	sp,sp,16
    printf("record long press start \r\n");
     97a:	16e0206f          	j	2ae8 <puts>

0000097e <read_button_pin>:
    switch(button_id)
     97e:	c511                	beqz	a0,98a <read_button_pin+0xc>
     980:	4785                	li	a5,1
     982:	00f50c63          	beq	a0,a5,99a <read_button_pin+0x1c>
}
     986:	4501                	li	a0,0
     988:	8082                	ret
            return GPIO_ReadInputDataBit(BUTTON_RECORD_PORT,BUTTON_RECORD_PIN);
     98a:	40011537          	lui	a0,0x40011
     98e:	04000593          	li	a1,64
     992:	80050513          	addi	a0,a0,-2048 # 40010800 <_eusrstack+0x1fff0800>
     996:	0780106f          	j	1a0e <GPIO_ReadInputDataBit>
            return GPIO_ReadInputDataBit(BUTTON_PLAY_PORT,BUTTON_PLAY_PIN);
     99a:	40011537          	lui	a0,0x40011
     99e:	6589                	lui	a1,0x2
     9a0:	c0050513          	addi	a0,a0,-1024 # 40010c00 <_eusrstack+0x1fff0c00>
     9a4:	06a0106f          	j	1a0e <GPIO_ReadInputDataBit>

000009a8 <button_play_single_click_handler>:


/* 点击play按钮 播放/暂停 录音 */
void button_play_single_click_handler(void* btn)
{
    printf("play single click\r\n");
     9a8:	00007537          	lui	a0,0x7
{
     9ac:	1141                	addi	sp,sp,-16
    printf("play single click\r\n");
     9ae:	cb850513          	addi	a0,a0,-840 # 6cb8 <_read+0x4e>
{
     9b2:	c606                	sw	ra,12(sp)
    printf("play single click\r\n");
     9b4:	134020ef          	jal	ra,2ae8 <puts>
    speakLoudFlag = 1;
     9b8:	200007b7          	lui	a5,0x20000
     9bc:	4685                	li	a3,1
     9be:	1ed780a3          	sb	a3,481(a5) # 200001e1 <speakLoudFlag>

    if(recorePlayFlag)
     9c2:	200007b7          	lui	a5,0x20000
     9c6:	1e078793          	addi	a5,a5,480 # 200001e0 <recorePlayFlag>
     9ca:	2398                	lbu	a4,0(a5)
     9cc:	0ff77713          	andi	a4,a4,255
     9d0:	c32d                	beqz	a4,a32 <button_play_single_click_handler+0x8a>
    {
        recorePlayFlag = 0;
        TIM_Cmd(TIM3, DISABLE); 
     9d2:	40000537          	lui	a0,0x40000
     9d6:	4581                	li	a1,0
     9d8:	40050513          	addi	a0,a0,1024 # 40000400 <_eusrstack+0x1ffe0400>
        recorePlayFlag = 0;
     9dc:	00078023          	sb	zero,0(a5)
        TIM_Cmd(TIM3, DISABLE); 
     9e0:	374010ef          	jal	ra,1d54 <TIM_Cmd>

        DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_EN); //修改 MADDR/CNTR 时，要先 关闭 DMA CFGR EN位
     9e4:	400207b7          	lui	a5,0x40020
     9e8:	4307a703          	lw	a4,1072(a5) # 40020430 <_eusrstack+0x20000430>
     9ec:	66c1                	lui	a3,0x10
     9ee:	16f9                	addi	a3,a3,-2
     9f0:	8f75                	and	a4,a4,a3
     9f2:	42e7a823          	sw	a4,1072(a5)
       /*DMA2_Channel3 切换为循环模式 */
        DMA2_Channel3->CFGR |= DMA_CFGR1_CIRC;
     9f6:	4307a703          	lw	a4,1072(a5)
        DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_EN); //修改 MADDR/CNTR 时，要先 关闭 DMA CFGR EN位
     9fa:	43078693          	addi	a3,a5,1072
        DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_EN); //修改 MADDR/CNTR 时，要先 关闭 DMA CFGR EN位
          /* 关闭 DMA2_Channel3 循环模式 */
        DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_CIRC);
        TIM_Cmd(TIM8, DISABLE);
    }
}
     9fe:	40b2                	lw	ra,12(sp)
        DMA2_Channel3->CFGR |= DMA_CFGR1_CIRC;
     a00:	02076713          	ori	a4,a4,32
     a04:	42e7a823          	sw	a4,1072(a5)
        DMA2_Channel3->MADDR = (uint32_t)adc_record_data_buffer;
     a08:	20000737          	lui	a4,0x20000
     a0c:	61470713          	addi	a4,a4,1556 # 20000614 <adc_record_data_buffer>
     a10:	c6d8                	sw	a4,12(a3)
        DMA2_Channel3->CNTR = ADC_RECORD_DATA_LENGTH; //更新 DMA传输长度
     a12:	6719                	lui	a4,0x6
     a14:	c2d8                	sw	a4,4(a3)
        DMA2_Channel3->CFGR |= DMA_CFGR1_EN;   //启动 ADC DMA
     a16:	4307a703          	lw	a4,1072(a5)
        TIM_Cmd(TIM8, DISABLE);
     a1a:	40013537          	lui	a0,0x40013
        TIM_Cmd(TIM8, ENABLE);
     a1e:	4585                	li	a1,1
        DMA2_Channel3->CFGR |= DMA_CFGR1_EN;   //启动 ADC DMA
     a20:	00176713          	ori	a4,a4,1
     a24:	42e7a823          	sw	a4,1072(a5)
        TIM_Cmd(TIM8, DISABLE);
     a28:	40050513          	addi	a0,a0,1024 # 40013400 <_eusrstack+0x1fff3400>
}
     a2c:	0141                	addi	sp,sp,16
        TIM_Cmd(TIM8, DISABLE);
     a2e:	3260106f          	j	1d54 <TIM_Cmd>
        recorePlayFlag = 1;
     a32:	a394                	sb	a3,0(a5)
        DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_EN); //修改 MADDR/CNTR 时，要先 关闭 DMA CFGR EN位
     a34:	400207b7          	lui	a5,0x40020
     a38:	4307a683          	lw	a3,1072(a5) # 40020430 <_eusrstack+0x20000430>
     a3c:	6741                	lui	a4,0x10
     a3e:	ffe70613          	addi	a2,a4,-2 # fffe <_data_lma+0x8e2a>
     a42:	8ef1                	and	a3,a3,a2
     a44:	42d7a823          	sw	a3,1072(a5)
        DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_CIRC);
     a48:	4307a683          	lw	a3,1072(a5)
     a4c:	fdf70713          	addi	a4,a4,-33
}
     a50:	40b2                	lw	ra,12(sp)
        DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_CIRC);
     a52:	8f75                	and	a4,a4,a3
     a54:	42e7a823          	sw	a4,1072(a5)
        TIM_Cmd(TIM8, DISABLE);
     a58:	40013537          	lui	a0,0x40013
     a5c:	4581                	li	a1,0
     a5e:	40050513          	addi	a0,a0,1024 # 40013400 <_eusrstack+0x1fff3400>
}
     a62:	0141                	addi	sp,sp,16
        TIM_Cmd(TIM8, DISABLE);
     a64:	2f00106f          	j	1d54 <TIM_Cmd>

00000a68 <button_play_double_click_handler>:

/* 双击 play 按键 启动/暂停 喊话模式 */
void button_play_double_click_handler(void* btn)
{
    printf("play double click\r\n");
     a68:	00007537          	lui	a0,0x7
{
     a6c:	1141                	addi	sp,sp,-16
    printf("play double click\r\n");
     a6e:	ca450513          	addi	a0,a0,-860 # 6ca4 <_read+0x3a>
{
     a72:	c606                	sw	ra,12(sp)
    printf("play double click\r\n");
     a74:	074020ef          	jal	ra,2ae8 <puts>

    recorePlayFlag = 1;
     a78:	200007b7          	lui	a5,0x20000
     a7c:	4705                	li	a4,1
     a7e:	1ee78023          	sb	a4,480(a5) # 200001e0 <recorePlayFlag>

    speakerLoudMode = LOUD_SPEAKER_MODE;

    if(speakLoudFlag)
     a82:	200007b7          	lui	a5,0x20000
     a86:	1e178793          	addi	a5,a5,481 # 200001e1 <speakLoudFlag>
     a8a:	2398                	lbu	a4,0(a5)
    speakerLoudMode = LOUD_SPEAKER_MODE;
     a8c:	4685                	li	a3,1
     a8e:	80d1a223          	sw	a3,-2044(gp) # 200001e4 <speakerLoudMode>
    if(speakLoudFlag)
     a92:	0ff77713          	andi	a4,a4,255
     a96:	c33d                	beqz	a4,afc <button_play_double_click_handler+0x94>
    {
        speakLoudFlag = 0;
     a98:	00078023          	sb	zero,0(a5)
        
        /* 关闭 DMA2_Channel3 循环模式 */
        DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_EN); //修改 MADDR/CNTR 时，要先 关闭 DMA CFGR EN位
     a9c:	400207b7          	lui	a5,0x40020
     aa0:	4307a683          	lw	a3,1072(a5) # 40020430 <_eusrstack+0x20000430>
     aa4:	6741                	lui	a4,0x10
     aa6:	ffe70613          	addi	a2,a4,-2 # fffe <_data_lma+0x8e2a>
     aaa:	8ef1                	and	a3,a3,a2
     aac:	42d7a823          	sw	a3,1072(a5)
        DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_CIRC);
     ab0:	4307a683          	lw	a3,1072(a5)
     ab4:	fdf70713          	addi	a4,a4,-33
        DMA1_Channel1->MADDR = (uint32_t)adc_data_buffer_1;
        DMA1_Channel1->CNTR = ADC_DATA_LENGTH; //更新 DMA传输长度
        DMA1_Channel1->CFGR |= DMA_CFGR1_EN;   //启动 ADC DMA


        TIM_Cmd(TIM3, ENABLE);
     ab8:	40000537          	lui	a0,0x40000
        DMA2_Channel3->CFGR &= (uint16_t)(~DMA_CFGR1_CIRC);
     abc:	8f75                	and	a4,a4,a3
     abe:	42e7a823          	sw	a4,1072(a5)
        DMA1_Channel1->CFGR &= (uint16_t)(~DMA_CFGR1_EN); //修改 MADDR/CNTR 时，要先 关闭 DMA CFGR EN位
     ac2:	4798                	lw	a4,8(a5)
        TIM_Cmd(TIM3, ENABLE);
     ac4:	4585                	li	a1,1
     ac6:	40050513          	addi	a0,a0,1024 # 40000400 <_eusrstack+0x1ffe0400>
        DMA1_Channel1->CFGR &= (uint16_t)(~DMA_CFGR1_EN); //修改 MADDR/CNTR 时，要先 关闭 DMA CFGR EN位
     aca:	8f71                	and	a4,a4,a2
     acc:	c798                	sw	a4,8(a5)
        DMA1_Channel1->MADDR = (uint32_t)adc_data_buffer_1;
     ace:	20000737          	lui	a4,0x20000
     ad2:	21470713          	addi	a4,a4,532 # 20000214 <adc_data_buffer_1>
     ad6:	cbd8                	sw	a4,20(a5)
        DMA1_Channel1->CNTR = ADC_DATA_LENGTH; //更新 DMA传输长度
     ad8:	10000713          	li	a4,256
     adc:	c7d8                	sw	a4,12(a5)
        DMA1_Channel1->CFGR |= DMA_CFGR1_EN;   //启动 ADC DMA
     ade:	4798                	lw	a4,8(a5)
     ae0:	00176713          	ori	a4,a4,1
     ae4:	c798                	sw	a4,8(a5)
        TIM_Cmd(TIM3, ENABLE);
     ae6:	26e010ef          	jal	ra,1d54 <TIM_Cmd>
        speakLoudFlag = 1;
        TIM_Cmd(TIM3, DISABLE);
        TIM_Cmd(TIM8, DISABLE);
    }

}
     aea:	40b2                	lw	ra,12(sp)
        TIM_Cmd(TIM8, DISABLE);
     aec:	40013537          	lui	a0,0x40013
        TIM_Cmd(TIM8, ENABLE);
     af0:	4585                	li	a1,1
        TIM_Cmd(TIM8, DISABLE);
     af2:	40050513          	addi	a0,a0,1024 # 40013400 <_eusrstack+0x1fff3400>
}
     af6:	0141                	addi	sp,sp,16
        TIM_Cmd(TIM8, DISABLE);
     af8:	25c0106f          	j	1d54 <TIM_Cmd>
        TIM_Cmd(TIM3, DISABLE);
     afc:	40000537          	lui	a0,0x40000
     b00:	4581                	li	a1,0
     b02:	40050513          	addi	a0,a0,1024 # 40000400 <_eusrstack+0x1ffe0400>
        speakLoudFlag = 1;
     b06:	a394                	sb	a3,0(a5)
        TIM_Cmd(TIM3, DISABLE);
     b08:	24c010ef          	jal	ra,1d54 <TIM_Cmd>
}
     b0c:	40b2                	lw	ra,12(sp)
        TIM_Cmd(TIM8, DISABLE);
     b0e:	40013537          	lui	a0,0x40013
     b12:	4581                	li	a1,0
     b14:	40050513          	addi	a0,a0,1024 # 40013400 <_eusrstack+0x1fff3400>
}
     b18:	0141                	addi	sp,sp,16
        TIM_Cmd(TIM8, DISABLE);
     b1a:	23a0106f          	j	1d54 <TIM_Cmd>

00000b1e <my_button_init>:

void my_button_init(void)
{
     b1e:	1101                	addi	sp,sp,-32
    RCC_APB2PeriphClockCmd(BUTTON_RECORD_CLK|BUTTON_PLAY_CLK, ENABLE );
     b20:	4585                	li	a1,1
     b22:	4531                	li	a0,12
{
     b24:	ce06                	sw	ra,28(sp)
     b26:	cc22                	sw	s0,24(sp)
     b28:	ca26                	sw	s1,20(sp)
    GPIO_InitTypeDef GPIO_InitStructure={0};
     b2a:	c202                	sw	zero,4(sp)
     b2c:	c402                	sw	zero,8(sp)
     b2e:	c602                	sw	zero,12(sp)
    RCC_APB2PeriphClockCmd(BUTTON_RECORD_CLK|BUTTON_PLAY_CLK, ENABLE );
     b30:	112010ef          	jal	ra,1c42 <RCC_APB2PeriphClockCmd>
    GPIO_Init(BUTTON_RECORD_PORT, &GPIO_InitStructure);
     b34:	40011437          	lui	s0,0x40011
    GPIO_InitStructure.GPIO_Pin = BUTTON_RECORD_PIN;  /* button_record */
     b38:	04000793          	li	a5,64
    GPIO_Init(BUTTON_RECORD_PORT, &GPIO_InitStructure);
     b3c:	004c                	addi	a1,sp,4
     b3e:	80040513          	addi	a0,s0,-2048 # 40010800 <_eusrstack+0x1fff0800>
    GPIO_InitStructure.GPIO_Pin = BUTTON_RECORD_PIN;  /* button_record */
     b42:	827c                	sh	a5,4(sp)
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
     b44:	04800793          	li	a5,72
     b48:	c63e                	sw	a5,12(sp)
    GPIO_Init(BUTTON_RECORD_PORT, &GPIO_InitStructure);
     b4a:	245000ef          	jal	ra,158e <GPIO_Init>
    GPIO_InitStructure.GPIO_Pin = BUTTON_PLAY_PIN;  /* button_play */
     b4e:	6789                	lui	a5,0x2
    GPIO_Init(BUTTON_PLAY_PORT, &GPIO_InitStructure);
     b50:	004c                	addi	a1,sp,4
     b52:	c0040513          	addi	a0,s0,-1024
    GPIO_InitStructure.GPIO_Pin = BUTTON_PLAY_PIN;  /* button_play */
     b56:	827c                	sh	a5,4(sp)
    my_button_gpio_init();

    /* 初始化按键对象 */
    button_init(&buttonRecord, read_button_pin, 0, BUTTON_RECORD_ID);
     b58:	2000c437          	lui	s0,0x2000c
    GPIO_Init(BUTTON_PLAY_PORT, &GPIO_InitStructure);
     b5c:	233000ef          	jal	ra,158e <GPIO_Init>
    button_init(&buttonRecord, read_button_pin, 0, BUTTON_RECORD_ID);
     b60:	000014b7          	lui	s1,0x1
     b64:	4681                	li	a3,0
     b66:	97e48593          	addi	a1,s1,-1666 # 97e <read_button_pin>
     b6a:	64040513          	addi	a0,s0,1600 # 2000c640 <buttonRecord>
     b6e:	4601                	li	a2,0
     b70:	34c5                	jal	650 <button_init>
    button_attach(&buttonRecord, LONG_PRESS_START, button_record_long_press_start_handler);
     b72:	00001637          	lui	a2,0x1
     b76:	90460613          	addi	a2,a2,-1788 # 904 <button_record_long_press_start_handler>
     b7a:	4595                	li	a1,5
     b7c:	64040513          	addi	a0,s0,1600
     b80:	3615                	jal	6a4 <button_attach>


    /* 启动按键 */
    button_start(&buttonRecord);
     b82:	64040513          	addi	a0,s0,1600
     b86:	3b3d                	jal	8c4 <button_start>

    button_init(&buttonPlay, read_button_pin, 0, BUTTON_PLAY_ID);
     b88:	2000c437          	lui	s0,0x2000c
     b8c:	4685                	li	a3,1
     b8e:	97e48593          	addi	a1,s1,-1666
     b92:	61440513          	addi	a0,s0,1556 # 2000c614 <buttonPlay>
     b96:	4601                	li	a2,0
     b98:	3c65                	jal	650 <button_init>
    button_attach(&buttonPlay, SINGLE_CLICK, button_play_single_click_handler);
     b9a:	00001637          	lui	a2,0x1
     b9e:	61440513          	addi	a0,s0,1556
     ba2:	9a860613          	addi	a2,a2,-1624 # 9a8 <button_play_single_click_handler>
     ba6:	458d                	li	a1,3
     ba8:	3cf5                	jal	6a4 <button_attach>
    button_attach(&buttonPlay, DOUBLE_CLICK, button_play_double_click_handler);
     baa:	00001637          	lui	a2,0x1
     bae:	a6860613          	addi	a2,a2,-1432 # a68 <button_play_double_click_handler>
     bb2:	4591                	li	a1,4
     bb4:	61440513          	addi	a0,s0,1556
     bb8:	34f5                	jal	6a4 <button_attach>
    button_start(&buttonPlay);
     bba:	61440513          	addi	a0,s0,1556
     bbe:	3319                	jal	8c4 <button_start>
    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
     bc0:	4585                	li	a1,1
     bc2:	4505                	li	a0,1
    TIM_TimeBaseInitStructure.TIM_Prescaler = psc;
     bc4:	6405                	lui	s0,0x1
    TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure = {0};
     bc6:	c202                	sw	zero,4(sp)
     bc8:	c402                	sw	zero,8(sp)
     bca:	00011623          	sh	zero,12(sp)
    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
     bce:	092010ef          	jal	ra,1c60 <RCC_APB1PeriphClockCmd>
    TIM_TimeBaseInitStructure.TIM_Prescaler = psc;
     bd2:	38840793          	addi	a5,s0,904 # 1388 <DMA_DeInit+0x12e>
     bd6:	08f00713          	li	a4,143
    TIM_TimeBaseInit(TIM2, &TIM_TimeBaseInitStructure);
     bda:	004c                	addi	a1,sp,4
     bdc:	40000537          	lui	a0,0x40000
    TIM_TimeBaseInitStructure.TIM_Prescaler = psc;
     be0:	c23a                	sw	a4,4(sp)
     be2:	c43e                	sw	a5,8(sp)
    TIM_TimeBaseInitStructure.TIM_RepetitionCounter = 0;
     be4:	00010623          	sb	zero,12(sp)
    TIM_TimeBaseInit(TIM2, &TIM_TimeBaseInitStructure);
     be8:	0b4010ef          	jal	ra,1c9c <TIM_TimeBaseInit>
    TIM_ARRPreloadConfig(TIM2, ENABLE);
     bec:	4585                	li	a1,1
     bee:	40000537          	lui	a0,0x40000
     bf2:	190010ef          	jal	ra,1d82 <TIM_ARRPreloadConfig>
    TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);
     bf6:	4585                	li	a1,1
     bf8:	40000537          	lui	a0,0x40000
     bfc:	4605                	li	a2,1
     bfe:	170010ef          	jal	ra,1d6e <TIM_ITConfig>
  NVIC->IPRIOR[(uint32_t)(IRQn)] = priority;
     c02:	e000e7b7          	lui	a5,0xe000e
     c06:	f8000713          	li	a4,-128
     c0a:	42e78623          	sb	a4,1068(a5) # e000e42c <_eusrstack+0xbffee42c>
  NVIC->IENR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
     c0e:	1087a223          	sw	s0,260(a5)
    TIM_Cmd(TIM2,ENABLE);
     c12:	4585                	li	a1,1
     c14:	40000537          	lui	a0,0x40000
     c18:	13c010ef          	jal	ra,1d54 <TIM_Cmd>

    /* 启动定时器2，5ms中断一次，用于按键检测 */
    timer2_init(5000,144-1); /* 200hz */
}
     c1c:	40f2                	lw	ra,28(sp)
     c1e:	4462                	lw	s0,24(sp)
     c20:	44d2                	lw	s1,20(sp)
     c22:	6105                	addi	sp,sp,32
     c24:	8082                	ret

00000c26 <TIM2_IRQHandler>:
 *       5ms调用一次，用于检测按键
 */
__attribute__((interrupt("WCH-Interrupt-fast")))
void TIM2_IRQHandler(void)
{
    if(TIM_GetITStatus(TIM2, TIM_IT_Update) != RESET) //检查TIM2中断是否发生
     c26:	4585                	li	a1,1
     c28:	40000537          	lui	a0,0x40000
     c2c:	18a010ef          	jal	ra,1db6 <TIM_GetITStatus>
     c30:	e119                	bnez	a0,c36 <TIM2_IRQHandler+0x10>
        
        /* 按键检测事件 */
        button_ticks();
    }
  
}
     c32:	30200073          	mret
        TIM_ClearITPendingBit(TIM2,TIM_IT_Update);
     c36:	4585                	li	a1,1
     c38:	40000537          	lui	a0,0x40000
     c3c:	192010ef          	jal	ra,1dce <TIM_ClearITPendingBit>
        button_ticks();
     c40:	3165                	jal	8e8 <button_ticks>
}
     c42:	30200073          	mret

00000c46 <opa_init>:
#include "opa.h"



void opa_init(void)
{
     c46:	7179                	addi	sp,sp,-48
    GPIO_InitTypeDef GPIO_InitStructure={0};
    OPA_InitTypeDef  OPA_InitStructure={0};

    /* opa4 初始化 */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE );
     c48:	4585                	li	a1,1
     c4a:	4541                	li	a0,16
{
     c4c:	d606                	sw	ra,44(sp)
     c4e:	d422                	sw	s0,40(sp)
     c50:	d226                	sw	s1,36(sp)
    GPIO_InitTypeDef GPIO_InitStructure={0};
     c52:	c202                	sw	zero,4(sp)
     c54:	c402                	sw	zero,8(sp)
     c56:	c602                	sw	zero,12(sp)
    OPA_InitTypeDef  OPA_InitStructure={0};
     c58:	c802                	sw	zero,16(sp)
     c5a:	ca02                	sw	zero,20(sp)
     c5c:	cc02                	sw	zero,24(sp)
     c5e:	ce02                	sw	zero,28(sp)
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE );
     c60:	7e3000ef          	jal	ra,1c42 <RCC_APB2PeriphClockCmd>
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4|GPIO_Pin_3;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     c64:	440d                	li	s0,3
    GPIO_Init(GPIOC, &GPIO_InitStructure);
     c66:	004c                	addi	a1,sp,4
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
     c68:	4491                	li	s1,4
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4|GPIO_Pin_3;
     c6a:	47e1                	li	a5,24
    GPIO_Init(GPIOC, &GPIO_InitStructure);
     c6c:	40011537          	lui	a0,0x40011
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4|GPIO_Pin_3;
     c70:	827c                	sh	a5,4(sp)
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
     c72:	c626                	sw	s1,12(sp)
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     c74:	c422                	sw	s0,8(sp)
    GPIO_Init(GPIOC, &GPIO_InitStructure);
     c76:	119000ef          	jal	ra,158e <GPIO_Init>

    OPA_InitStructure.OPA_NUM=OPA4;
    OPA_InitStructure.PSEL=CHP1;
     c7a:	4785                	li	a5,1
    OPA_InitStructure.NSEL=CHN1;
    OPA_InitStructure.Mode=OUT_IO_OUT0;
    OPA_Init(&OPA_InitStructure);
     c7c:	0808                	addi	a0,sp,16
    OPA_InitStructure.PSEL=CHP1;
     c7e:	ca3e                	sw	a5,20(sp)
    OPA_InitStructure.NSEL=CHN1;
     c80:	cc3e                	sw	a5,24(sp)
    OPA_InitStructure.OPA_NUM=OPA4;
     c82:	c822                	sw	s0,16(sp)
    OPA_InitStructure.Mode=OUT_IO_OUT0;
     c84:	ce02                	sw	zero,28(sp)
    OPA_Init(&OPA_InitStructure);
     c86:	59b000ef          	jal	ra,1a20 <OPA_Init>
    OPA_Cmd(OPA4,ENABLE);
     c8a:	4585                	li	a1,1
     c8c:	450d                	li	a0,3
     c8e:	5c9000ef          	jal	ra,1a56 <OPA_Cmd>

    /* opa1 初始化 */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE );
     c92:	4585                	li	a1,1
     c94:	4521                	li	a0,8
     c96:	7ad000ef          	jal	ra,1c42 <RCC_APB2PeriphClockCmd>
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11|GPIO_Pin_15;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(GPIOB, &GPIO_InitStructure);
     c9a:	40011537          	lui	a0,0x40011
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11|GPIO_Pin_15;
     c9e:	77e5                	lui	a5,0xffff9
    GPIO_Init(GPIOB, &GPIO_InitStructure);
     ca0:	004c                	addi	a1,sp,4
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11|GPIO_Pin_15;
     ca2:	80078793          	addi	a5,a5,-2048 # ffff8800 <_eusrstack+0xdffd8800>
    GPIO_Init(GPIOB, &GPIO_InitStructure);
     ca6:	c0050513          	addi	a0,a0,-1024 # 40010c00 <_eusrstack+0x1fff0c00>
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11|GPIO_Pin_15;
     caa:	827c                	sh	a5,4(sp)
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
     cac:	c626                	sw	s1,12(sp)
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     cae:	c422                	sw	s0,8(sp)
    GPIO_Init(GPIOB, &GPIO_InitStructure);
     cb0:	0df000ef          	jal	ra,158e <GPIO_Init>

    OPA_InitStructure.OPA_NUM=OPA1;
    OPA_InitStructure.PSEL=CHP0;
    OPA_InitStructure.NSEL=CHN0;
    OPA_InitStructure.Mode=OUT_IO_OUT0;
    OPA_Init(&OPA_InitStructure);
     cb4:	0808                	addi	a0,sp,16
    OPA_InitStructure.OPA_NUM=OPA1;
     cb6:	c802                	sw	zero,16(sp)
    OPA_InitStructure.PSEL=CHP0;
     cb8:	ca02                	sw	zero,20(sp)
    OPA_InitStructure.NSEL=CHN0;
     cba:	cc02                	sw	zero,24(sp)
    OPA_InitStructure.Mode=OUT_IO_OUT0;
     cbc:	ce02                	sw	zero,28(sp)
    OPA_Init(&OPA_InitStructure);
     cbe:	563000ef          	jal	ra,1a20 <OPA_Init>
    OPA_Cmd(OPA1,ENABLE);
     cc2:	4585                	li	a1,1
     cc4:	4501                	li	a0,0
     cc6:	591000ef          	jal	ra,1a56 <OPA_Cmd>
     cca:	50b2                	lw	ra,44(sp)
     ccc:	5422                	lw	s0,40(sp)
     cce:	5492                	lw	s1,36(sp)
     cd0:	6145                	addi	sp,sp,48
     cd2:	8082                	ret

00000cd4 <NMI_Handler>:
 *
 * @return  none
 */
void NMI_Handler(void)
{
    printf("mepc1 = %08x",__get_MEPC());
     cd4:	312010ef          	jal	ra,1fe6 <__get_MEPC>
     cd8:	85aa                	mv	a1,a0
     cda:	00007537          	lui	a0,0x7
     cde:	d0450513          	addi	a0,a0,-764 # 6d04 <_read+0x9a>
     ce2:	4ed010ef          	jal	ra,29ce <iprintf>
}
     ce6:	30200073          	mret

00000cea <HardFault_Handler>:
 *
 * @return  none
 */
void HardFault_Handler(void)
{
    printf("macuse = %08x",__get_MCAUSE());
     cea:	302010ef          	jal	ra,1fec <__get_MCAUSE>
     cee:	85aa                	mv	a1,a0
     cf0:	00007537          	lui	a0,0x7
     cf4:	ce850513          	addi	a0,a0,-792 # 6ce8 <_read+0x7e>
     cf8:	4d7010ef          	jal	ra,29ce <iprintf>
    printf("mepc = %08x",__get_MEPC());
     cfc:	2ea010ef          	jal	ra,1fe6 <__get_MEPC>
     d00:	85aa                	mv	a1,a0
     d02:	00007537          	lui	a0,0x7
     d06:	cf850513          	addi	a0,a0,-776 # 6cf8 <_read+0x8e>
     d0a:	4c5010ef          	jal	ra,29ce <iprintf>


    while (1)
    {
    }
     d0e:	a001                	j	d0e <HardFault_Handler+0x24>

00000d10 <main>:
 * @brief 主函数
 * 
 * @return int 
 */
int main(void)
{
     d10:	1101                	addi	sp,sp,-32
     d12:	ce06                	sw	ra,28(sp)
     d14:	cc22                	sw	s0,24(sp)
     d16:	ca26                	sw	s1,20(sp)
     d18:	c84a                	sw	s2,16(sp)
    Delay_Init();
     d1a:	1d4010ef          	jal	ra,1eee <Delay_Init>
    USART_Printf_Init(512000);
     d1e:	0007d537          	lui	a0,0x7d
     d22:	1f2010ef          	jal	ra,1f14 <USART_Printf_Init>
    printf("ch32v307 hello world\r\n");
     d26:	00007537          	lui	a0,0x7
     d2a:	d1450513          	addi	a0,a0,-748 # 6d14 <_read+0xaa>
     d2e:	5bb010ef          	jal	ra,2ae8 <puts>

	// 音频功放使能引脚
    GPIO_InitTypeDef GPIO_InitStructure={0};
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB|RCC_APB2Periph_GPIOA, ENABLE );
     d32:	4585                	li	a1,1
     d34:	4531                	li	a0,12
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(GPIOB, &GPIO_InitStructure);
     d36:	40011437          	lui	s0,0x40011
    GPIO_InitTypeDef GPIO_InitStructure={0};
     d3a:	c202                	sw	zero,4(sp)
     d3c:	c402                	sw	zero,8(sp)
     d3e:	c602                	sw	zero,12(sp)
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB|RCC_APB2Periph_GPIOA, ENABLE );
     d40:	703000ef          	jal	ra,1c42 <RCC_APB2PeriphClockCmd>
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
     d44:	6785                	lui	a5,0x1
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
     d46:	4941                	li	s2,16
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     d48:	448d                	li	s1,3
    GPIO_Init(GPIOB, &GPIO_InitStructure);
     d4a:	004c                	addi	a1,sp,4
     d4c:	c0040513          	addi	a0,s0,-1024 # 40010c00 <_eusrstack+0x1fff0c00>
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
     d50:	827c                	sh	a5,4(sp)
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
     d52:	c64a                	sw	s2,12(sp)
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     d54:	c426                	sw	s1,8(sp)
    GPIO_Init(GPIOB, &GPIO_InitStructure);
     d56:	039000ef          	jal	ra,158e <GPIO_Init>

    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;
     d5a:	08000793          	li	a5,128
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
     d5e:	004c                	addi	a1,sp,4
     d60:	80040513          	addi	a0,s0,-2048
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;
     d64:	827c                	sh	a5,4(sp)
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
     d66:	c64a                	sw	s2,12(sp)
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     d68:	c426                	sw	s1,8(sp)
    GPIO_Init(GPIOA, &GPIO_InitStructure);
     d6a:	025000ef          	jal	ra,158e <GPIO_Init>

    GPIO_ResetBits(GPIOB,GPIO_Pin_12);
     d6e:	6585                	lui	a1,0x1
     d70:	c0040513          	addi	a0,s0,-1024
     d74:	4a9000ef          	jal	ra,1a1c <GPIO_ResetBits>
    GPIO_SetBits(GPIOA,GPIO_Pin_7);
     d78:	08000593          	li	a1,128
     d7c:	80040513          	addi	a0,s0,-2048
     d80:	499000ef          	jal	ra,1a18 <GPIO_SetBits>



    for(uint32_t i=0; i<FLASH_PAGE_SIZE/4; i++)
     d84:	17ff0637          	lui	a2,0x17ff0
    GPIO_SetBits(GPIOA,GPIO_Pin_7);
     d88:	080107b7          	lui	a5,0x8010
     d8c:	61460613          	addi	a2,a2,1556 # 17ff0614 <_data_lma+0x17fe9440>
    for(uint32_t i=0; i<FLASH_PAGE_SIZE/4; i++)
     d90:	0801c5b7          	lui	a1,0x801c
    {
        *((uint32_t*)adc_record_data_buffer+i) = *((uint32_t *)PAGE_WRITE_START_ADDR + i);
     d94:	4394                	lw	a3,0(a5)
     d96:	00f60733          	add	a4,a2,a5
     d9a:	0791                	addi	a5,a5,4
     d9c:	c314                	sw	a3,0(a4)
    for(uint32_t i=0; i<FLASH_PAGE_SIZE/4; i++)
     d9e:	feb79be3          	bne	a5,a1,d94 <main+0x84>
    }




    opa_init();
     da2:	3555                	jal	c46 <opa_init>

	adc_init();
     da4:	d9cff0ef          	jal	ra,340 <adc_init>

	dac_init();
     da8:	fa2ff0ef          	jal	ra,54a <dac_init>

    my_button_init();
     dac:	3b8d                	jal	b1e <my_button_init>

    while(1)
    {
        ;
     dae:	a001                	j	dae <main+0x9e>

00000db0 <SystemInit>:
 *
 * @return  none
 */
void SystemInit (void)
{
  RCC->CTLR |= (uint32_t)0x00000001;
     db0:	400217b7          	lui	a5,0x40021
     db4:	4398                	lw	a4,0(a5)

#ifdef CH32V30x_D8C
  RCC->CFGR0 &= (uint32_t)0xF8FF0000;
     db6:	f8ff06b7          	lui	a3,0xf8ff0
{
     dba:	1141                	addi	sp,sp,-16
  RCC->CTLR |= (uint32_t)0x00000001;
     dbc:	00176713          	ori	a4,a4,1
     dc0:	c398                	sw	a4,0(a5)
  RCC->CFGR0 &= (uint32_t)0xF8FF0000;
     dc2:	43d8                	lw	a4,4(a5)
  RCC->CTLR |= ((uint32_t)RCC_HSEON);

  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CTLR & RCC_HSERDY;
     dc4:	40021537          	lui	a0,0x40021
     dc8:	000205b7          	lui	a1,0x20
  RCC->CFGR0 &= (uint32_t)0xF8FF0000;
     dcc:	8f75                	and	a4,a4,a3
     dce:	c3d8                	sw	a4,4(a5)
  RCC->CTLR &= (uint32_t)0xFEF6FFFF;
     dd0:	4398                	lw	a4,0(a5)
     dd2:	fef706b7          	lui	a3,0xfef70
     dd6:	16fd                	addi	a3,a3,-1
     dd8:	8f75                	and	a4,a4,a3
     dda:	c398                	sw	a4,0(a5)
  RCC->CTLR &= (uint32_t)0xFFFBFFFF;
     ddc:	4398                	lw	a4,0(a5)
     dde:	fffc06b7          	lui	a3,0xfffc0
     de2:	16fd                	addi	a3,a3,-1
     de4:	8f75                	and	a4,a4,a3
     de6:	c398                	sw	a4,0(a5)
  RCC->CFGR0 &= (uint32_t)0xFF80FFFF;
     de8:	43d8                	lw	a4,4(a5)
     dea:	ff8106b7          	lui	a3,0xff810
     dee:	16fd                	addi	a3,a3,-1
     df0:	8f75                	and	a4,a4,a3
     df2:	c3d8                	sw	a4,4(a5)
  RCC->CTLR &= (uint32_t)0xEBFFFFFF;
     df4:	4398                	lw	a4,0(a5)
     df6:	ec0006b7          	lui	a3,0xec000
     dfa:	16fd                	addi	a3,a3,-1
     dfc:	8f75                	and	a4,a4,a3
     dfe:	c398                	sw	a4,0(a5)
  RCC->INTR = 0x00FF0000;
     e00:	00ff0737          	lui	a4,0xff0
     e04:	c798                	sw	a4,8(a5)
  RCC->CFGR2 = 0x00000000;
     e06:	0207a623          	sw	zero,44(a5) # 4002102c <_eusrstack+0x2000102c>
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
     e0a:	c402                	sw	zero,8(sp)
     e0c:	c602                	sw	zero,12(sp)
  RCC->CTLR |= ((uint32_t)RCC_HSEON);
     e0e:	4398                	lw	a4,0(a5)
     e10:	66c1                	lui	a3,0x10
    StartUpCounter++;
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
     e12:	6605                	lui	a2,0x1
  RCC->CTLR |= ((uint32_t)RCC_HSEON);
     e14:	8f55                	or	a4,a4,a3
     e16:	c398                	sw	a4,0(a5)
     e18:	a021                	j	e20 <SystemInit+0x70>
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
     e1a:	47a2                	lw	a5,8(sp)
     e1c:	00c78a63          	beq	a5,a2,e30 <SystemInit+0x80>
    HSEStatus = RCC->CTLR & RCC_HSERDY;
     e20:	411c                	lw	a5,0(a0)
     e22:	8fed                	and	a5,a5,a1
     e24:	c63e                	sw	a5,12(sp)
    StartUpCounter++;
     e26:	47a2                	lw	a5,8(sp)
     e28:	0785                	addi	a5,a5,1
     e2a:	c43e                	sw	a5,8(sp)
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
     e2c:	47b2                	lw	a5,12(sp)
     e2e:	d7f5                	beqz	a5,e1a <SystemInit+0x6a>

  if ((RCC->CTLR & RCC_HSERDY) != RESET)
     e30:	400217b7          	lui	a5,0x40021
     e34:	439c                	lw	a5,0(a5)
     e36:	00e79713          	slli	a4,a5,0xe
     e3a:	00075a63          	bgez	a4,e4e <SystemInit+0x9e>
  {
    HSEStatus = (uint32_t)0x01;
     e3e:	4785                	li	a5,1
     e40:	c63e                	sw	a5,12(sp)
  else
  {
    HSEStatus = (uint32_t)0x00;
  }

  if (HSEStatus == (uint32_t)0x01)
     e42:	4732                	lw	a4,12(sp)
     e44:	4785                	li	a5,1
     e46:	00f70963          	beq	a4,a5,e58 <SystemInit+0xa8>
}
     e4a:	0141                	addi	sp,sp,16
     e4c:	8082                	ret
    HSEStatus = (uint32_t)0x00;
     e4e:	c602                	sw	zero,12(sp)
  if (HSEStatus == (uint32_t)0x01)
     e50:	4732                	lw	a4,12(sp)
     e52:	4785                	li	a5,1
     e54:	fef71be3          	bne	a4,a5,e4a <SystemInit+0x9a>
  {
    /* HCLK = SYSCLK */
    RCC->CFGR0 |= (uint32_t)RCC_HPRE_DIV1;
     e58:	400217b7          	lui	a5,0x40021
     e5c:	43d8                	lw	a4,4(a5)
    RCC->CFGR0 |= (uint32_t)RCC_PPRE2_DIV1;
    /* PCLK1 = HCLK */
    RCC->CFGR0 |= (uint32_t)RCC_PPRE1_DIV2;

    /*  PLL configuration: PLLCLK = HSE * 18 = 144 MHz */
    RCC->CFGR0 &= (uint32_t)((uint32_t)~(RCC_PLLSRC | RCC_PLLXTPRE |
     e5e:	ffc10637          	lui	a2,0xffc10
     e62:	167d                	addi	a2,a2,-1
    RCC->CFGR0 |= (uint32_t)RCC_HPRE_DIV1;
     e64:	c3d8                	sw	a4,4(a5)
    RCC->CFGR0 |= (uint32_t)RCC_PPRE2_DIV1;
     e66:	43d8                	lw	a4,4(a5)
     e68:	c3d8                	sw	a4,4(a5)
    RCC->CFGR0 |= (uint32_t)RCC_PPRE1_DIV2;
     e6a:	43d4                	lw	a3,4(a5)
#endif

    /* Enable PLL */
    RCC->CTLR |= RCC_PLLON;
    /* Wait till PLL is ready */
    while((RCC->CTLR & RCC_PLLRDY) == 0)
     e6c:	40021737          	lui	a4,0x40021
    RCC->CFGR0 |= (uint32_t)RCC_PPRE1_DIV2;
     e70:	4006e693          	ori	a3,a3,1024
     e74:	c3d4                	sw	a3,4(a5)
    RCC->CFGR0 &= (uint32_t)((uint32_t)~(RCC_PLLSRC | RCC_PLLXTPRE |
     e76:	43d4                	lw	a3,4(a5)
     e78:	8ef1                	and	a3,a3,a2
     e7a:	c3d4                	sw	a3,4(a5)
        RCC->CFGR0 |= (uint32_t)(RCC_PLLSRC_HSE | RCC_PLLXTPRE_HSE | RCC_PLLMULL18_EXTEN);
     e7c:	43d4                	lw	a3,4(a5)
     e7e:	6641                	lui	a2,0x10
     e80:	8ed1                	or	a3,a3,a2
     e82:	c3d4                	sw	a3,4(a5)
    RCC->CTLR |= RCC_PLLON;
     e84:	4394                	lw	a3,0(a5)
     e86:	01000637          	lui	a2,0x1000
     e8a:	8ed1                	or	a3,a3,a2
     e8c:	c394                	sw	a3,0(a5)
    while((RCC->CTLR & RCC_PLLRDY) == 0)
     e8e:	431c                	lw	a5,0(a4)
     e90:	00679693          	slli	a3,a5,0x6
     e94:	fe06dde3          	bgez	a3,e8e <SystemInit+0xde>
    {
    }
    /* Select PLL as system clock source */
    RCC->CFGR0 &= (uint32_t)((uint32_t)~(RCC_SW));
     e98:	435c                	lw	a5,4(a4)
    RCC->CFGR0 |= (uint32_t)RCC_SW_PLL;
    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR0 & (uint32_t)RCC_SWS) != (uint32_t)0x08)
     e9a:	40021637          	lui	a2,0x40021
     e9e:	46a1                	li	a3,8
    RCC->CFGR0 &= (uint32_t)((uint32_t)~(RCC_SW));
     ea0:	9bf1                	andi	a5,a5,-4
     ea2:	c35c                	sw	a5,4(a4)
    RCC->CFGR0 |= (uint32_t)RCC_SW_PLL;
     ea4:	435c                	lw	a5,4(a4)
     ea6:	0027e793          	ori	a5,a5,2
     eaa:	c35c                	sw	a5,4(a4)
    while ((RCC->CFGR0 & (uint32_t)RCC_SWS) != (uint32_t)0x08)
     eac:	425c                	lw	a5,4(a2)
     eae:	8bb1                	andi	a5,a5,12
     eb0:	fed79ee3          	bne	a5,a3,eac <SystemInit+0xfc>
}
     eb4:	0141                	addi	sp,sp,16
     eb6:	8082                	ret
    .weak   DMA2_Channel8_IRQHandler   /* DMA2 Channel 8 */
    .weak   DMA2_Channel9_IRQHandler   /* DMA2 Channel 9 */
    .weak   DMA2_Channel10_IRQHandler  /* DMA2 Channel 10 */
    .weak   DMA2_Channel11_IRQHandler  /* DMA2 Channel 11 */

NMI_Handler:  1:  j 1b
     eb8:	a001                	j	eb8 <SystemInit+0x108>
HardFault_Handler:  1:  j 1b
     eba:	a001                	j	eba <SystemInit+0x10a>

00000ebc <Ecall_M_Mode_Handler>:
Ecall_M_Mode_Handler:  1:  j 1b
     ebc:	a001                	j	ebc <Ecall_M_Mode_Handler>

00000ebe <Ecall_U_Mode_Handler>:
Ecall_U_Mode_Handler:  1:  j 1b
     ebe:	a001                	j	ebe <Ecall_U_Mode_Handler>

00000ec0 <Break_Point_Handler>:
Break_Point_Handler:  1:  j 1b
     ec0:	a001                	j	ec0 <Break_Point_Handler>

00000ec2 <SysTick_Handler>:
SysTick_Handler:  1:  j 1b
     ec2:	a001                	j	ec2 <SysTick_Handler>

00000ec4 <SW_Handler>:
SW_Handler:  1:  j 1b
     ec4:	a001                	j	ec4 <SW_Handler>

00000ec6 <WWDG_IRQHandler>:
WWDG_IRQHandler:  1:  j 1b
     ec6:	a001                	j	ec6 <WWDG_IRQHandler>

00000ec8 <PVD_IRQHandler>:
PVD_IRQHandler:  1:  j 1b
     ec8:	a001                	j	ec8 <PVD_IRQHandler>

00000eca <TAMPER_IRQHandler>:
TAMPER_IRQHandler:  1:  j 1b
     eca:	a001                	j	eca <TAMPER_IRQHandler>

00000ecc <RTC_IRQHandler>:
RTC_IRQHandler:  1:  j 1b
     ecc:	a001                	j	ecc <RTC_IRQHandler>

00000ece <FLASH_IRQHandler>:
FLASH_IRQHandler:  1:  j 1b
     ece:	a001                	j	ece <FLASH_IRQHandler>

00000ed0 <RCC_IRQHandler>:
RCC_IRQHandler:  1:  j 1b
     ed0:	a001                	j	ed0 <RCC_IRQHandler>

00000ed2 <EXTI0_IRQHandler>:
EXTI0_IRQHandler:  1:  j 1b
     ed2:	a001                	j	ed2 <EXTI0_IRQHandler>

00000ed4 <EXTI1_IRQHandler>:
EXTI1_IRQHandler:  1:  j 1b
     ed4:	a001                	j	ed4 <EXTI1_IRQHandler>

00000ed6 <EXTI2_IRQHandler>:
EXTI2_IRQHandler:  1:  j 1b
     ed6:	a001                	j	ed6 <EXTI2_IRQHandler>

00000ed8 <EXTI3_IRQHandler>:
EXTI3_IRQHandler:  1:  j 1b
     ed8:	a001                	j	ed8 <EXTI3_IRQHandler>

00000eda <EXTI4_IRQHandler>:
EXTI4_IRQHandler:  1:  j 1b
     eda:	a001                	j	eda <EXTI4_IRQHandler>
DMA1_Channel1_IRQHandler:  1:  j 1b
     edc:	a001                	j	edc <EXTI4_IRQHandler+0x2>

00000ede <DMA1_Channel2_IRQHandler>:
DMA1_Channel2_IRQHandler:  1:  j 1b
     ede:	a001                	j	ede <DMA1_Channel2_IRQHandler>

00000ee0 <DMA1_Channel3_IRQHandler>:
DMA1_Channel3_IRQHandler:  1:  j 1b
     ee0:	a001                	j	ee0 <DMA1_Channel3_IRQHandler>

00000ee2 <DMA1_Channel4_IRQHandler>:
DMA1_Channel4_IRQHandler:  1:  j 1b
     ee2:	a001                	j	ee2 <DMA1_Channel4_IRQHandler>

00000ee4 <DMA1_Channel5_IRQHandler>:
DMA1_Channel5_IRQHandler:  1:  j 1b
     ee4:	a001                	j	ee4 <DMA1_Channel5_IRQHandler>

00000ee6 <DMA1_Channel6_IRQHandler>:
DMA1_Channel6_IRQHandler:  1:  j 1b
     ee6:	a001                	j	ee6 <DMA1_Channel6_IRQHandler>

00000ee8 <DMA1_Channel7_IRQHandler>:
DMA1_Channel7_IRQHandler:  1:  j 1b
     ee8:	a001                	j	ee8 <DMA1_Channel7_IRQHandler>

00000eea <ADC1_2_IRQHandler>:
ADC1_2_IRQHandler:  1:  j 1b
     eea:	a001                	j	eea <ADC1_2_IRQHandler>

00000eec <USB_HP_CAN1_TX_IRQHandler>:
USB_HP_CAN1_TX_IRQHandler:  1:  j 1b
     eec:	a001                	j	eec <USB_HP_CAN1_TX_IRQHandler>

00000eee <USB_LP_CAN1_RX0_IRQHandler>:
USB_LP_CAN1_RX0_IRQHandler:  1:  j 1b
     eee:	a001                	j	eee <USB_LP_CAN1_RX0_IRQHandler>

00000ef0 <CAN1_RX1_IRQHandler>:
CAN1_RX1_IRQHandler:  1:  j 1b
     ef0:	a001                	j	ef0 <CAN1_RX1_IRQHandler>

00000ef2 <CAN1_SCE_IRQHandler>:
CAN1_SCE_IRQHandler:  1:  j 1b
     ef2:	a001                	j	ef2 <CAN1_SCE_IRQHandler>

00000ef4 <EXTI9_5_IRQHandler>:
EXTI9_5_IRQHandler:  1:  j 1b
     ef4:	a001                	j	ef4 <EXTI9_5_IRQHandler>

00000ef6 <TIM1_BRK_IRQHandler>:
TIM1_BRK_IRQHandler:  1:  j 1b
     ef6:	a001                	j	ef6 <TIM1_BRK_IRQHandler>

00000ef8 <TIM1_UP_IRQHandler>:
TIM1_UP_IRQHandler:  1:  j 1b
     ef8:	a001                	j	ef8 <TIM1_UP_IRQHandler>

00000efa <TIM1_TRG_COM_IRQHandler>:
TIM1_TRG_COM_IRQHandler:  1:  j 1b
     efa:	a001                	j	efa <TIM1_TRG_COM_IRQHandler>

00000efc <TIM1_CC_IRQHandler>:
TIM1_CC_IRQHandler:  1:  j 1b
     efc:	a001                	j	efc <TIM1_CC_IRQHandler>
TIM2_IRQHandler:  1:  j 1b
     efe:	a001                	j	efe <TIM1_CC_IRQHandler+0x2>

00000f00 <TIM3_IRQHandler>:
TIM3_IRQHandler:  1:  j 1b
     f00:	a001                	j	f00 <TIM3_IRQHandler>

00000f02 <TIM4_IRQHandler>:
TIM4_IRQHandler:  1:  j 1b
     f02:	a001                	j	f02 <TIM4_IRQHandler>

00000f04 <I2C1_EV_IRQHandler>:
I2C1_EV_IRQHandler:  1:  j 1b
     f04:	a001                	j	f04 <I2C1_EV_IRQHandler>

00000f06 <I2C1_ER_IRQHandler>:
I2C1_ER_IRQHandler:  1:  j 1b
     f06:	a001                	j	f06 <I2C1_ER_IRQHandler>

00000f08 <I2C2_EV_IRQHandler>:
I2C2_EV_IRQHandler:  1:  j 1b
     f08:	a001                	j	f08 <I2C2_EV_IRQHandler>

00000f0a <I2C2_ER_IRQHandler>:
I2C2_ER_IRQHandler:  1:  j 1b
     f0a:	a001                	j	f0a <I2C2_ER_IRQHandler>

00000f0c <SPI1_IRQHandler>:
SPI1_IRQHandler:  1:  j 1b
     f0c:	a001                	j	f0c <SPI1_IRQHandler>

00000f0e <SPI2_IRQHandler>:
SPI2_IRQHandler:  1:  j 1b
     f0e:	a001                	j	f0e <SPI2_IRQHandler>

00000f10 <USART1_IRQHandler>:
USART1_IRQHandler:  1:  j 1b
     f10:	a001                	j	f10 <USART1_IRQHandler>

00000f12 <USART2_IRQHandler>:
USART2_IRQHandler:  1:  j 1b
     f12:	a001                	j	f12 <USART2_IRQHandler>

00000f14 <USART3_IRQHandler>:
USART3_IRQHandler:  1:  j 1b
     f14:	a001                	j	f14 <USART3_IRQHandler>

00000f16 <EXTI15_10_IRQHandler>:
EXTI15_10_IRQHandler:  1:  j 1b
     f16:	a001                	j	f16 <EXTI15_10_IRQHandler>

00000f18 <RTCAlarm_IRQHandler>:
RTCAlarm_IRQHandler:  1:  j 1b
     f18:	a001                	j	f18 <RTCAlarm_IRQHandler>

00000f1a <USBWakeUp_IRQHandler>:
USBWakeUp_IRQHandler:  1:  j 1b
     f1a:	a001                	j	f1a <USBWakeUp_IRQHandler>

00000f1c <TIM8_BRK_IRQHandler>:
TIM8_BRK_IRQHandler:  1:  j 1b
     f1c:	a001                	j	f1c <TIM8_BRK_IRQHandler>

00000f1e <TIM8_UP_IRQHandler>:
TIM8_UP_IRQHandler:  1:  j 1b
     f1e:	a001                	j	f1e <TIM8_UP_IRQHandler>

00000f20 <TIM8_TRG_COM_IRQHandler>:
TIM8_TRG_COM_IRQHandler:  1:  j 1b
     f20:	a001                	j	f20 <TIM8_TRG_COM_IRQHandler>

00000f22 <TIM8_CC_IRQHandler>:
TIM8_CC_IRQHandler:  1:  j 1b
     f22:	a001                	j	f22 <TIM8_CC_IRQHandler>

00000f24 <RNG_IRQHandler>:
RNG_IRQHandler:  1:  j 1b
     f24:	a001                	j	f24 <RNG_IRQHandler>

00000f26 <FSMC_IRQHandler>:
FSMC_IRQHandler:  1:  j 1b
     f26:	a001                	j	f26 <FSMC_IRQHandler>

00000f28 <SDIO_IRQHandler>:
SDIO_IRQHandler:  1:  j 1b
     f28:	a001                	j	f28 <SDIO_IRQHandler>

00000f2a <TIM5_IRQHandler>:
TIM5_IRQHandler:  1:  j 1b
     f2a:	a001                	j	f2a <TIM5_IRQHandler>

00000f2c <SPI3_IRQHandler>:
SPI3_IRQHandler:  1:  j 1b
     f2c:	a001                	j	f2c <SPI3_IRQHandler>

00000f2e <UART4_IRQHandler>:
UART4_IRQHandler:  1:  j 1b
     f2e:	a001                	j	f2e <UART4_IRQHandler>

00000f30 <UART5_IRQHandler>:
UART5_IRQHandler:  1:  j 1b
     f30:	a001                	j	f30 <UART5_IRQHandler>

00000f32 <TIM6_IRQHandler>:
TIM6_IRQHandler:  1:  j 1b
     f32:	a001                	j	f32 <TIM6_IRQHandler>

00000f34 <TIM7_IRQHandler>:
TIM7_IRQHandler:  1:  j 1b
     f34:	a001                	j	f34 <TIM7_IRQHandler>

00000f36 <DMA2_Channel1_IRQHandler>:
DMA2_Channel1_IRQHandler:  1:  j 1b
     f36:	a001                	j	f36 <DMA2_Channel1_IRQHandler>

00000f38 <DMA2_Channel2_IRQHandler>:
DMA2_Channel2_IRQHandler:  1:  j 1b
     f38:	a001                	j	f38 <DMA2_Channel2_IRQHandler>

00000f3a <DMA2_Channel3_IRQHandler>:
DMA2_Channel3_IRQHandler:  1:  j 1b
     f3a:	a001                	j	f3a <DMA2_Channel3_IRQHandler>

00000f3c <DMA2_Channel4_IRQHandler>:
DMA2_Channel4_IRQHandler:  1:  j 1b
     f3c:	a001                	j	f3c <DMA2_Channel4_IRQHandler>

00000f3e <DMA2_Channel5_IRQHandler>:
DMA2_Channel5_IRQHandler:  1:  j 1b
     f3e:	a001                	j	f3e <DMA2_Channel5_IRQHandler>

00000f40 <ETH_IRQHandler>:
ETH_IRQHandler:  1:  j 1b
     f40:	a001                	j	f40 <ETH_IRQHandler>

00000f42 <ETH_WKUP_IRQHandler>:
ETH_WKUP_IRQHandler:  1:  j 1b
     f42:	a001                	j	f42 <ETH_WKUP_IRQHandler>

00000f44 <CAN2_TX_IRQHandler>:
CAN2_TX_IRQHandler:  1:  j 1b
     f44:	a001                	j	f44 <CAN2_TX_IRQHandler>

00000f46 <CAN2_RX0_IRQHandler>:
CAN2_RX0_IRQHandler:  1:  j 1b
     f46:	a001                	j	f46 <CAN2_RX0_IRQHandler>

00000f48 <CAN2_RX1_IRQHandler>:
CAN2_RX1_IRQHandler:  1:  j 1b
     f48:	a001                	j	f48 <CAN2_RX1_IRQHandler>

00000f4a <CAN2_SCE_IRQHandler>:
CAN2_SCE_IRQHandler:  1:  j 1b
     f4a:	a001                	j	f4a <CAN2_SCE_IRQHandler>

00000f4c <OTG_FS_IRQHandler>:
OTG_FS_IRQHandler:  1:  j 1b
     f4c:	a001                	j	f4c <OTG_FS_IRQHandler>

00000f4e <USBHSWakeup_IRQHandler>:
USBHSWakeup_IRQHandler:  1:  j 1b
     f4e:	a001                	j	f4e <USBHSWakeup_IRQHandler>

00000f50 <USBHS_IRQHandler>:
USBHS_IRQHandler:  1:  j 1b
     f50:	a001                	j	f50 <USBHS_IRQHandler>

00000f52 <DVP_IRQHandler>:
DVP_IRQHandler:  1:  j 1b
     f52:	a001                	j	f52 <DVP_IRQHandler>

00000f54 <UART6_IRQHandler>:
UART6_IRQHandler:  1:  j 1b
     f54:	a001                	j	f54 <UART6_IRQHandler>

00000f56 <UART7_IRQHandler>:
UART7_IRQHandler:  1:  j 1b
     f56:	a001                	j	f56 <UART7_IRQHandler>

00000f58 <UART8_IRQHandler>:
UART8_IRQHandler:  1:  j 1b
     f58:	a001                	j	f58 <UART8_IRQHandler>

00000f5a <TIM9_BRK_IRQHandler>:
TIM9_BRK_IRQHandler:  1:  j 1b
     f5a:	a001                	j	f5a <TIM9_BRK_IRQHandler>

00000f5c <TIM9_UP_IRQHandler>:
TIM9_UP_IRQHandler:  1:  j 1b
     f5c:	a001                	j	f5c <TIM9_UP_IRQHandler>

00000f5e <TIM9_TRG_COM_IRQHandler>:
TIM9_TRG_COM_IRQHandler:  1:  j 1b
     f5e:	a001                	j	f5e <TIM9_TRG_COM_IRQHandler>

00000f60 <TIM9_CC_IRQHandler>:
TIM9_CC_IRQHandler:  1:  j 1b
     f60:	a001                	j	f60 <TIM9_CC_IRQHandler>

00000f62 <TIM10_BRK_IRQHandler>:
TIM10_BRK_IRQHandler:  1:  j 1b
     f62:	a001                	j	f62 <TIM10_BRK_IRQHandler>

00000f64 <TIM10_UP_IRQHandler>:
TIM10_UP_IRQHandler:  1:  j 1b
     f64:	a001                	j	f64 <TIM10_UP_IRQHandler>

00000f66 <TIM10_TRG_COM_IRQHandler>:
TIM10_TRG_COM_IRQHandler:  1:  j 1b
     f66:	a001                	j	f66 <TIM10_TRG_COM_IRQHandler>

00000f68 <TIM10_CC_IRQHandler>:
TIM10_CC_IRQHandler:  1:  j 1b
     f68:	a001                	j	f68 <TIM10_CC_IRQHandler>

00000f6a <DMA2_Channel6_IRQHandler>:
DMA2_Channel6_IRQHandler:  1:  j 1b
     f6a:	a001                	j	f6a <DMA2_Channel6_IRQHandler>

00000f6c <DMA2_Channel7_IRQHandler>:
DMA2_Channel7_IRQHandler:  1:  j 1b
     f6c:	a001                	j	f6c <DMA2_Channel7_IRQHandler>

00000f6e <DMA2_Channel8_IRQHandler>:
DMA2_Channel8_IRQHandler:  1:  j 1b
     f6e:	a001                	j	f6e <DMA2_Channel8_IRQHandler>

00000f70 <DMA2_Channel9_IRQHandler>:
DMA2_Channel9_IRQHandler:  1:  j 1b
     f70:	a001                	j	f70 <DMA2_Channel9_IRQHandler>

00000f72 <DMA2_Channel10_IRQHandler>:
DMA2_Channel10_IRQHandler:  1:  j 1b
     f72:	a001                	j	f72 <DMA2_Channel10_IRQHandler>

00000f74 <DMA2_Channel11_IRQHandler>:
DMA2_Channel11_IRQHandler:  1:  j 1b
     f74:	a001                	j	f74 <DMA2_Channel11_IRQHandler>

00000f76 <handle_reset>:
	.weak	handle_reset
	.align	1
handle_reset:
.option push 
.option	norelax 
	la gp, __global_pointer$
     f76:	20000197          	auipc	gp,0x20000
     f7a:	a6a18193          	addi	gp,gp,-1430 # 200009e0 <__global_pointer$>
.option	pop 
1:
	la sp, _eusrstack 
     f7e:	2001f117          	auipc	sp,0x2001f
     f82:	08210113          	addi	sp,sp,130 # 20020000 <_eusrstack>

2:
	/* Clear ram section */
	li a0, 0x20000000
     f86:	20000537          	lui	a0,0x20000
	li a1, 0x20020000
     f8a:	200205b7          	lui	a1,0x20020
	bgeu a0, a1, 2f
     f8e:	00b57763          	bgeu	a0,a1,f9c <handle_reset+0x26>
1:
	sw zero, (a0)
     f92:	00052023          	sw	zero,0(a0) # 20000000 <_data_vma>
	addi a0, a0, 4
     f96:	0511                	addi	a0,a0,4
	bltu a0, a1, 1b
     f98:	feb56de3          	bltu	a0,a1,f92 <handle_reset+0x1c>

2:
	/* Load data section from flash to RAM */
	la a0, _data_lma
     f9c:	00006517          	auipc	a0,0x6
     fa0:	23850513          	addi	a0,a0,568 # 71d4 <_data_lma>
	la a1, _data_vma
     fa4:	1ffff597          	auipc	a1,0x1ffff
     fa8:	05c58593          	addi	a1,a1,92 # 20000000 <_data_vma>
	la a2, _edata
     fac:	82018613          	addi	a2,gp,-2016 # 20000200 <_edata>
	bgeu a1, a2, 2f
     fb0:	00c5fa63          	bgeu	a1,a2,fc4 <handle_reset+0x4e>
1:
	lw t0, (a0)
     fb4:	00052283          	lw	t0,0(a0)
	sw t0, (a1)
     fb8:	0055a023          	sw	t0,0(a1)
	addi a0, a0, 4
     fbc:	0511                	addi	a0,a0,4
	addi a1, a1, 4
     fbe:	0591                	addi	a1,a1,4
	bltu a1, a2, 1b
     fc0:	fec5eae3          	bltu	a1,a2,fb4 <handle_reset+0x3e>
2:
	/* Clear bss section */
	la a0, _sbss
     fc4:	82018513          	addi	a0,gp,-2016 # 20000200 <_edata>
	la a1, _ebss
     fc8:	2000b597          	auipc	a1,0x2000b
     fcc:	6a858593          	addi	a1,a1,1704 # 2000c670 <_ebss>
	bgeu a0, a1, 2f
     fd0:	00b57763          	bgeu	a0,a1,fde <handle_reset+0x68>
1:
	sw zero, (a0)
     fd4:	00052023          	sw	zero,0(a0)
	addi a0, a0, 4
     fd8:	0511                	addi	a0,a0,4
	bltu a0, a1, 1b
     fda:	feb56de3          	bltu	a0,a1,fd4 <handle_reset+0x5e>



2:
    li t0, 0x1f
     fde:	42fd                	li	t0,31
    csrw 0xbc0, t0
     fe0:	bc029073          	csrw	0xbc0,t0

    /* Enable nested and hardware stack */
	li t0, 0x0b
     fe4:	42ad                	li	t0,11
	csrw 0x804, t0
     fe6:	80429073          	csrw	0x804,t0

    /* Enable floating point and interrupt */
   	li t0, 0x6088           
     fea:	000062b7          	lui	t0,0x6
     fee:	08828293          	addi	t0,t0,136 # 6088 <__muldf3+0x458>
   	csrs mstatus, t0
     ff2:	3002a073          	csrs	mstatus,t0

 	la t0, _vector_base
     ff6:	fffff297          	auipc	t0,0xfffff
     ffa:	04228293          	addi	t0,t0,66 # 38 <_einit>
    ori t0, t0, 3           
     ffe:	0032e293          	ori	t0,t0,3
	csrw mtvec, t0
    1002:	30529073          	csrw	mtvec,t0

    jal  SystemInit
    1006:	dabff0ef          	jal	ra,db0 <SystemInit>
	la t0, main
    100a:	00000297          	auipc	t0,0x0
    100e:	d0628293          	addi	t0,t0,-762 # d10 <main>
	csrw mepc, t0
    1012:	34129073          	csrw	mepc,t0
	mret
    1016:	30200073          	mret

0000101a <ADC_DeInit>:
 * @param   ADCx - where x can be 1 or 2 to select the ADC peripheral.
 *
 * @return  none
 */
void ADC_DeInit(ADC_TypeDef *ADCx)
{
    101a:	1141                	addi	sp,sp,-16
    if(ADCx == ADC1)
    101c:	400127b7          	lui	a5,0x40012
{
    1020:	c606                	sw	ra,12(sp)
    if(ADCx == ADC1)
    1022:	40078793          	addi	a5,a5,1024 # 40012400 <_eusrstack+0x1fff2400>
    1026:	00f50b63          	beq	a0,a5,103c <ADC_DeInit+0x22>
    {
        RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, ENABLE);
        RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
    }
    else if(ADCx == ADC2)
    102a:	400137b7          	lui	a5,0x40013
    102e:	80078793          	addi	a5,a5,-2048 # 40012800 <_eusrstack+0x1fff2800>
    1032:	02f50163          	beq	a0,a5,1054 <ADC_DeInit+0x3a>
    {
        RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, ENABLE);
        RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, DISABLE);
    }
}
    1036:	40b2                	lw	ra,12(sp)
    1038:	0141                	addi	sp,sp,16
    103a:	8082                	ret
        RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, ENABLE);
    103c:	4585                	li	a1,1
    103e:	20000513          	li	a0,512
    1042:	43d000ef          	jal	ra,1c7e <RCC_APB2PeriphResetCmd>
}
    1046:	40b2                	lw	ra,12(sp)
        RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
    1048:	4581                	li	a1,0
    104a:	20000513          	li	a0,512
}
    104e:	0141                	addi	sp,sp,16
        RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
    1050:	42f0006f          	j	1c7e <RCC_APB2PeriphResetCmd>
        RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, ENABLE);
    1054:	4585                	li	a1,1
    1056:	40000513          	li	a0,1024
    105a:	425000ef          	jal	ra,1c7e <RCC_APB2PeriphResetCmd>
}
    105e:	40b2                	lw	ra,12(sp)
        RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, DISABLE);
    1060:	4581                	li	a1,0
    1062:	40000513          	li	a0,1024
}
    1066:	0141                	addi	sp,sp,16
        RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, DISABLE);
    1068:	4170006f          	j	1c7e <RCC_APB2PeriphResetCmd>

0000106c <ADC_Init>:
    uint32_t tmpreg1 = 0;
    uint8_t  tmpreg2 = 0;

    tmpreg1 = ADCx->CTLR1;
    tmpreg1 &= CTLR1_CLEAR_Mask;
    tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_Mode | (uint32_t)ADC_InitStruct->ADC_OutputBuffer |
    106c:	419c                	lw	a5,0(a1)
    106e:	0185a803          	lw	a6,24(a1)
    1072:	4dd0                	lw	a2,28(a1)
                          (uint32_t)ADC_InitStruct->ADC_Pga | ((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8));
    1074:	41d4                	lw	a3,4(a1)
    tmpreg1 = ADCx->CTLR1;
    1076:	4158                	lw	a4,4(a0)
    tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_Mode | (uint32_t)ADC_InitStruct->ADC_OutputBuffer |
    1078:	0107e7b3          	or	a5,a5,a6
    107c:	8fd1                	or	a5,a5,a2
    tmpreg1 &= CTLR1_CLEAR_Mask;
    107e:	e0f10637          	lui	a2,0xe0f10
                          (uint32_t)ADC_InitStruct->ADC_Pga | ((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8));
    1082:	06a2                	slli	a3,a3,0x8
    tmpreg1 &= CTLR1_CLEAR_Mask;
    1084:	eff60613          	addi	a2,a2,-257 # e0f0feff <_eusrstack+0xc0eefeff>
    1088:	8f71                	and	a4,a4,a2
    tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_Mode | (uint32_t)ADC_InitStruct->ADC_OutputBuffer |
    108a:	8fd5                	or	a5,a5,a3
    108c:	8fd9                	or	a5,a5,a4
    ADCx->CTLR1 = tmpreg1;
    108e:	c15c                	sw	a5,4(a0)

    tmpreg1 = ADCx->CTLR2;
    tmpreg1 &= CTLR2_CLEAR_Mask;
    tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
    1090:	45d0                	lw	a2,12(a1)
    1092:	499c                	lw	a5,16(a1)
                          ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
    1094:	4594                	lw	a3,8(a1)
    tmpreg1 = ADCx->CTLR2;
    1096:	4518                	lw	a4,8(a0)
    tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
    1098:	8fd1                	or	a5,a5,a2
    tmpreg1 &= CTLR2_CLEAR_Mask;
    109a:	fff1f637          	lui	a2,0xfff1f
                          ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
    109e:	0686                	slli	a3,a3,0x1
    tmpreg1 &= CTLR2_CLEAR_Mask;
    10a0:	7fd60613          	addi	a2,a2,2045 # fff1f7fd <_eusrstack+0xdfeff7fd>
    10a4:	8f71                	and	a4,a4,a2
    tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
    10a6:	8fd5                	or	a5,a5,a3
    10a8:	8fd9                	or	a5,a5,a4
    ADCx->CTLR2 = tmpreg1;
    10aa:	c51c                	sw	a5,8(a0)

    tmpreg1 = ADCx->RSQR1;
    tmpreg1 &= RSQR1_CLEAR_Mask;
    tmpreg2 |= (uint8_t)(ADC_InitStruct->ADC_NbrOfChannel - (uint8_t)1);
    10ac:	29dc                	lbu	a5,20(a1)
    tmpreg1 = ADCx->RSQR1;
    10ae:	5558                	lw	a4,44(a0)
    tmpreg1 &= RSQR1_CLEAR_Mask;
    10b0:	ff1006b7          	lui	a3,0xff100
    tmpreg2 |= (uint8_t)(ADC_InitStruct->ADC_NbrOfChannel - (uint8_t)1);
    10b4:	17fd                	addi	a5,a5,-1
    tmpreg1 |= (uint32_t)tmpreg2 << 20;
    10b6:	0ff7f793          	andi	a5,a5,255
    tmpreg1 &= RSQR1_CLEAR_Mask;
    10ba:	16fd                	addi	a3,a3,-1
    10bc:	8f75                	and	a4,a4,a3
    tmpreg1 |= (uint32_t)tmpreg2 << 20;
    10be:	07d2                	slli	a5,a5,0x14
    10c0:	8fd9                	or	a5,a5,a4
    ADCx->RSQR1 = tmpreg1;
    10c2:	d55c                	sw	a5,44(a0)
}
    10c4:	8082                	ret

000010c6 <ADC_Cmd>:
 */
void ADC_Cmd(ADC_TypeDef *ADCx, FunctionalState NewState)
{
    if(NewState != DISABLE)
    {
        ADCx->CTLR2 |= CTLR2_ADON_Set;
    10c6:	451c                	lw	a5,8(a0)
    if(NewState != DISABLE)
    10c8:	c589                	beqz	a1,10d2 <ADC_Cmd+0xc>
        ADCx->CTLR2 |= CTLR2_ADON_Set;
    10ca:	0017e793          	ori	a5,a5,1
    10ce:	c51c                	sw	a5,8(a0)
    10d0:	8082                	ret
    }
    else
    {
        ADCx->CTLR2 &= CTLR2_ADON_Reset;
    10d2:	9bf9                	andi	a5,a5,-2
    10d4:	c51c                	sw	a5,8(a0)
    }
}
    10d6:	8082                	ret

000010d8 <ADC_DMACmd>:
 */
void ADC_DMACmd(ADC_TypeDef *ADCx, FunctionalState NewState)
{
    if(NewState != DISABLE)
    {
        ADCx->CTLR2 |= CTLR2_DMA_Set;
    10d8:	451c                	lw	a5,8(a0)
    if(NewState != DISABLE)
    10da:	c589                	beqz	a1,10e4 <ADC_DMACmd+0xc>
        ADCx->CTLR2 |= CTLR2_DMA_Set;
    10dc:	1007e793          	ori	a5,a5,256
    10e0:	c51c                	sw	a5,8(a0)
    10e2:	8082                	ret
    }
    else
    {
        ADCx->CTLR2 &= CTLR2_DMA_Reset;
    10e4:	eff7f793          	andi	a5,a5,-257
    10e8:	c51c                	sw	a5,8(a0)
    }
}
    10ea:	8082                	ret

000010ec <ADC_RegularChannelConfig>:
 */
void ADC_RegularChannelConfig(ADC_TypeDef *ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)
{
    uint32_t tmpreg1 = 0, tmpreg2 = 0;

    if(ADC_Channel > ADC_Channel_9)
    10ec:	47a5                	li	a5,9
    10ee:	04b7f763          	bgeu	a5,a1,113c <ADC_RegularChannelConfig+0x50>
    {
        tmpreg1 = ADCx->SAMPTR1;
        tmpreg2 = SAMPTR1_SMP_Set << (3 * (ADC_Channel - 10));
    10f2:	ff658813          	addi	a6,a1,-10
    10f6:	00181713          	slli	a4,a6,0x1
        tmpreg1 = ADCx->SAMPTR1;
    10fa:	00c52883          	lw	a7,12(a0)
        tmpreg2 = SAMPTR1_SMP_Set << (3 * (ADC_Channel - 10));
    10fe:	9742                	add	a4,a4,a6
    1100:	479d                	li	a5,7
    1102:	00e797b3          	sll	a5,a5,a4
        tmpreg1 &= ~tmpreg2;
    1106:	fff7c793          	not	a5,a5
    110a:	0117f7b3          	and	a5,a5,a7
        tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
    110e:	00e696b3          	sll	a3,a3,a4
        tmpreg1 |= tmpreg2;
    1112:	8edd                	or	a3,a3,a5
        ADCx->SAMPTR1 = tmpreg1;
    1114:	c554                	sw	a3,12(a0)
        tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
        tmpreg1 |= tmpreg2;
        ADCx->SAMPTR2 = tmpreg1;
    }

    if(Rank < 7)
    1116:	4799                	li	a5,6
    1118:	04c7e563          	bltu	a5,a2,1162 <ADC_RegularChannelConfig+0x76>
    {
        tmpreg1 = ADCx->RSQR3;
        tmpreg2 = RSQR3_SQ_Set << (5 * (Rank - 1));
    111c:	167d                	addi	a2,a2,-1
    111e:	00261793          	slli	a5,a2,0x2
    1122:	963e                	add	a2,a2,a5
        tmpreg1 = ADCx->RSQR3;
    1124:	5958                	lw	a4,52(a0)
        tmpreg2 = RSQR3_SQ_Set << (5 * (Rank - 1));
    1126:	47fd                	li	a5,31
    1128:	00c797b3          	sll	a5,a5,a2
        tmpreg1 &= ~tmpreg2;
    112c:	fff7c793          	not	a5,a5
    1130:	8ff9                	and	a5,a5,a4
        tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
    1132:	00c59633          	sll	a2,a1,a2
        tmpreg1 |= tmpreg2;
    1136:	8e5d                	or	a2,a2,a5
        ADCx->RSQR3 = tmpreg1;
    1138:	d950                	sw	a2,52(a0)
    113a:	8082                	ret
        tmpreg2 = SAMPTR2_SMP_Set << (3 * ADC_Channel);
    113c:	00159713          	slli	a4,a1,0x1
        tmpreg1 = ADCx->SAMPTR2;
    1140:	01052803          	lw	a6,16(a0)
        tmpreg2 = SAMPTR2_SMP_Set << (3 * ADC_Channel);
    1144:	972e                	add	a4,a4,a1
    1146:	479d                	li	a5,7
    1148:	00e797b3          	sll	a5,a5,a4
        tmpreg1 &= ~tmpreg2;
    114c:	fff7c793          	not	a5,a5
    1150:	0107f7b3          	and	a5,a5,a6
        tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
    1154:	00e696b3          	sll	a3,a3,a4
        tmpreg1 |= tmpreg2;
    1158:	8edd                	or	a3,a3,a5
        ADCx->SAMPTR2 = tmpreg1;
    115a:	c914                	sw	a3,16(a0)
    if(Rank < 7)
    115c:	4799                	li	a5,6
    115e:	fac7ffe3          	bgeu	a5,a2,111c <ADC_RegularChannelConfig+0x30>
    }
    else if(Rank < 13)
    1162:	47b1                	li	a5,12
    1164:	02c7e363          	bltu	a5,a2,118a <ADC_RegularChannelConfig+0x9e>
    {
        tmpreg1 = ADCx->RSQR2;
        tmpreg2 = RSQR2_SQ_Set << (5 * (Rank - 7));
    1168:	ff960713          	addi	a4,a2,-7
    116c:	00271613          	slli	a2,a4,0x2
        tmpreg1 = ADCx->RSQR2;
    1170:	5914                	lw	a3,48(a0)
        tmpreg2 = RSQR2_SQ_Set << (5 * (Rank - 7));
    1172:	963a                	add	a2,a2,a4
    1174:	47fd                	li	a5,31
    1176:	00c797b3          	sll	a5,a5,a2
        tmpreg1 &= ~tmpreg2;
    117a:	fff7c793          	not	a5,a5
    117e:	8ff5                	and	a5,a5,a3
        tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
    1180:	00c59633          	sll	a2,a1,a2
        tmpreg1 |= tmpreg2;
    1184:	8e5d                	or	a2,a2,a5
        ADCx->RSQR2 = tmpreg1;
    1186:	d910                	sw	a2,48(a0)
    1188:	8082                	ret
    }
    else
    {
        tmpreg1 = ADCx->RSQR1;
        tmpreg2 = RSQR1_SQ_Set << (5 * (Rank - 13));
    118a:	164d                	addi	a2,a2,-13
    118c:	00261713          	slli	a4,a2,0x2
        tmpreg1 = ADCx->RSQR1;
    1190:	5554                	lw	a3,44(a0)
        tmpreg2 = RSQR1_SQ_Set << (5 * (Rank - 13));
    1192:	963a                	add	a2,a2,a4
    1194:	47fd                	li	a5,31
    1196:	00c797b3          	sll	a5,a5,a2
        tmpreg1 &= ~tmpreg2;
    119a:	fff7c793          	not	a5,a5
    119e:	8ff5                	and	a5,a5,a3
        tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
    11a0:	00c595b3          	sll	a1,a1,a2
        tmpreg1 |= tmpreg2;
    11a4:	8ddd                	or	a1,a1,a5
        ADCx->RSQR1 = tmpreg1;
    11a6:	d54c                	sw	a1,44(a0)
    }
}
    11a8:	8082                	ret

000011aa <ADC_ExternalTrigConvCmd>:
 */
void ADC_ExternalTrigConvCmd(ADC_TypeDef *ADCx, FunctionalState NewState)
{
    if(NewState != DISABLE)
    {
        ADCx->CTLR2 |= CTLR2_EXTTRIG_Set;
    11aa:	451c                	lw	a5,8(a0)
    if(NewState != DISABLE)
    11ac:	c591                	beqz	a1,11b8 <ADC_ExternalTrigConvCmd+0xe>
        ADCx->CTLR2 |= CTLR2_EXTTRIG_Set;
    11ae:	00100737          	lui	a4,0x100
    11b2:	8fd9                	or	a5,a5,a4
    11b4:	c51c                	sw	a5,8(a0)
    11b6:	8082                	ret
    }
    else
    {
        ADCx->CTLR2 &= CTLR2_EXTTRIG_Reset;
    11b8:	fff00737          	lui	a4,0xfff00
    11bc:	177d                	addi	a4,a4,-1
    11be:	8ff9                	and	a5,a5,a4
    11c0:	c51c                	sw	a5,8(a0)
    }
}
    11c2:	8082                	ret

000011c4 <ADC_BufferCmd>:
 */
void ADC_BufferCmd(ADC_TypeDef *ADCx, FunctionalState NewState)
{
    if(NewState != DISABLE)
    {
        ADCx->CTLR1 |= (1 << 26);
    11c4:	415c                	lw	a5,4(a0)
    if(NewState != DISABLE)
    11c6:	c591                	beqz	a1,11d2 <ADC_BufferCmd+0xe>
        ADCx->CTLR1 |= (1 << 26);
    11c8:	04000737          	lui	a4,0x4000
    11cc:	8fd9                	or	a5,a5,a4
    11ce:	c15c                	sw	a5,4(a0)
    11d0:	8082                	ret
    }
    else
    {
        ADCx->CTLR1 &= ~(1 << 26);
    11d2:	fc000737          	lui	a4,0xfc000
    11d6:	177d                	addi	a4,a4,-1
    11d8:	8ff9                	and	a5,a5,a4
    11da:	c15c                	sw	a5,4(a0)
    }
}
    11dc:	8082                	ret

000011de <DAC_Init>:
{
    uint32_t tmpreg1 = 0, tmpreg2 = 0;

    tmpreg1 = DAC->CTLR;
    tmpreg1 &= ~(CTLR_CLEAR_MASK << DAC_Channel);
    tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
    11de:	41d8                	lw	a4,4(a1)
    11e0:	419c                	lw	a5,0(a1)
    11e2:	0085a803          	lw	a6,8(a1)
    tmpreg1 = DAC->CTLR;
    11e6:	400076b7          	lui	a3,0x40007
    tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
    11ea:	45cc                	lw	a1,12(a1)
    11ec:	8fd9                	or	a5,a5,a4
    tmpreg1 &= ~(CTLR_CLEAR_MASK << DAC_Channel);
    11ee:	6705                	lui	a4,0x1
    tmpreg1 = DAC->CTLR;
    11f0:	4006a603          	lw	a2,1024(a3) # 40007400 <_eusrstack+0x1ffe7400>
    tmpreg1 &= ~(CTLR_CLEAR_MASK << DAC_Channel);
    11f4:	1779                	addi	a4,a4,-2
    11f6:	00a71733          	sll	a4,a4,a0
    tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
    11fa:	0107e7b3          	or	a5,a5,a6
    tmpreg1 &= ~(CTLR_CLEAR_MASK << DAC_Channel);
    11fe:	fff74713          	not	a4,a4
    tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
    1202:	8fcd                	or	a5,a5,a1
    tmpreg1 &= ~(CTLR_CLEAR_MASK << DAC_Channel);
    1204:	8f71                	and	a4,a4,a2
               DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | DAC_InitStruct->DAC_OutputBuffer);
    tmpreg1 |= tmpreg2 << DAC_Channel;
    1206:	00a797b3          	sll	a5,a5,a0
    120a:	8fd9                	or	a5,a5,a4
    DAC->CTLR = tmpreg1;
    120c:	40f6a023          	sw	a5,1024(a3)
}
    1210:	8082                	ret

00001212 <DAC_Cmd>:
 *
 * @return  none
 */
void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
{
    if(NewState != DISABLE)
    1212:	4785                	li	a5,1
    {
        DAC->CTLR |= (DAC_EN1 << DAC_Channel);
    1214:	40007737          	lui	a4,0x40007
    1218:	00a79533          	sll	a0,a5,a0
    121c:	40072783          	lw	a5,1024(a4) # 40007400 <_eusrstack+0x1ffe7400>
    if(NewState != DISABLE)
    1220:	c589                	beqz	a1,122a <DAC_Cmd+0x18>
        DAC->CTLR |= (DAC_EN1 << DAC_Channel);
    1222:	8fc9                	or	a5,a5,a0
    1224:	40f72023          	sw	a5,1024(a4)
    1228:	8082                	ret
    }
    else
    {
        DAC->CTLR &= ~(DAC_EN1 << DAC_Channel);
    122a:	fff54513          	not	a0,a0
    122e:	8d7d                	and	a0,a0,a5
    1230:	40a72023          	sw	a0,1024(a4)
    }
}
    1234:	8082                	ret

00001236 <DAC_DMACmd>:
 *
 * @return  none
 */
void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
{
    if(NewState != DISABLE)
    1236:	6785                	lui	a5,0x1
    {
        DAC->CTLR |= (DAC_DMAEN1 << DAC_Channel);
    1238:	40007737          	lui	a4,0x40007
    123c:	00a79533          	sll	a0,a5,a0
    1240:	40072783          	lw	a5,1024(a4) # 40007400 <_eusrstack+0x1ffe7400>
    if(NewState != DISABLE)
    1244:	c589                	beqz	a1,124e <DAC_DMACmd+0x18>
        DAC->CTLR |= (DAC_DMAEN1 << DAC_Channel);
    1246:	8fc9                	or	a5,a5,a0
    1248:	40f72023          	sw	a5,1024(a4)
    124c:	8082                	ret
    }
    else
    {
        DAC->CTLR &= ~(DAC_DMAEN1 << DAC_Channel);
    124e:	fff54513          	not	a0,a0
    1252:	8d7d                	and	a0,a0,a5
    1254:	40a72023          	sw	a0,1024(a4)
    }
}
    1258:	8082                	ret

0000125a <DMA_DeInit>:
 *
 * @return  none
 */
void DMA_DeInit(DMA_Channel_TypeDef *DMAy_Channelx)
{
    DMAy_Channelx->CFGR &= (uint16_t)(~DMA_CFGR1_EN);
    125a:	411c                	lw	a5,0(a0)
    125c:	6741                	lui	a4,0x10
    125e:	1779                	addi	a4,a4,-2
    1260:	8ff9                	and	a5,a5,a4
    1262:	c11c                	sw	a5,0(a0)
    DMAy_Channelx->CFGR = 0;
    1264:	00052023          	sw	zero,0(a0)
    DMAy_Channelx->CNTR = 0;
    1268:	00052223          	sw	zero,4(a0)
    DMAy_Channelx->PADDR = 0;
    126c:	00052423          	sw	zero,8(a0)
    DMAy_Channelx->MADDR = 0;
    if(DMAy_Channelx == DMA1_Channel1)
    1270:	400207b7          	lui	a5,0x40020
    DMAy_Channelx->MADDR = 0;
    1274:	00052623          	sw	zero,12(a0)
    if(DMAy_Channelx == DMA1_Channel1)
    1278:	00878713          	addi	a4,a5,8 # 40020008 <_eusrstack+0x20000008>
    127c:	08e50e63          	beq	a0,a4,1318 <DMA_DeInit+0xbe>
    {
        DMA1->INTFCR |= DMA1_Channel1_IT_Mask;
    }
    else if(DMAy_Channelx == DMA1_Channel2)
    1280:	01c78713          	addi	a4,a5,28
    1284:	08e50563          	beq	a0,a4,130e <DMA_DeInit+0xb4>
    {
        DMA1->INTFCR |= DMA1_Channel2_IT_Mask;
    }
    else if(DMAy_Channelx == DMA1_Channel3)
    1288:	03078713          	addi	a4,a5,48
    128c:	0ae50163          	beq	a0,a4,132e <DMA_DeInit+0xd4>
    {
        DMA1->INTFCR |= DMA1_Channel3_IT_Mask;
    }
    else if(DMAy_Channelx == DMA1_Channel4)
    1290:	04478713          	addi	a4,a5,68
    1294:	0ae50463          	beq	a0,a4,133c <DMA_DeInit+0xe2>
    {
        DMA1->INTFCR |= DMA1_Channel4_IT_Mask;
    }
    else if(DMAy_Channelx == DMA1_Channel5)
    1298:	05878713          	addi	a4,a5,88
    129c:	08e50363          	beq	a0,a4,1322 <DMA_DeInit+0xc8>
    {
        DMA1->INTFCR |= DMA1_Channel5_IT_Mask;
    }
    else if(DMAy_Channelx == DMA1_Channel6)
    12a0:	06c78713          	addi	a4,a5,108
    12a4:	0ae50163          	beq	a0,a4,1346 <DMA_DeInit+0xec>
    {
        DMA1->INTFCR |= DMA1_Channel6_IT_Mask;
    }
    else if(DMAy_Channelx == DMA1_Channel7)
    12a8:	08078713          	addi	a4,a5,128
    12ac:	0ce50163          	beq	a0,a4,136e <DMA_DeInit+0x114>
    {
        DMA1->INTFCR |= DMA1_Channel7_IT_Mask;
    }
    else if(DMAy_Channelx == DMA2_Channel1)
    12b0:	40878713          	addi	a4,a5,1032
    12b4:	0ce50363          	beq	a0,a4,137a <DMA_DeInit+0x120>
    {
        DMA2->INTFCR |= DMA2_Channel1_IT_Mask;
    }
    else if(DMAy_Channelx == DMA2_Channel2)
    12b8:	41c78713          	addi	a4,a5,1052
    12bc:	08e50b63          	beq	a0,a4,1352 <DMA_DeInit+0xf8>
    {
        DMA2->INTFCR |= DMA2_Channel2_IT_Mask;
    }
    else if(DMAy_Channelx == DMA2_Channel3)
    12c0:	43078793          	addi	a5,a5,1072
    12c4:	0cf50263          	beq	a0,a5,1388 <DMA_DeInit+0x12e>
    {
        DMA2->INTFCR |= DMA2_Channel3_IT_Mask;
    }
    else if(DMAy_Channelx == DMA2_Channel4)
    12c8:	400207b7          	lui	a5,0x40020
    12cc:	44478713          	addi	a4,a5,1092 # 40020444 <_eusrstack+0x20000444>
    12d0:	0ce50763          	beq	a0,a4,139e <DMA_DeInit+0x144>
    {
        DMA2->INTFCR |= DMA2_Channel4_IT_Mask;
    }
    else if(DMAy_Channelx == DMA2_Channel5)
    12d4:	45878713          	addi	a4,a5,1112
    12d8:	0ce50a63          	beq	a0,a4,13ac <DMA_DeInit+0x152>
    {
        DMA2->INTFCR |= DMA2_Channel5_IT_Mask;
    }
    else if(DMAy_Channelx == DMA2_Channel6)
    12dc:	46c78713          	addi	a4,a5,1132
    12e0:	0ce50e63          	beq	a0,a4,13bc <DMA_DeInit+0x162>
    {
        DMA2->INTFCR |= DMA2_Channel6_IT_Mask;
    }
    else if(DMAy_Channelx == DMA2_Channel7)
    12e4:	48078713          	addi	a4,a5,1152
    12e8:	0ee50263          	beq	a0,a4,13cc <DMA_DeInit+0x172>
    {
        DMA2->INTFCR |= DMA2_Channel7_IT_Mask;
    }
    else if(DMAy_Channelx == DMA2_Channel8)
    12ec:	49078713          	addi	a4,a5,1168
    12f0:	0ee50663          	beq	a0,a4,13dc <DMA_DeInit+0x182>
    {
        DMA2_EXTEN->INTFCR |= DMA2_Channel8_IT_Mask;
    }
    else if(DMAy_Channelx == DMA2_Channel9)
    12f4:	4a078713          	addi	a4,a5,1184
    12f8:	0ee50963          	beq	a0,a4,13ea <DMA_DeInit+0x190>
    {
        DMA2_EXTEN->INTFCR |= DMA2_Channel9_IT_Mask;
    }
    else if(DMAy_Channelx == DMA2_Channel10)
    12fc:	4b078713          	addi	a4,a5,1200
    1300:	0ee50c63          	beq	a0,a4,13f8 <DMA_DeInit+0x19e>
    {
        DMA2_EXTEN->INTFCR |= DMA2_Channel10_IT_Mask;
    }
    else if(DMAy_Channelx == DMA2_Channel11)
    1304:	4c078713          	addi	a4,a5,1216
    1308:	04e50c63          	beq	a0,a4,1360 <DMA_DeInit+0x106>
    {
        DMA2_EXTEN->INTFCR |= DMA2_Channel11_IT_Mask;
    }
}
    130c:	8082                	ret
        DMA1->INTFCR |= DMA1_Channel2_IT_Mask;
    130e:	43d8                	lw	a4,4(a5)
    1310:	0f076713          	ori	a4,a4,240
    1314:	c3d8                	sw	a4,4(a5)
    1316:	8082                	ret
        DMA1->INTFCR |= DMA1_Channel1_IT_Mask;
    1318:	43d8                	lw	a4,4(a5)
    131a:	00f76713          	ori	a4,a4,15
    131e:	c3d8                	sw	a4,4(a5)
    1320:	8082                	ret
        DMA1->INTFCR |= DMA1_Channel5_IT_Mask;
    1322:	43d8                	lw	a4,4(a5)
    1324:	000f06b7          	lui	a3,0xf0
    1328:	8f55                	or	a4,a4,a3
    132a:	c3d8                	sw	a4,4(a5)
    132c:	8082                	ret
        DMA1->INTFCR |= DMA1_Channel3_IT_Mask;
    132e:	43d8                	lw	a4,4(a5)
    1330:	6685                	lui	a3,0x1
    1332:	f0068693          	addi	a3,a3,-256 # f00 <TIM3_IRQHandler>
    1336:	8f55                	or	a4,a4,a3
    1338:	c3d8                	sw	a4,4(a5)
    133a:	8082                	ret
        DMA1->INTFCR |= DMA1_Channel4_IT_Mask;
    133c:	43d8                	lw	a4,4(a5)
    133e:	66bd                	lui	a3,0xf
    1340:	8f55                	or	a4,a4,a3
    1342:	c3d8                	sw	a4,4(a5)
    1344:	8082                	ret
        DMA1->INTFCR |= DMA1_Channel6_IT_Mask;
    1346:	43d8                	lw	a4,4(a5)
    1348:	00f006b7          	lui	a3,0xf00
    134c:	8f55                	or	a4,a4,a3
    134e:	c3d8                	sw	a4,4(a5)
    1350:	8082                	ret
        DMA2->INTFCR |= DMA2_Channel2_IT_Mask;
    1352:	4047a703          	lw	a4,1028(a5)
    1356:	0f076713          	ori	a4,a4,240
    135a:	40e7a223          	sw	a4,1028(a5)
    135e:	8082                	ret
        DMA2_EXTEN->INTFCR |= DMA2_Channel11_IT_Mask;
    1360:	4d47a703          	lw	a4,1236(a5)
    1364:	66bd                	lui	a3,0xf
    1366:	8f55                	or	a4,a4,a3
    1368:	4ce7aa23          	sw	a4,1236(a5)
}
    136c:	8082                	ret
        DMA1->INTFCR |= DMA1_Channel7_IT_Mask;
    136e:	43d8                	lw	a4,4(a5)
    1370:	0f0006b7          	lui	a3,0xf000
    1374:	8f55                	or	a4,a4,a3
    1376:	c3d8                	sw	a4,4(a5)
    1378:	8082                	ret
        DMA2->INTFCR |= DMA2_Channel1_IT_Mask;
    137a:	4047a703          	lw	a4,1028(a5)
    137e:	00f76713          	ori	a4,a4,15
    1382:	40e7a223          	sw	a4,1028(a5)
    1386:	8082                	ret
        DMA2->INTFCR |= DMA2_Channel3_IT_Mask;
    1388:	400207b7          	lui	a5,0x40020
    138c:	4047a703          	lw	a4,1028(a5) # 40020404 <_eusrstack+0x20000404>
    1390:	6685                	lui	a3,0x1
    1392:	f0068693          	addi	a3,a3,-256 # f00 <TIM3_IRQHandler>
    1396:	8f55                	or	a4,a4,a3
    1398:	40e7a223          	sw	a4,1028(a5)
    139c:	8082                	ret
        DMA2->INTFCR |= DMA2_Channel4_IT_Mask;
    139e:	4047a703          	lw	a4,1028(a5)
    13a2:	66bd                	lui	a3,0xf
    13a4:	8f55                	or	a4,a4,a3
    13a6:	40e7a223          	sw	a4,1028(a5)
    13aa:	8082                	ret
        DMA2->INTFCR |= DMA2_Channel5_IT_Mask;
    13ac:	4047a703          	lw	a4,1028(a5)
    13b0:	000f06b7          	lui	a3,0xf0
    13b4:	8f55                	or	a4,a4,a3
    13b6:	40e7a223          	sw	a4,1028(a5)
    13ba:	8082                	ret
        DMA2->INTFCR |= DMA2_Channel6_IT_Mask;
    13bc:	4047a703          	lw	a4,1028(a5)
    13c0:	00f006b7          	lui	a3,0xf00
    13c4:	8f55                	or	a4,a4,a3
    13c6:	40e7a223          	sw	a4,1028(a5)
    13ca:	8082                	ret
        DMA2->INTFCR |= DMA2_Channel7_IT_Mask;
    13cc:	4047a703          	lw	a4,1028(a5)
    13d0:	0f0006b7          	lui	a3,0xf000
    13d4:	8f55                	or	a4,a4,a3
    13d6:	40e7a223          	sw	a4,1028(a5)
    13da:	8082                	ret
        DMA2_EXTEN->INTFCR |= DMA2_Channel8_IT_Mask;
    13dc:	4d47a703          	lw	a4,1236(a5)
    13e0:	00f76713          	ori	a4,a4,15
    13e4:	4ce7aa23          	sw	a4,1236(a5)
    13e8:	8082                	ret
        DMA2_EXTEN->INTFCR |= DMA2_Channel9_IT_Mask;
    13ea:	4d47a703          	lw	a4,1236(a5)
    13ee:	0f076713          	ori	a4,a4,240
    13f2:	4ce7aa23          	sw	a4,1236(a5)
    13f6:	8082                	ret
        DMA2_EXTEN->INTFCR |= DMA2_Channel10_IT_Mask;
    13f8:	4d47a703          	lw	a4,1236(a5)
    13fc:	6685                	lui	a3,0x1
    13fe:	f0068693          	addi	a3,a3,-256 # f00 <TIM3_IRQHandler>
    1402:	8f55                	or	a4,a4,a3
    1404:	4ce7aa23          	sw	a4,1236(a5)
    1408:	8082                	ret

0000140a <DMA_Init>:
{
    uint32_t tmpreg = 0;

    tmpreg = DMAy_Channelx->CFGR;
    tmpreg &= CFGR_CLEAR_Mask;
    tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
    140a:	5190                	lw	a2,32(a1)
    140c:	459c                	lw	a5,8(a1)
    140e:	4994                	lw	a3,16(a1)
              DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
    1410:	49d8                	lw	a4,20(a1)
    1412:	0185a883          	lw	a7,24(a1)
    tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
    1416:	8fd1                	or	a5,a5,a2
    1418:	8fd5                	or	a5,a5,a3
              DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
    141a:	4dd0                	lw	a2,28(a1)
    141c:	51d4                	lw	a3,36(a1)
              DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
    141e:	8fd9                	or	a5,a5,a4
    1420:	0117e7b3          	or	a5,a5,a7
    tmpreg = DMAy_Channelx->CFGR;
    1424:	4118                	lw	a4,0(a0)
              DMA_InitStruct->DMA_Priority | DMA_InitStruct->DMA_M2M;
    1426:	0285a803          	lw	a6,40(a1)
              DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
    142a:	8fd1                	or	a5,a5,a2
    142c:	8fd5                	or	a5,a5,a3
    tmpreg &= CFGR_CLEAR_Mask;
    142e:	76e1                	lui	a3,0xffff8
    1430:	06bd                	addi	a3,a3,15

    DMAy_Channelx->CFGR = tmpreg;
    DMAy_Channelx->CNTR = DMA_InitStruct->DMA_BufferSize;
    1432:	45d0                	lw	a2,12(a1)
    tmpreg &= CFGR_CLEAR_Mask;
    1434:	8f75                	and	a4,a4,a3
              DMA_InitStruct->DMA_Priority | DMA_InitStruct->DMA_M2M;
    1436:	0107e7b3          	or	a5,a5,a6
    DMAy_Channelx->PADDR = DMA_InitStruct->DMA_PeripheralBaseAddr;
    143a:	4194                	lw	a3,0(a1)
    tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
    143c:	8fd9                	or	a5,a5,a4
    DMAy_Channelx->CFGR = tmpreg;
    143e:	c11c                	sw	a5,0(a0)
    DMAy_Channelx->MADDR = DMA_InitStruct->DMA_MemoryBaseAddr;
    1440:	41dc                	lw	a5,4(a1)
    DMAy_Channelx->CNTR = DMA_InitStruct->DMA_BufferSize;
    1442:	c150                	sw	a2,4(a0)
    DMAy_Channelx->PADDR = DMA_InitStruct->DMA_PeripheralBaseAddr;
    1444:	c514                	sw	a3,8(a0)
    DMAy_Channelx->MADDR = DMA_InitStruct->DMA_MemoryBaseAddr;
    1446:	c55c                	sw	a5,12(a0)
}
    1448:	8082                	ret

0000144a <DMA_StructInit>:
 *
 * @return  none
 */
void DMA_StructInit(DMA_InitTypeDef *DMA_InitStruct)
{
    DMA_InitStruct->DMA_PeripheralBaseAddr = 0;
    144a:	00052023          	sw	zero,0(a0)
    DMA_InitStruct->DMA_MemoryBaseAddr = 0;
    144e:	00052223          	sw	zero,4(a0)
    DMA_InitStruct->DMA_DIR = DMA_DIR_PeripheralSRC;
    1452:	00052423          	sw	zero,8(a0)
    DMA_InitStruct->DMA_BufferSize = 0;
    1456:	00052623          	sw	zero,12(a0)
    DMA_InitStruct->DMA_PeripheralInc = DMA_PeripheralInc_Disable;
    145a:	00052823          	sw	zero,16(a0)
    DMA_InitStruct->DMA_MemoryInc = DMA_MemoryInc_Disable;
    145e:	00052a23          	sw	zero,20(a0)
    DMA_InitStruct->DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
    1462:	00052c23          	sw	zero,24(a0)
    DMA_InitStruct->DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
    1466:	00052e23          	sw	zero,28(a0)
    DMA_InitStruct->DMA_Mode = DMA_Mode_Normal;
    146a:	02052023          	sw	zero,32(a0)
    DMA_InitStruct->DMA_Priority = DMA_Priority_Low;
    146e:	02052223          	sw	zero,36(a0)
    DMA_InitStruct->DMA_M2M = DMA_M2M_Disable;
    1472:	02052423          	sw	zero,40(a0)
}
    1476:	8082                	ret

00001478 <DMA_Cmd>:
 */
void DMA_Cmd(DMA_Channel_TypeDef *DMAy_Channelx, FunctionalState NewState)
{
    if(NewState != DISABLE)
    {
        DMAy_Channelx->CFGR |= DMA_CFGR1_EN;
    1478:	411c                	lw	a5,0(a0)
    if(NewState != DISABLE)
    147a:	c589                	beqz	a1,1484 <DMA_Cmd+0xc>
        DMAy_Channelx->CFGR |= DMA_CFGR1_EN;
    147c:	0017e793          	ori	a5,a5,1
    1480:	c11c                	sw	a5,0(a0)
    1482:	8082                	ret
    }
    else
    {
        DMAy_Channelx->CFGR &= (uint16_t)(~DMA_CFGR1_EN);
    1484:	6741                	lui	a4,0x10
    1486:	1779                	addi	a4,a4,-2
    1488:	8ff9                	and	a5,a5,a4
    148a:	c11c                	sw	a5,0(a0)
    }
}
    148c:	8082                	ret

0000148e <DMA_ITConfig>:
 */
void DMA_ITConfig(DMA_Channel_TypeDef *DMAy_Channelx, uint32_t DMA_IT, FunctionalState NewState)
{
    if(NewState != DISABLE)
    {
        DMAy_Channelx->CFGR |= DMA_IT;
    148e:	411c                	lw	a5,0(a0)
    if(NewState != DISABLE)
    1490:	c601                	beqz	a2,1498 <DMA_ITConfig+0xa>
        DMAy_Channelx->CFGR |= DMA_IT;
    1492:	8ddd                	or	a1,a1,a5
    1494:	c10c                	sw	a1,0(a0)
    1496:	8082                	ret
    }
    else
    {
        DMAy_Channelx->CFGR &= ~DMA_IT;
    1498:	fff5c593          	not	a1,a1
    149c:	8dfd                	and	a1,a1,a5
    149e:	c10c                	sw	a1,0(a0)
    }
}
    14a0:	8082                	ret

000014a2 <DMA_ClearITPendingBit>:
    14a2:	00351793          	slli	a5,a0,0x3
    14a6:	0007d763          	bgez	a5,14b4 <DMA_ClearITPendingBit+0x12>
    14aa:	400207b7          	lui	a5,0x40020
    14ae:	40a7a223          	sw	a0,1028(a5) # 40020404 <_eusrstack+0x20000404>
    14b2:	8082                	ret
    14b4:	00251793          	slli	a5,a0,0x2
    14b8:	0007d763          	bgez	a5,14c6 <DMA_ClearITPendingBit+0x24>
    14bc:	400207b7          	lui	a5,0x40020
    14c0:	4ca7aa23          	sw	a0,1236(a5) # 400204d4 <_eusrstack+0x200004d4>
    14c4:	8082                	ret
    14c6:	400207b7          	lui	a5,0x40020
    14ca:	c3c8                	sw	a0,4(a5)
    14cc:	8082                	ret

000014ce <FLASH_Unlock_Fast>:
 * @return  none
 */
void FLASH_Unlock_Fast(void)
{
    /* Authorize the FPEC of Bank1 Access */
    FLASH->KEYR = FLASH_KEY1;
    14ce:	456706b7          	lui	a3,0x45670
    14d2:	400227b7          	lui	a5,0x40022
    14d6:	12368693          	addi	a3,a3,291 # 45670123 <_eusrstack+0x25650123>
    FLASH->KEYR = FLASH_KEY2;
    14da:	cdef9737          	lui	a4,0xcdef9
    FLASH->KEYR = FLASH_KEY1;
    14de:	c3d4                	sw	a3,4(a5)
    FLASH->KEYR = FLASH_KEY2;
    14e0:	9ab70713          	addi	a4,a4,-1621 # cdef89ab <_eusrstack+0xaded89ab>
    14e4:	c3d8                	sw	a4,4(a5)

    /* Fast program mode unlock */
    FLASH->MODEKEYR = FLASH_KEY1;
    14e6:	d3d4                	sw	a3,36(a5)
    FLASH->MODEKEYR = FLASH_KEY2;
    14e8:	d3d8                	sw	a4,36(a5)
}
    14ea:	8082                	ret

000014ec <FLASH_Lock_Fast>:
    14ec:	40022737          	lui	a4,0x40022
    14f0:	4b1c                	lw	a5,16(a4)
    14f2:	0807e793          	ori	a5,a5,128
    14f6:	cb1c                	sw	a5,16(a4)
    14f8:	8082                	ret

000014fa <FLASH_EraseBlock_64K_Fast>:
 */
void FLASH_EraseBlock_64K_Fast(uint32_t Block_Address)
{
    Block_Address &= 0xFFFF0000;

    FLASH->CTLR |= CR_BER64;
    14fa:	400227b7          	lui	a5,0x40022
    14fe:	4b98                	lw	a4,16(a5)
    1500:	000806b7          	lui	a3,0x80
    1504:	8f55                	or	a4,a4,a3
    1506:	cb98                	sw	a4,16(a5)
    Block_Address &= 0xFFFF0000;
    1508:	7741                	lui	a4,0xffff0
    150a:	8d79                	and	a0,a0,a4
    FLASH->ADDR = Block_Address;
    150c:	cbc8                	sw	a0,20(a5)
    FLASH->CTLR |= CR_STRT_Set;
    150e:	4b94                	lw	a3,16(a5)
    while(FLASH->STATR & SR_BSY)
    1510:	40022737          	lui	a4,0x40022
    FLASH->CTLR |= CR_STRT_Set;
    1514:	0406e693          	ori	a3,a3,64
    1518:	cb94                	sw	a3,16(a5)
    while(FLASH->STATR & SR_BSY)
    151a:	475c                	lw	a5,12(a4)
    151c:	8b85                	andi	a5,a5,1
    151e:	fff5                	bnez	a5,151a <FLASH_EraseBlock_64K_Fast+0x20>
        ;
    FLASH->CTLR &= ~CR_BER64;
    1520:	4b1c                	lw	a5,16(a4)
    1522:	fff806b7          	lui	a3,0xfff80
    1526:	16fd                	addi	a3,a3,-1
    1528:	8ff5                	and	a5,a5,a3
    152a:	cb1c                	sw	a5,16(a4)
}
    152c:	8082                	ret

0000152e <FLASH_ProgramPage_Fast>:
{
    uint8_t size = 64;

    Page_Address &= 0xFFFFFF00;

    FLASH->CTLR |= CR_PAGE_PG;
    152e:	40022737          	lui	a4,0x40022
    1532:	4b1c                	lw	a5,16(a4)
    1534:	66c1                	lui	a3,0x10
    Page_Address &= 0xFFFFFF00;
    1536:	f0057513          	andi	a0,a0,-256
    FLASH->CTLR |= CR_PAGE_PG;
    153a:	8fd5                	or	a5,a5,a3
    153c:	cb1c                	sw	a5,16(a4)
    while(FLASH->STATR & SR_BSY)
    153e:	475c                	lw	a5,12(a4)
    1540:	8b85                	andi	a5,a5,1
    1542:	fff5                	bnez	a5,153e <FLASH_ProgramPage_Fast+0x10>
        ;
    while(FLASH->STATR & SR_WR_BSY)
    1544:	40022737          	lui	a4,0x40022
    1548:	475c                	lw	a5,12(a4)
    154a:	8b89                	andi	a5,a5,2
    154c:	fff5                	bnez	a5,1548 <FLASH_ProgramPage_Fast+0x1a>
    154e:	86ae                	mv	a3,a1
    1550:	8d15                	sub	a0,a0,a3
    1552:	10058593          	addi	a1,a1,256
    {
        *(uint32_t *)Page_Address = *(uint32_t *)pbuf;
        Page_Address += 4;
        pbuf += 1;
        size -= 1;
        while(FLASH->STATR & SR_WR_BSY)
    1556:	40022737          	lui	a4,0x40022
        *(uint32_t *)Page_Address = *(uint32_t *)pbuf;
    155a:	4290                	lw	a2,0(a3)
    155c:	00a687b3          	add	a5,a3,a0
    1560:	0691                	addi	a3,a3,4
    1562:	c390                	sw	a2,0(a5)
        while(FLASH->STATR & SR_WR_BSY)
    1564:	475c                	lw	a5,12(a4)
    1566:	8b89                	andi	a5,a5,2
    1568:	fff5                	bnez	a5,1564 <FLASH_ProgramPage_Fast+0x36>
    while(size)
    156a:	fed598e3          	bne	a1,a3,155a <FLASH_ProgramPage_Fast+0x2c>
            ;
    }

    FLASH->CTLR |= CR_PG_STRT;
    156e:	4b1c                	lw	a5,16(a4)
    1570:	00200637          	lui	a2,0x200
    while(FLASH->STATR & SR_BSY)
    1574:	400226b7          	lui	a3,0x40022
    FLASH->CTLR |= CR_PG_STRT;
    1578:	8fd1                	or	a5,a5,a2
    157a:	cb1c                	sw	a5,16(a4)
    while(FLASH->STATR & SR_BSY)
    157c:	46dc                	lw	a5,12(a3)
    157e:	8b85                	andi	a5,a5,1
    1580:	fff5                	bnez	a5,157c <FLASH_ProgramPage_Fast+0x4e>
        ;
    FLASH->CTLR &= ~CR_PAGE_PG;
    1582:	4a9c                	lw	a5,16(a3)
    1584:	7741                	lui	a4,0xffff0
    1586:	177d                	addi	a4,a4,-1
    1588:	8ff9                	and	a5,a5,a4
    158a:	ca9c                	sw	a5,16(a3)
}
    158c:	8082                	ret

0000158e <GPIO_Init>:
void GPIO_Init(GPIO_TypeDef *GPIOx, GPIO_InitTypeDef *GPIO_InitStruct)
{
    uint32_t currentmode = 0x00, currentpin = 0x00, pinpos = 0x00, pos = 0x00;
    uint32_t tmpreg = 0x00, pinmask = 0x00;

    currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);
    158e:	4594                	lw	a3,8(a1)

    if((((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x10)) != 0x00)
    1590:	0106f793          	andi	a5,a3,16
    currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);
    1594:	00f6f613          	andi	a2,a3,15
    if((((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x10)) != 0x00)
    1598:	c399                	beqz	a5,159e <GPIO_Init+0x10>
    {
        currentmode |= (uint32_t)GPIO_InitStruct->GPIO_Speed;
    159a:	41dc                	lw	a5,4(a1)
    159c:	8e5d                	or	a2,a2,a5
    }

    if(((uint32_t)GPIO_InitStruct->GPIO_Pin & ((uint32_t)0x00FF)) != 0x00)
    159e:	219e                	lhu	a5,0(a1)
    15a0:	0ff7f713          	andi	a4,a5,255
    15a4:	cb39                	beqz	a4,15fa <GPIO_Init+0x6c>
    {
        tmpreg = GPIOx->CFGLR;
    15a6:	4118                	lw	a4,0(a0)

        for(pinpos = 0x00; pinpos < 0x08; pinpos++)
    15a8:	04800593          	li	a1,72
    15ac:	1ab68a63          	beq	a3,a1,1760 <GPIO_Init+0x1d2>
    15b0:	02800593          	li	a1,40
    15b4:	3ab68163          	beq	a3,a1,1956 <GPIO_Init+0x3c8>
        {
            pos = ((uint32_t)0x01) << pinpos;
            currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;

            if(currentpin == pos)
    15b8:	0017f593          	andi	a1,a5,1
    15bc:	30059e63          	bnez	a1,18d8 <GPIO_Init+0x34a>
    15c0:	0027f593          	andi	a1,a5,2
    15c4:	32059c63          	bnez	a1,18fc <GPIO_Init+0x36e>
    15c8:	0047f593          	andi	a1,a5,4
    15cc:	36059563          	bnez	a1,1936 <GPIO_Init+0x3a8>
    15d0:	0087f593          	andi	a1,a5,8
    15d4:	34059a63          	bnez	a1,1928 <GPIO_Init+0x39a>
    15d8:	0107f593          	andi	a1,a5,16
    15dc:	32059e63          	bnez	a1,1918 <GPIO_Init+0x38a>
    15e0:	0207f593          	andi	a1,a5,32
    15e4:	32059263          	bnez	a1,1908 <GPIO_Init+0x37a>
    15e8:	0407f593          	andi	a1,a5,64
    15ec:	30059063          	bnez	a1,18ec <GPIO_Init+0x35e>
    15f0:	0807f593          	andi	a1,a5,128
    15f4:	2e059563          	bnez	a1,18de <GPIO_Init+0x350>
                        GPIOx->BSHR = (((uint32_t)0x01) << pinpos);
                    }
                }
            }
        }
        GPIOx->CFGLR = tmpreg;
    15f8:	c118                	sw	a4,0(a0)
    }

    if(GPIO_InitStruct->GPIO_Pin > 0x00FF)
    15fa:	0ff00713          	li	a4,255
    15fe:	0cf77063          	bgeu	a4,a5,16be <GPIO_Init+0x130>
    {
        tmpreg = GPIOx->CFGHR;
    1602:	4158                	lw	a4,4(a0)

        for(pinpos = 0x00; pinpos < 0x08; pinpos++)
    1604:	04800593          	li	a1,72
    1608:	0ab69c63          	bne	a3,a1,16c0 <GPIO_Init+0x132>
        {
            pos = (((uint32_t)0x01) << (pinpos + 0x08));
            currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);

            if(currentpin == pos)
    160c:	1007f693          	andi	a3,a5,256
    1610:	c691                	beqz	a3,161c <GPIO_Init+0x8e>
            {
                pos = pinpos << 2;
                pinmask = ((uint32_t)0x0F) << pos;
                tmpreg &= ~pinmask;
    1612:	9b41                	andi	a4,a4,-16
                    GPIOx->BCR = (((uint32_t)0x01) << (pinpos + 0x08));
                }

                if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
                {
                    GPIOx->BSHR = (((uint32_t)0x01) << (pinpos + 0x08));
    1614:	10000693          	li	a3,256
                tmpreg |= (currentmode << pos);
    1618:	8f51                	or	a4,a4,a2
                    GPIOx->BSHR = (((uint32_t)0x01) << (pinpos + 0x08));
    161a:	c914                	sw	a3,16(a0)
            if(currentpin == pos)
    161c:	2007f693          	andi	a3,a5,512
    1620:	ca89                	beqz	a3,1632 <GPIO_Init+0xa4>
                tmpreg |= (currentmode << pos);
    1622:	00461693          	slli	a3,a2,0x4
                tmpreg &= ~pinmask;
    1626:	f0f77713          	andi	a4,a4,-241
                tmpreg |= (currentmode << pos);
    162a:	8f55                	or	a4,a4,a3
                    GPIOx->BSHR = (((uint32_t)0x01) << (pinpos + 0x08));
    162c:	20000693          	li	a3,512
    1630:	c914                	sw	a3,16(a0)
            if(currentpin == pos)
    1632:	4007f693          	andi	a3,a5,1024
    1636:	ca99                	beqz	a3,164c <GPIO_Init+0xbe>
                tmpreg &= ~pinmask;
    1638:	76fd                	lui	a3,0xfffff
    163a:	0ff68693          	addi	a3,a3,255 # fffff0ff <_eusrstack+0xdffdf0ff>
    163e:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    1640:	00861693          	slli	a3,a2,0x8
    1644:	8f55                	or	a4,a4,a3
                    GPIOx->BSHR = (((uint32_t)0x01) << (pinpos + 0x08));
    1646:	40000693          	li	a3,1024
    164a:	c914                	sw	a3,16(a0)
            if(currentpin == pos)
    164c:	6685                	lui	a3,0x1
    164e:	80068693          	addi	a3,a3,-2048 # 800 <__stack_size>
    1652:	00d7f5b3          	and	a1,a5,a3
    1656:	c981                	beqz	a1,1666 <GPIO_Init+0xd8>
                tmpreg &= ~pinmask;
    1658:	75c5                	lui	a1,0xffff1
    165a:	15fd                	addi	a1,a1,-1
    165c:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    165e:	00c61593          	slli	a1,a2,0xc
    1662:	8f4d                	or	a4,a4,a1
                    GPIOx->BSHR = (((uint32_t)0x01) << (pinpos + 0x08));
    1664:	c914                	sw	a3,16(a0)
            if(currentpin == pos)
    1666:	01379693          	slli	a3,a5,0x13
    166a:	0006db63          	bgez	a3,1680 <GPIO_Init+0xf2>
                tmpreg &= ~pinmask;
    166e:	fff106b7          	lui	a3,0xfff10
    1672:	16fd                	addi	a3,a3,-1
    1674:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    1676:	01061693          	slli	a3,a2,0x10
    167a:	8f55                	or	a4,a4,a3
                    GPIOx->BSHR = (((uint32_t)0x01) << (pinpos + 0x08));
    167c:	6685                	lui	a3,0x1
    167e:	c914                	sw	a3,16(a0)
            if(currentpin == pos)
    1680:	01279693          	slli	a3,a5,0x12
    1684:	0006db63          	bgez	a3,169a <GPIO_Init+0x10c>
                tmpreg &= ~pinmask;
    1688:	ff1006b7          	lui	a3,0xff100
    168c:	16fd                	addi	a3,a3,-1
    168e:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    1690:	01461693          	slli	a3,a2,0x14
    1694:	8f55                	or	a4,a4,a3
                    GPIOx->BSHR = (((uint32_t)0x01) << (pinpos + 0x08));
    1696:	6689                	lui	a3,0x2
    1698:	c914                	sw	a3,16(a0)
            if(currentpin == pos)
    169a:	01179693          	slli	a3,a5,0x11
    169e:	0006db63          	bgez	a3,16b4 <GPIO_Init+0x126>
                tmpreg &= ~pinmask;
    16a2:	f10006b7          	lui	a3,0xf1000
    16a6:	16fd                	addi	a3,a3,-1
    16a8:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    16aa:	01861693          	slli	a3,a2,0x18
    16ae:	8f55                	or	a4,a4,a3
                    GPIOx->BSHR = (((uint32_t)0x01) << (pinpos + 0x08));
    16b0:	6691                	lui	a3,0x4
    16b2:	c914                	sw	a3,16(a0)
            if(currentpin == pos)
    16b4:	07c2                	slli	a5,a5,0x10
    16b6:	87c1                	srai	a5,a5,0x10
    16b8:	2807c763          	bltz	a5,1946 <GPIO_Init+0x3b8>
                }
            }
        }
        GPIOx->CFGHR = tmpreg;
    16bc:	c158                	sw	a4,4(a0)
    }
}
    16be:	8082                	ret
    16c0:	02800593          	li	a1,40
    16c4:	14b68a63          	beq	a3,a1,1818 <GPIO_Init+0x28a>
            if(currentpin == pos)
    16c8:	1007f693          	andi	a3,a5,256
    16cc:	c299                	beqz	a3,16d2 <GPIO_Init+0x144>
                tmpreg &= ~pinmask;
    16ce:	9b41                	andi	a4,a4,-16
                tmpreg |= (currentmode << pos);
    16d0:	8f51                	or	a4,a4,a2
            if(currentpin == pos)
    16d2:	2007f693          	andi	a3,a5,512
    16d6:	c691                	beqz	a3,16e2 <GPIO_Init+0x154>
                tmpreg &= ~pinmask;
    16d8:	f0f77713          	andi	a4,a4,-241
                tmpreg |= (currentmode << pos);
    16dc:	00461693          	slli	a3,a2,0x4
    16e0:	8f55                	or	a4,a4,a3
            if(currentpin == pos)
    16e2:	4007f693          	andi	a3,a5,1024
    16e6:	ca81                	beqz	a3,16f6 <GPIO_Init+0x168>
                tmpreg &= ~pinmask;
    16e8:	76fd                	lui	a3,0xfffff
    16ea:	0ff68693          	addi	a3,a3,255 # fffff0ff <_eusrstack+0xdffdf0ff>
    16ee:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    16f0:	00861693          	slli	a3,a2,0x8
    16f4:	8f55                	or	a4,a4,a3
            if(currentpin == pos)
    16f6:	01479693          	slli	a3,a5,0x14
    16fa:	0006d863          	bgez	a3,170a <GPIO_Init+0x17c>
                tmpreg &= ~pinmask;
    16fe:	76c5                	lui	a3,0xffff1
    1700:	16fd                	addi	a3,a3,-1
    1702:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    1704:	00c61693          	slli	a3,a2,0xc
    1708:	8f55                	or	a4,a4,a3
            if(currentpin == pos)
    170a:	01379693          	slli	a3,a5,0x13
    170e:	0006d963          	bgez	a3,1720 <GPIO_Init+0x192>
                tmpreg &= ~pinmask;
    1712:	fff106b7          	lui	a3,0xfff10
    1716:	16fd                	addi	a3,a3,-1
    1718:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    171a:	01061693          	slli	a3,a2,0x10
    171e:	8f55                	or	a4,a4,a3
            if(currentpin == pos)
    1720:	01279693          	slli	a3,a5,0x12
    1724:	0006d963          	bgez	a3,1736 <GPIO_Init+0x1a8>
                tmpreg &= ~pinmask;
    1728:	ff1006b7          	lui	a3,0xff100
    172c:	16fd                	addi	a3,a3,-1
    172e:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    1730:	01461693          	slli	a3,a2,0x14
    1734:	8f55                	or	a4,a4,a3
            if(currentpin == pos)
    1736:	01179693          	slli	a3,a5,0x11
    173a:	0006d963          	bgez	a3,174c <GPIO_Init+0x1be>
                tmpreg &= ~pinmask;
    173e:	f10006b7          	lui	a3,0xf1000
    1742:	16fd                	addi	a3,a3,-1
    1744:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    1746:	01861693          	slli	a3,a2,0x18
    174a:	8f55                	or	a4,a4,a3
            if(currentpin == pos)
    174c:	07c2                	slli	a5,a5,0x10
    174e:	87c1                	srai	a5,a5,0x10
    1750:	f607d6e3          	bgez	a5,16bc <GPIO_Init+0x12e>
                tmpreg &= ~pinmask;
    1754:	0712                	slli	a4,a4,0x4
    1756:	8311                	srli	a4,a4,0x4
                tmpreg |= (currentmode << pos);
    1758:	0672                	slli	a2,a2,0x1c
    175a:	8f51                	or	a4,a4,a2
        GPIOx->CFGHR = tmpreg;
    175c:	c158                	sw	a4,4(a0)
    175e:	b785                	j	16be <GPIO_Init+0x130>
            if(currentpin == pos)
    1760:	0017f593          	andi	a1,a5,1
    1764:	c589                	beqz	a1,176e <GPIO_Init+0x1e0>
                tmpreg &= ~pinmask;
    1766:	9b41                	andi	a4,a4,-16
                        GPIOx->BSHR = (((uint32_t)0x01) << pinpos);
    1768:	4585                	li	a1,1
                tmpreg |= (currentmode << pos);
    176a:	8f51                	or	a4,a4,a2
                        GPIOx->BSHR = (((uint32_t)0x01) << pinpos);
    176c:	c90c                	sw	a1,16(a0)
            if(currentpin == pos)
    176e:	0027f593          	andi	a1,a5,2
    1772:	c981                	beqz	a1,1782 <GPIO_Init+0x1f4>
                tmpreg |= (currentmode << pos);
    1774:	00461593          	slli	a1,a2,0x4
                tmpreg &= ~pinmask;
    1778:	f0f77713          	andi	a4,a4,-241
                tmpreg |= (currentmode << pos);
    177c:	8f4d                	or	a4,a4,a1
                        GPIOx->BSHR = (((uint32_t)0x01) << pinpos);
    177e:	4589                	li	a1,2
    1780:	c90c                	sw	a1,16(a0)
            if(currentpin == pos)
    1782:	0047f593          	andi	a1,a5,4
    1786:	c991                	beqz	a1,179a <GPIO_Init+0x20c>
                tmpreg &= ~pinmask;
    1788:	75fd                	lui	a1,0xfffff
    178a:	0ff58593          	addi	a1,a1,255 # fffff0ff <_eusrstack+0xdffdf0ff>
    178e:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    1790:	00861593          	slli	a1,a2,0x8
    1794:	8f4d                	or	a4,a4,a1
                        GPIOx->BSHR = (((uint32_t)0x01) << pinpos);
    1796:	4591                	li	a1,4
    1798:	c90c                	sw	a1,16(a0)
            if(currentpin == pos)
    179a:	0087f593          	andi	a1,a5,8
    179e:	c989                	beqz	a1,17b0 <GPIO_Init+0x222>
                tmpreg &= ~pinmask;
    17a0:	75c5                	lui	a1,0xffff1
    17a2:	15fd                	addi	a1,a1,-1
    17a4:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    17a6:	00c61593          	slli	a1,a2,0xc
    17aa:	8f4d                	or	a4,a4,a1
                        GPIOx->BSHR = (((uint32_t)0x01) << pinpos);
    17ac:	45a1                	li	a1,8
    17ae:	c90c                	sw	a1,16(a0)
            if(currentpin == pos)
    17b0:	0107f593          	andi	a1,a5,16
    17b4:	c991                	beqz	a1,17c8 <GPIO_Init+0x23a>
                tmpreg &= ~pinmask;
    17b6:	fff105b7          	lui	a1,0xfff10
    17ba:	15fd                	addi	a1,a1,-1
    17bc:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    17be:	01061593          	slli	a1,a2,0x10
    17c2:	8f4d                	or	a4,a4,a1
                        GPIOx->BSHR = (((uint32_t)0x01) << pinpos);
    17c4:	45c1                	li	a1,16
    17c6:	c90c                	sw	a1,16(a0)
            if(currentpin == pos)
    17c8:	0207f593          	andi	a1,a5,32
    17cc:	c999                	beqz	a1,17e2 <GPIO_Init+0x254>
                tmpreg &= ~pinmask;
    17ce:	ff1005b7          	lui	a1,0xff100
    17d2:	15fd                	addi	a1,a1,-1
    17d4:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    17d6:	01461593          	slli	a1,a2,0x14
    17da:	8f4d                	or	a4,a4,a1
                        GPIOx->BSHR = (((uint32_t)0x01) << pinpos);
    17dc:	02000593          	li	a1,32
    17e0:	c90c                	sw	a1,16(a0)
            if(currentpin == pos)
    17e2:	0407f593          	andi	a1,a5,64
    17e6:	c999                	beqz	a1,17fc <GPIO_Init+0x26e>
                tmpreg &= ~pinmask;
    17e8:	f10005b7          	lui	a1,0xf1000
    17ec:	15fd                	addi	a1,a1,-1
    17ee:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    17f0:	01861593          	slli	a1,a2,0x18
    17f4:	8f4d                	or	a4,a4,a1
                        GPIOx->BSHR = (((uint32_t)0x01) << pinpos);
    17f6:	04000593          	li	a1,64
    17fa:	c90c                	sw	a1,16(a0)
            if(currentpin == pos)
    17fc:	0807f593          	andi	a1,a5,128
    1800:	de058ce3          	beqz	a1,15f8 <GPIO_Init+0x6a>
                tmpreg &= ~pinmask;
    1804:	0712                	slli	a4,a4,0x4
                tmpreg |= (currentmode << pos);
    1806:	01c61593          	slli	a1,a2,0x1c
                tmpreg &= ~pinmask;
    180a:	8311                	srli	a4,a4,0x4
                tmpreg |= (currentmode << pos);
    180c:	8f4d                	or	a4,a4,a1
                        GPIOx->BSHR = (((uint32_t)0x01) << pinpos);
    180e:	08000593          	li	a1,128
    1812:	c90c                	sw	a1,16(a0)
        GPIOx->CFGLR = tmpreg;
    1814:	c118                	sw	a4,0(a0)
    1816:	b3d5                	j	15fa <GPIO_Init+0x6c>
            if(currentpin == pos)
    1818:	1007f693          	andi	a3,a5,256
    181c:	c691                	beqz	a3,1828 <GPIO_Init+0x29a>
                tmpreg &= ~pinmask;
    181e:	9b41                	andi	a4,a4,-16
                    GPIOx->BCR = (((uint32_t)0x01) << (pinpos + 0x08));
    1820:	10000693          	li	a3,256
                tmpreg |= (currentmode << pos);
    1824:	8f51                	or	a4,a4,a2
                    GPIOx->BCR = (((uint32_t)0x01) << (pinpos + 0x08));
    1826:	c954                	sw	a3,20(a0)
            if(currentpin == pos)
    1828:	2007f693          	andi	a3,a5,512
    182c:	ca89                	beqz	a3,183e <GPIO_Init+0x2b0>
                tmpreg |= (currentmode << pos);
    182e:	00461693          	slli	a3,a2,0x4
                tmpreg &= ~pinmask;
    1832:	f0f77713          	andi	a4,a4,-241
                tmpreg |= (currentmode << pos);
    1836:	8f55                	or	a4,a4,a3
                    GPIOx->BCR = (((uint32_t)0x01) << (pinpos + 0x08));
    1838:	20000693          	li	a3,512
    183c:	c954                	sw	a3,20(a0)
            if(currentpin == pos)
    183e:	4007f693          	andi	a3,a5,1024
    1842:	ca99                	beqz	a3,1858 <GPIO_Init+0x2ca>
                tmpreg &= ~pinmask;
    1844:	76fd                	lui	a3,0xfffff
    1846:	0ff68693          	addi	a3,a3,255 # fffff0ff <_eusrstack+0xdffdf0ff>
    184a:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    184c:	00861693          	slli	a3,a2,0x8
    1850:	8f55                	or	a4,a4,a3
                    GPIOx->BCR = (((uint32_t)0x01) << (pinpos + 0x08));
    1852:	40000693          	li	a3,1024
    1856:	c954                	sw	a3,20(a0)
            if(currentpin == pos)
    1858:	6685                	lui	a3,0x1
    185a:	80068693          	addi	a3,a3,-2048 # 800 <__stack_size>
    185e:	00d7f5b3          	and	a1,a5,a3
    1862:	c981                	beqz	a1,1872 <GPIO_Init+0x2e4>
                tmpreg &= ~pinmask;
    1864:	75c5                	lui	a1,0xffff1
    1866:	15fd                	addi	a1,a1,-1
    1868:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    186a:	00c61593          	slli	a1,a2,0xc
    186e:	8f4d                	or	a4,a4,a1
                    GPIOx->BCR = (((uint32_t)0x01) << (pinpos + 0x08));
    1870:	c954                	sw	a3,20(a0)
            if(currentpin == pos)
    1872:	01379693          	slli	a3,a5,0x13
    1876:	0006db63          	bgez	a3,188c <GPIO_Init+0x2fe>
                tmpreg &= ~pinmask;
    187a:	fff106b7          	lui	a3,0xfff10
    187e:	16fd                	addi	a3,a3,-1
    1880:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    1882:	01061693          	slli	a3,a2,0x10
    1886:	8f55                	or	a4,a4,a3
                    GPIOx->BCR = (((uint32_t)0x01) << (pinpos + 0x08));
    1888:	6685                	lui	a3,0x1
    188a:	c954                	sw	a3,20(a0)
            if(currentpin == pos)
    188c:	01279693          	slli	a3,a5,0x12
    1890:	0006db63          	bgez	a3,18a6 <GPIO_Init+0x318>
                tmpreg &= ~pinmask;
    1894:	ff1006b7          	lui	a3,0xff100
    1898:	16fd                	addi	a3,a3,-1
    189a:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    189c:	01461693          	slli	a3,a2,0x14
    18a0:	8f55                	or	a4,a4,a3
                    GPIOx->BCR = (((uint32_t)0x01) << (pinpos + 0x08));
    18a2:	6689                	lui	a3,0x2
    18a4:	c954                	sw	a3,20(a0)
            if(currentpin == pos)
    18a6:	01179693          	slli	a3,a5,0x11
    18aa:	0006db63          	bgez	a3,18c0 <GPIO_Init+0x332>
                tmpreg &= ~pinmask;
    18ae:	f10006b7          	lui	a3,0xf1000
    18b2:	16fd                	addi	a3,a3,-1
    18b4:	8f75                	and	a4,a4,a3
                tmpreg |= (currentmode << pos);
    18b6:	01861693          	slli	a3,a2,0x18
    18ba:	8f55                	or	a4,a4,a3
                    GPIOx->BCR = (((uint32_t)0x01) << (pinpos + 0x08));
    18bc:	6691                	lui	a3,0x4
    18be:	c954                	sw	a3,20(a0)
            if(currentpin == pos)
    18c0:	07c2                	slli	a5,a5,0x10
    18c2:	87c1                	srai	a5,a5,0x10
    18c4:	de07dce3          	bgez	a5,16bc <GPIO_Init+0x12e>
                tmpreg &= ~pinmask;
    18c8:	0712                	slli	a4,a4,0x4
    18ca:	8311                	srli	a4,a4,0x4
                tmpreg |= (currentmode << pos);
    18cc:	0672                	slli	a2,a2,0x1c
                    GPIOx->BCR = (((uint32_t)0x01) << (pinpos + 0x08));
    18ce:	67a1                	lui	a5,0x8
                tmpreg |= (currentmode << pos);
    18d0:	8f51                	or	a4,a4,a2
                    GPIOx->BCR = (((uint32_t)0x01) << (pinpos + 0x08));
    18d2:	c95c                	sw	a5,20(a0)
        GPIOx->CFGHR = tmpreg;
    18d4:	c158                	sw	a4,4(a0)
    18d6:	b3e5                	j	16be <GPIO_Init+0x130>
                tmpreg &= ~pinmask;
    18d8:	9b41                	andi	a4,a4,-16
                tmpreg |= (currentmode << pos);
    18da:	8f51                	or	a4,a4,a2
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
    18dc:	b1d5                	j	15c0 <GPIO_Init+0x32>
                tmpreg &= ~pinmask;
    18de:	0712                	slli	a4,a4,0x4
    18e0:	8311                	srli	a4,a4,0x4
                tmpreg |= (currentmode << pos);
    18e2:	01c61593          	slli	a1,a2,0x1c
    18e6:	8f4d                	or	a4,a4,a1
        GPIOx->CFGLR = tmpreg;
    18e8:	c118                	sw	a4,0(a0)
    18ea:	bb01                	j	15fa <GPIO_Init+0x6c>
                tmpreg &= ~pinmask;
    18ec:	f10005b7          	lui	a1,0xf1000
    18f0:	15fd                	addi	a1,a1,-1
    18f2:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    18f4:	01861593          	slli	a1,a2,0x18
    18f8:	8f4d                	or	a4,a4,a1
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
    18fa:	b9dd                	j	15f0 <GPIO_Init+0x62>
                tmpreg &= ~pinmask;
    18fc:	f0f77713          	andi	a4,a4,-241
                tmpreg |= (currentmode << pos);
    1900:	00461593          	slli	a1,a2,0x4
    1904:	8f4d                	or	a4,a4,a1
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
    1906:	b1c9                	j	15c8 <GPIO_Init+0x3a>
                tmpreg &= ~pinmask;
    1908:	ff1005b7          	lui	a1,0xff100
    190c:	15fd                	addi	a1,a1,-1
    190e:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    1910:	01461593          	slli	a1,a2,0x14
    1914:	8f4d                	or	a4,a4,a1
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
    1916:	b9c9                	j	15e8 <GPIO_Init+0x5a>
                tmpreg &= ~pinmask;
    1918:	fff105b7          	lui	a1,0xfff10
    191c:	15fd                	addi	a1,a1,-1
    191e:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    1920:	01061593          	slli	a1,a2,0x10
    1924:	8f4d                	or	a4,a4,a1
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
    1926:	b96d                	j	15e0 <GPIO_Init+0x52>
                tmpreg &= ~pinmask;
    1928:	75c5                	lui	a1,0xffff1
    192a:	15fd                	addi	a1,a1,-1
    192c:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    192e:	00c61593          	slli	a1,a2,0xc
    1932:	8f4d                	or	a4,a4,a1
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
    1934:	b155                	j	15d8 <GPIO_Init+0x4a>
                tmpreg &= ~pinmask;
    1936:	75fd                	lui	a1,0xfffff
    1938:	0ff58593          	addi	a1,a1,255 # fffff0ff <_eusrstack+0xdffdf0ff>
    193c:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    193e:	00861593          	slli	a1,a2,0x8
    1942:	8f4d                	or	a4,a4,a1
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
    1944:	b171                	j	15d0 <GPIO_Init+0x42>
                tmpreg &= ~pinmask;
    1946:	0712                	slli	a4,a4,0x4
    1948:	8311                	srli	a4,a4,0x4
                tmpreg |= (currentmode << pos);
    194a:	0672                	slli	a2,a2,0x1c
                    GPIOx->BSHR = (((uint32_t)0x01) << (pinpos + 0x08));
    194c:	67a1                	lui	a5,0x8
                tmpreg |= (currentmode << pos);
    194e:	8f51                	or	a4,a4,a2
                    GPIOx->BSHR = (((uint32_t)0x01) << (pinpos + 0x08));
    1950:	c91c                	sw	a5,16(a0)
        GPIOx->CFGHR = tmpreg;
    1952:	c158                	sw	a4,4(a0)
    1954:	b3ad                	j	16be <GPIO_Init+0x130>
            if(currentpin == pos)
    1956:	0017f593          	andi	a1,a5,1
    195a:	c589                	beqz	a1,1964 <GPIO_Init+0x3d6>
                tmpreg &= ~pinmask;
    195c:	9b41                	andi	a4,a4,-16
                    GPIOx->BCR = (((uint32_t)0x01) << pinpos);
    195e:	4585                	li	a1,1
                tmpreg |= (currentmode << pos);
    1960:	8f51                	or	a4,a4,a2
                    GPIOx->BCR = (((uint32_t)0x01) << pinpos);
    1962:	c94c                	sw	a1,20(a0)
            if(currentpin == pos)
    1964:	0027f593          	andi	a1,a5,2
    1968:	c981                	beqz	a1,1978 <GPIO_Init+0x3ea>
                tmpreg |= (currentmode << pos);
    196a:	00461593          	slli	a1,a2,0x4
                tmpreg &= ~pinmask;
    196e:	f0f77713          	andi	a4,a4,-241
                tmpreg |= (currentmode << pos);
    1972:	8f4d                	or	a4,a4,a1
                    GPIOx->BCR = (((uint32_t)0x01) << pinpos);
    1974:	4589                	li	a1,2
    1976:	c94c                	sw	a1,20(a0)
            if(currentpin == pos)
    1978:	0047f593          	andi	a1,a5,4
    197c:	c991                	beqz	a1,1990 <GPIO_Init+0x402>
                tmpreg &= ~pinmask;
    197e:	75fd                	lui	a1,0xfffff
    1980:	0ff58593          	addi	a1,a1,255 # fffff0ff <_eusrstack+0xdffdf0ff>
    1984:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    1986:	00861593          	slli	a1,a2,0x8
    198a:	8f4d                	or	a4,a4,a1
                    GPIOx->BCR = (((uint32_t)0x01) << pinpos);
    198c:	4591                	li	a1,4
    198e:	c94c                	sw	a1,20(a0)
            if(currentpin == pos)
    1990:	0087f593          	andi	a1,a5,8
    1994:	c989                	beqz	a1,19a6 <GPIO_Init+0x418>
                tmpreg &= ~pinmask;
    1996:	75c5                	lui	a1,0xffff1
    1998:	15fd                	addi	a1,a1,-1
    199a:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    199c:	00c61593          	slli	a1,a2,0xc
    19a0:	8f4d                	or	a4,a4,a1
                    GPIOx->BCR = (((uint32_t)0x01) << pinpos);
    19a2:	45a1                	li	a1,8
    19a4:	c94c                	sw	a1,20(a0)
            if(currentpin == pos)
    19a6:	0107f593          	andi	a1,a5,16
    19aa:	c991                	beqz	a1,19be <GPIO_Init+0x430>
                tmpreg &= ~pinmask;
    19ac:	fff105b7          	lui	a1,0xfff10
    19b0:	15fd                	addi	a1,a1,-1
    19b2:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    19b4:	01061593          	slli	a1,a2,0x10
    19b8:	8f4d                	or	a4,a4,a1
                    GPIOx->BCR = (((uint32_t)0x01) << pinpos);
    19ba:	45c1                	li	a1,16
    19bc:	c94c                	sw	a1,20(a0)
            if(currentpin == pos)
    19be:	0207f593          	andi	a1,a5,32
    19c2:	c999                	beqz	a1,19d8 <GPIO_Init+0x44a>
                tmpreg &= ~pinmask;
    19c4:	ff1005b7          	lui	a1,0xff100
    19c8:	15fd                	addi	a1,a1,-1
    19ca:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    19cc:	01461593          	slli	a1,a2,0x14
    19d0:	8f4d                	or	a4,a4,a1
                    GPIOx->BCR = (((uint32_t)0x01) << pinpos);
    19d2:	02000593          	li	a1,32
    19d6:	c94c                	sw	a1,20(a0)
            if(currentpin == pos)
    19d8:	0407f593          	andi	a1,a5,64
    19dc:	c999                	beqz	a1,19f2 <GPIO_Init+0x464>
                tmpreg &= ~pinmask;
    19de:	f10005b7          	lui	a1,0xf1000
    19e2:	15fd                	addi	a1,a1,-1
    19e4:	8f6d                	and	a4,a4,a1
                tmpreg |= (currentmode << pos);
    19e6:	01861593          	slli	a1,a2,0x18
    19ea:	8f4d                	or	a4,a4,a1
                    GPIOx->BCR = (((uint32_t)0x01) << pinpos);
    19ec:	04000593          	li	a1,64
    19f0:	c94c                	sw	a1,20(a0)
            if(currentpin == pos)
    19f2:	0807f593          	andi	a1,a5,128
    19f6:	c00581e3          	beqz	a1,15f8 <GPIO_Init+0x6a>
                tmpreg &= ~pinmask;
    19fa:	0712                	slli	a4,a4,0x4
                tmpreg |= (currentmode << pos);
    19fc:	01c61593          	slli	a1,a2,0x1c
                tmpreg &= ~pinmask;
    1a00:	8311                	srli	a4,a4,0x4
                tmpreg |= (currentmode << pos);
    1a02:	8f4d                	or	a4,a4,a1
                    GPIOx->BCR = (((uint32_t)0x01) << pinpos);
    1a04:	08000593          	li	a1,128
    1a08:	c94c                	sw	a1,20(a0)
        GPIOx->CFGLR = tmpreg;
    1a0a:	c118                	sw	a4,0(a0)
    1a0c:	b6fd                	j	15fa <GPIO_Init+0x6c>

00001a0e <GPIO_ReadInputDataBit>:
 */
uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
    uint8_t bitstatus = 0x00;

    if((GPIOx->INDR & GPIO_Pin) != (uint32_t)Bit_RESET)
    1a0e:	4508                	lw	a0,8(a0)
    1a10:	8d6d                	and	a0,a0,a1
    {
        bitstatus = (uint8_t)Bit_RESET;
    }

    return bitstatus;
}
    1a12:	00a03533          	snez	a0,a0
    1a16:	8082                	ret

00001a18 <GPIO_SetBits>:
 *
 * @return  none
 */
void GPIO_SetBits(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
    GPIOx->BSHR = GPIO_Pin;
    1a18:	c90c                	sw	a1,16(a0)
}
    1a1a:	8082                	ret

00001a1c <GPIO_ResetBits>:
 *
 * @return  none
 */
void GPIO_ResetBits(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
    GPIOx->BCR = GPIO_Pin;
    1a1c:	c94c                	sw	a1,20(a0)
}
    1a1e:	8082                	ret

00001a20 <OPA_Init>:
 */
void OPA_Init(OPA_InitTypeDef *OPA_InitStruct)
{
    uint32_t tmp = 0;
    tmp = OPA->CR;
    tmp &= ~(OPA_MASK << (OPA_InitStruct->OPA_NUM * OPA_Total_NUM));
    1a20:	4114                	lw	a3,0(a0)
    tmp |= (((OPA_InitStruct->PSEL << OPA_PSEL_OFFSET) | (OPA_InitStruct->NSEL << OPA_NSEL_OFFSET) | (OPA_InitStruct->Mode << OPA_MODE_OFFSET)) << (OPA_InitStruct->OPA_NUM * OPA_Total_NUM));
    1a22:	415c                	lw	a5,4(a0)
    1a24:	450c                	lw	a1,8(a0)
    1a26:	4550                	lw	a2,12(a0)
    tmp = OPA->CR;
    1a28:	40024537          	lui	a0,0x40024
    1a2c:	80452803          	lw	a6,-2044(a0) # 40023804 <_eusrstack+0x20003804>
    tmp &= ~(OPA_MASK << (OPA_InitStruct->OPA_NUM * OPA_Total_NUM));
    1a30:	068a                	slli	a3,a3,0x2
    tmp |= (((OPA_InitStruct->PSEL << OPA_PSEL_OFFSET) | (OPA_InitStruct->NSEL << OPA_NSEL_OFFSET) | (OPA_InitStruct->Mode << OPA_MODE_OFFSET)) << (OPA_InitStruct->OPA_NUM * OPA_Total_NUM));
    1a32:	078e                	slli	a5,a5,0x3
    1a34:	058a                	slli	a1,a1,0x2
    tmp &= ~(OPA_MASK << (OPA_InitStruct->OPA_NUM * OPA_Total_NUM));
    1a36:	473d                	li	a4,15
    1a38:	00d71733          	sll	a4,a4,a3
    tmp |= (((OPA_InitStruct->PSEL << OPA_PSEL_OFFSET) | (OPA_InitStruct->NSEL << OPA_NSEL_OFFSET) | (OPA_InitStruct->Mode << OPA_MODE_OFFSET)) << (OPA_InitStruct->OPA_NUM * OPA_Total_NUM));
    1a3c:	8fcd                	or	a5,a5,a1
    1a3e:	0606                	slli	a2,a2,0x1
    tmp &= ~(OPA_MASK << (OPA_InitStruct->OPA_NUM * OPA_Total_NUM));
    1a40:	fff74713          	not	a4,a4
    tmp |= (((OPA_InitStruct->PSEL << OPA_PSEL_OFFSET) | (OPA_InitStruct->NSEL << OPA_NSEL_OFFSET) | (OPA_InitStruct->Mode << OPA_MODE_OFFSET)) << (OPA_InitStruct->OPA_NUM * OPA_Total_NUM));
    1a44:	8fd1                	or	a5,a5,a2
    tmp &= ~(OPA_MASK << (OPA_InitStruct->OPA_NUM * OPA_Total_NUM));
    1a46:	01077733          	and	a4,a4,a6
    tmp |= (((OPA_InitStruct->PSEL << OPA_PSEL_OFFSET) | (OPA_InitStruct->NSEL << OPA_NSEL_OFFSET) | (OPA_InitStruct->Mode << OPA_MODE_OFFSET)) << (OPA_InitStruct->OPA_NUM * OPA_Total_NUM));
    1a4a:	00d797b3          	sll	a5,a5,a3
    1a4e:	8fd9                	or	a5,a5,a4
    OPA->CR = tmp;
    1a50:	80f52223          	sw	a5,-2044(a0)
}
    1a54:	8082                	ret

00001a56 <OPA_Cmd>:
 *
 * @return  none
 */
void OPA_Cmd(OPA_Num_TypeDef OPA_NUM, FunctionalState NewState)
{
    if(NewState == ENABLE)
    1a56:	050a                	slli	a0,a0,0x2
    1a58:	4785                	li	a5,1
    1a5a:	00a79533          	sll	a0,a5,a0
    1a5e:	00f58c63          	beq	a1,a5,1a76 <OPA_Cmd+0x20>
    {
        OPA->CR |= (1 << (OPA_NUM * OPA_Total_NUM));
    }
    else
    {
        OPA->CR &= ~(1 << (OPA_NUM * OPA_Total_NUM));
    1a62:	400247b7          	lui	a5,0x40024
    1a66:	8047a703          	lw	a4,-2044(a5) # 40023804 <_eusrstack+0x20003804>
    1a6a:	fff54513          	not	a0,a0
    1a6e:	8d79                	and	a0,a0,a4
    1a70:	80a7a223          	sw	a0,-2044(a5)
    }
}
    1a74:	8082                	ret
        OPA->CR |= (1 << (OPA_NUM * OPA_Total_NUM));
    1a76:	400247b7          	lui	a5,0x40024
    1a7a:	8047a703          	lw	a4,-2044(a5) # 40023804 <_eusrstack+0x20003804>
    1a7e:	8d59                	or	a0,a0,a4
    1a80:	80a7a223          	sw	a0,-2044(a5)
    1a84:	8082                	ret

00001a86 <RCC_ADCCLKConfig>:
 */
void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
{
    uint32_t tmpreg = 0;

    tmpreg = RCC->CFGR0;
    1a86:	400216b7          	lui	a3,0x40021
    1a8a:	42dc                	lw	a5,4(a3)
    tmpreg &= CFGR0_ADCPRE_Reset_Mask;
    1a8c:	7751                	lui	a4,0xffff4
    1a8e:	177d                	addi	a4,a4,-1
    1a90:	8ff9                	and	a5,a5,a4
    tmpreg |= RCC_PCLK2;
    1a92:	8d5d                	or	a0,a0,a5
    RCC->CFGR0 = tmpreg;
    1a94:	c2c8                	sw	a0,4(a3)
}
    1a96:	8082                	ret

00001a98 <RCC_GetClocksFreq>:
#ifdef CH32V30x_D8C
    uint8_t Pll2mull = 0;

#endif

    tmp = RCC->CFGR0 & CFGR0_SWS_Mask;
    1a98:	40021737          	lui	a4,0x40021
    1a9c:	435c                	lw	a5,4(a4)
    1a9e:	4691                	li	a3,4
    1aa0:	8bb1                	andi	a5,a5,12

    switch(tmp)
    1aa2:	00d78563          	beq	a5,a3,1aac <RCC_GetClocksFreq+0x14>
    1aa6:	46a1                	li	a3,8
    1aa8:	06d78163          	beq	a5,a3,1b0a <RCC_GetClocksFreq+0x72>
    {
        case 0x00:
            RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
    1aac:	007a17b7          	lui	a5,0x7a1
    1ab0:	20078793          	addi	a5,a5,512 # 7a1200 <_data_lma+0x79a02c>
    1ab4:	c11c                	sw	a5,0(a0)
        default:
            RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
            break;
    }

    tmp = RCC->CFGR0 & CFGR0_HPRE_Set_Mask;
    1ab6:	40021637          	lui	a2,0x40021
    1aba:	4254                	lw	a3,4(a2)
    tmp = tmp >> 4;
    presc = APBAHBPrescTable[tmp];
    1abc:	20000737          	lui	a4,0x20000
    1ac0:	00070713          	mv	a4,a4
    tmp = tmp >> 4;
    1ac4:	8291                	srli	a3,a3,0x4
    1ac6:	8abd                	andi	a3,a3,15
    presc = APBAHBPrescTable[tmp];
    1ac8:	96ba                	add	a3,a3,a4
    1aca:	2294                	lbu	a3,0(a3)
    RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
    1acc:	00d7d7b3          	srl	a5,a5,a3
    1ad0:	c15c                	sw	a5,4(a0)
    tmp = RCC->CFGR0 & CFGR0_PPRE1_Set_Mask;
    1ad2:	4254                	lw	a3,4(a2)
    tmp = tmp >> 8;
    1ad4:	82a1                	srli	a3,a3,0x8
    1ad6:	8a9d                	andi	a3,a3,7
    presc = APBAHBPrescTable[tmp];
    1ad8:	96ba                	add	a3,a3,a4
    1ada:	2294                	lbu	a3,0(a3)
    RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
    1adc:	00d7d6b3          	srl	a3,a5,a3
    1ae0:	c514                	sw	a3,8(a0)
    tmp = RCC->CFGR0 & CFGR0_PPRE2_Set_Mask;
    1ae2:	4254                	lw	a3,4(a2)
    tmp = tmp >> 11;
    1ae4:	82ad                	srli	a3,a3,0xb
    1ae6:	8a9d                	andi	a3,a3,7
    presc = APBAHBPrescTable[tmp];
    1ae8:	9736                	add	a4,a4,a3
    1aea:	2318                	lbu	a4,0(a4)
    RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
    1aec:	00e7d7b3          	srl	a5,a5,a4
    1af0:	c55c                	sw	a5,12(a0)
    tmp = RCC->CFGR0 & CFGR0_ADCPRE_Set_Mask;
    1af2:	4258                	lw	a4,4(a2)
    tmp = tmp >> 14;
    1af4:	8339                	srli	a4,a4,0xe
    1af6:	00377693          	andi	a3,a4,3
    presc = ADCPrescTable[tmp];
    1afa:	80c18713          	addi	a4,gp,-2036 # 200001ec <ADCPrescTable>
    1afe:	9736                	add	a4,a4,a3
    1b00:	2318                	lbu	a4,0(a4)
    RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
    1b02:	02e7d7b3          	divu	a5,a5,a4
    1b06:	c91c                	sw	a5,16(a0)
}
    1b08:	8082                	ret
            pllmull = RCC->CFGR0 & CFGR0_PLLMull_Mask;
    1b0a:	435c                	lw	a5,4(a4)
            if(((*(uint32_t *)0x1FFFF70C) & (1 << 14)) != (1 << 14))
    1b0c:	1ffff6b7          	lui	a3,0x1ffff
            pllsource = RCC->CFGR0 & CFGR0_PLLSRC_Mask;
    1b10:	4358                	lw	a4,4(a4)
            if(((*(uint32_t *)0x1FFFF70C) & (1 << 14)) != (1 << 14))
    1b12:	70c6a683          	lw	a3,1804(a3) # 1ffff70c <_data_lma+0x1fff8538>
            pllsource = RCC->CFGR0 & CFGR0_PLLSRC_Mask;
    1b16:	6641                	lui	a2,0x10
            pllmull = (pllmull >> 18) + 2;
    1b18:	83c9                	srli	a5,a5,0x12
    1b1a:	8bbd                	andi	a5,a5,15
            pllsource = RCC->CFGR0 & CFGR0_PLLSRC_Mask;
    1b1c:	8f71                	and	a4,a4,a2
            if(((*(uint32_t *)0x1FFFF70C) & (1 << 14)) != (1 << 14))
    1b1e:	01169613          	slli	a2,a3,0x11
            pllmull = (pllmull >> 18) + 2;
    1b22:	0789                	addi	a5,a5,2
            if(((*(uint32_t *)0x1FFFF70C) & (1 << 14)) != (1 << 14))
    1b24:	02065f63          	bgez	a2,1b62 <RCC_GetClocksFreq+0xca>
                if(pllmull == 2)
    1b28:	4689                	li	a3,2
    1b2a:	0cd78963          	beq	a5,a3,1bfc <RCC_GetClocksFreq+0x164>
                if(pllmull == 15)
    1b2e:	46bd                	li	a3,15
    1b30:	0cd78963          	beq	a5,a3,1c02 <RCC_GetClocksFreq+0x16a>
                if(pllmull == 16)
    1b34:	46c1                	li	a3,16
    1b36:	0ad79d63          	bne	a5,a3,1bf0 <RCC_GetClocksFreq+0x158>
    1b3a:	4681                	li	a3,0
                    pllmull = 15;
    1b3c:	47bd                	li	a5,15
            if(pllsource == 0x00)
    1b3e:	eb05                	bnez	a4,1b6e <RCC_GetClocksFreq+0xd6>
                if(EXTEN->EXTEN_CTR & EXTEN_PLL_HSI_PRE)
    1b40:	40024737          	lui	a4,0x40024
    1b44:	80072703          	lw	a4,-2048(a4) # 40023800 <_eusrstack+0x20003800>
    1b48:	8b41                	andi	a4,a4,16
    1b4a:	cb2d                	beqz	a4,1bbc <RCC_GetClocksFreq+0x124>
                    RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE)*pllmull;
    1b4c:	007a1737          	lui	a4,0x7a1
    1b50:	20070713          	addi	a4,a4,512 # 7a1200 <_data_lma+0x79a02c>
    1b54:	02e787b3          	mul	a5,a5,a4
    1b58:	c11c                	sw	a5,0(a0)
            if(Pll_6_5 == 1)
    1b5a:	deb1                	beqz	a3,1ab6 <RCC_GetClocksFreq+0x1e>
                RCC_Clocks->SYSCLK_Frequency = (RCC_Clocks->SYSCLK_Frequency / 2);
    1b5c:	8385                	srli	a5,a5,0x1
    1b5e:	c11c                	sw	a5,0(a0)
    1b60:	bf99                	j	1ab6 <RCC_GetClocksFreq+0x1e>
                if(pllmull == 17)
    1b62:	4645                	li	a2,17
    uint8_t Pll_6_5 = 0;
    1b64:	4681                	li	a3,0
                if(pllmull == 17)
    1b66:	fcc79ce3          	bne	a5,a2,1b3e <RCC_GetClocksFreq+0xa6>
                    pllmull = 18;
    1b6a:	47c9                	li	a5,18
            if(pllsource == 0x00)
    1b6c:	db71                	beqz	a4,1b40 <RCC_GetClocksFreq+0xa8>
                if(RCC->CFGR2 & (1<<16)){ /* PLL2 */
    1b6e:	400215b7          	lui	a1,0x40021
    1b72:	55d8                	lw	a4,44(a1)
    1b74:	00f71613          	slli	a2,a4,0xf
                    RCC_Clocks->SYSCLK_Frequency = HSE_VALUE/(((RCC->CFGR2 & 0xF0)>>4) + 1);  /* PREDIV2 */
    1b78:	55d8                	lw	a4,44(a1)
                if(RCC->CFGR2 & (1<<16)){ /* PLL2 */
    1b7a:	04065963          	bgez	a2,1bcc <RCC_GetClocksFreq+0x134>
                    RCC_Clocks->SYSCLK_Frequency = HSE_VALUE/(((RCC->CFGR2 & 0xF0)>>4) + 1);  /* PREDIV2 */
    1b7e:	8311                	srli	a4,a4,0x4
    1b80:	8b3d                	andi	a4,a4,15
    1b82:	007a1637          	lui	a2,0x7a1
    1b86:	0705                	addi	a4,a4,1
    1b88:	20060613          	addi	a2,a2,512 # 7a1200 <_data_lma+0x79a02c>
    1b8c:	02e65633          	divu	a2,a2,a4
    1b90:	c110                	sw	a2,0(a0)
                    Pll2mull = (uint8_t)((RCC->CFGR2 & 0xF00)>>8);
    1b92:	55d8                	lw	a4,44(a1)
    1b94:	8321                	srli	a4,a4,0x8
    1b96:	8b3d                	andi	a4,a4,15
                    if(Pll2mull == 0) RCC_Clocks->SYSCLK_Frequency = (RCC_Clocks->SYSCLK_Frequency * 5)>>1;
    1b98:	c739                	beqz	a4,1be6 <RCC_GetClocksFreq+0x14e>
                    else if(Pll2mull == 1) RCC_Clocks->SYSCLK_Frequency = (RCC_Clocks->SYSCLK_Frequency * 25)>>1;
    1b9a:	4585                	li	a1,1
    1b9c:	06b70663          	beq	a4,a1,1c08 <RCC_GetClocksFreq+0x170>
                    else if(Pll2mull == 15) RCC_Clocks->SYSCLK_Frequency = RCC_Clocks->SYSCLK_Frequency * 20;
    1ba0:	45bd                	li	a1,15
    1ba2:	06b70a63          	beq	a4,a1,1c16 <RCC_GetClocksFreq+0x17e>
                    else  RCC_Clocks->SYSCLK_Frequency = RCC_Clocks->SYSCLK_Frequency * (Pll2mull + 2);
    1ba6:	0709                	addi	a4,a4,2
    1ba8:	02c70733          	mul	a4,a4,a2
                    RCC_Clocks->SYSCLK_Frequency = RCC_Clocks->SYSCLK_Frequency/((RCC->CFGR2 & 0xF) + 1);  /* PREDIV1 */
    1bac:	40021637          	lui	a2,0x40021
    1bb0:	5650                	lw	a2,44(a2)
    1bb2:	8a3d                	andi	a2,a2,15
    1bb4:	0605                	addi	a2,a2,1
    1bb6:	02c75733          	divu	a4,a4,a2
    1bba:	a015                	j	1bde <RCC_GetClocksFreq+0x146>
                    RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
    1bbc:	003d1737          	lui	a4,0x3d1
    1bc0:	90070713          	addi	a4,a4,-1792 # 3d0900 <_data_lma+0x3c972c>
    1bc4:	02e787b3          	mul	a5,a5,a4
    1bc8:	c11c                	sw	a5,0(a0)
    1bca:	bf41                	j	1b5a <RCC_GetClocksFreq+0xc2>
                    RCC_Clocks->SYSCLK_Frequency = HSE_VALUE/((RCC->CFGR2 & 0xF) + 1);  /* PREDIV1 */
    1bcc:	8b3d                	andi	a4,a4,15
    1bce:	00170613          	addi	a2,a4,1
    1bd2:	007a1737          	lui	a4,0x7a1
    1bd6:	20070713          	addi	a4,a4,512 # 7a1200 <_data_lma+0x79a02c>
    1bda:	02c75733          	divu	a4,a4,a2
                RCC_Clocks->SYSCLK_Frequency = RCC_Clocks->SYSCLK_Frequency * pllmull;
    1bde:	02e787b3          	mul	a5,a5,a4
    1be2:	c11c                	sw	a5,0(a0)
    1be4:	bf9d                	j	1b5a <RCC_GetClocksFreq+0xc2>
                    if(Pll2mull == 0) RCC_Clocks->SYSCLK_Frequency = (RCC_Clocks->SYSCLK_Frequency * 5)>>1;
    1be6:	00261713          	slli	a4,a2,0x2
    1bea:	9732                	add	a4,a4,a2
    1bec:	8305                	srli	a4,a4,0x1
    1bee:	bf7d                	j	1bac <RCC_GetClocksFreq+0x114>
                if(pllmull == 17)
    1bf0:	46c5                	li	a3,17
    1bf2:	02d79763          	bne	a5,a3,1c20 <RCC_GetClocksFreq+0x188>
    1bf6:	4681                	li	a3,0
                    pllmull = 16;
    1bf8:	47c1                	li	a5,16
    1bfa:	b791                	j	1b3e <RCC_GetClocksFreq+0xa6>
    uint8_t Pll_6_5 = 0;
    1bfc:	4681                	li	a3,0
                    pllmull = 18;
    1bfe:	47c9                	li	a5,18
    1c00:	b7b5                	j	1b6c <RCC_GetClocksFreq+0xd4>
                    Pll_6_5 = 1;
    1c02:	4685                	li	a3,1
                    pllmull = 13; /* *6.5 */
    1c04:	47b5                	li	a5,13
    1c06:	bf25                	j	1b3e <RCC_GetClocksFreq+0xa6>
                    else if(Pll2mull == 1) RCC_Clocks->SYSCLK_Frequency = (RCC_Clocks->SYSCLK_Frequency * 25)>>1;
    1c08:	00161713          	slli	a4,a2,0x1
    1c0c:	9732                	add	a4,a4,a2
    1c0e:	070e                	slli	a4,a4,0x3
    1c10:	9732                	add	a4,a4,a2
    1c12:	8305                	srli	a4,a4,0x1
    1c14:	bf61                	j	1bac <RCC_GetClocksFreq+0x114>
                    else if(Pll2mull == 15) RCC_Clocks->SYSCLK_Frequency = RCC_Clocks->SYSCLK_Frequency * 20;
    1c16:	00261713          	slli	a4,a2,0x2
    1c1a:	9732                	add	a4,a4,a2
    1c1c:	070a                	slli	a4,a4,0x2
    1c1e:	b779                	j	1bac <RCC_GetClocksFreq+0x114>
    1c20:	4681                	li	a3,0
    1c22:	bf31                	j	1b3e <RCC_GetClocksFreq+0xa6>

00001c24 <RCC_AHBPeriphClockCmd>:
 *
 * @return  none
 */
void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
{
    if(NewState != DISABLE)
    1c24:	c599                	beqz	a1,1c32 <RCC_AHBPeriphClockCmd+0xe>
    {
        RCC->AHBPCENR |= RCC_AHBPeriph;
    1c26:	40021737          	lui	a4,0x40021
    1c2a:	4b5c                	lw	a5,20(a4)
    1c2c:	8d5d                	or	a0,a0,a5
    1c2e:	cb48                	sw	a0,20(a4)
    1c30:	8082                	ret
    }
    else
    {
        RCC->AHBPCENR &= ~RCC_AHBPeriph;
    1c32:	400217b7          	lui	a5,0x40021
    1c36:	4bd8                	lw	a4,20(a5)
    1c38:	fff54513          	not	a0,a0
    1c3c:	8d79                	and	a0,a0,a4
    1c3e:	cbc8                	sw	a0,20(a5)
    }
}
    1c40:	8082                	ret

00001c42 <RCC_APB2PeriphClockCmd>:
 *
 * @return  none
 */
void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
    if(NewState != DISABLE)
    1c42:	c599                	beqz	a1,1c50 <RCC_APB2PeriphClockCmd+0xe>
    {
        RCC->APB2PCENR |= RCC_APB2Periph;
    1c44:	40021737          	lui	a4,0x40021
    1c48:	4f1c                	lw	a5,24(a4)
    1c4a:	8d5d                	or	a0,a0,a5
    1c4c:	cf08                	sw	a0,24(a4)
    1c4e:	8082                	ret
    }
    else
    {
        RCC->APB2PCENR &= ~RCC_APB2Periph;
    1c50:	400217b7          	lui	a5,0x40021
    1c54:	4f98                	lw	a4,24(a5)
    1c56:	fff54513          	not	a0,a0
    1c5a:	8d79                	and	a0,a0,a4
    1c5c:	cf88                	sw	a0,24(a5)
    }
}
    1c5e:	8082                	ret

00001c60 <RCC_APB1PeriphClockCmd>:
 *
 * @return  none
 */
void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
    if(NewState != DISABLE)
    1c60:	c599                	beqz	a1,1c6e <RCC_APB1PeriphClockCmd+0xe>
    {
        RCC->APB1PCENR |= RCC_APB1Periph;
    1c62:	40021737          	lui	a4,0x40021
    1c66:	4f5c                	lw	a5,28(a4)
    1c68:	8d5d                	or	a0,a0,a5
    1c6a:	cf48                	sw	a0,28(a4)
    1c6c:	8082                	ret
    }
    else
    {
        RCC->APB1PCENR &= ~RCC_APB1Periph;
    1c6e:	400217b7          	lui	a5,0x40021
    1c72:	4fd8                	lw	a4,28(a5)
    1c74:	fff54513          	not	a0,a0
    1c78:	8d79                	and	a0,a0,a4
    1c7a:	cfc8                	sw	a0,28(a5)
    }
}
    1c7c:	8082                	ret

00001c7e <RCC_APB2PeriphResetCmd>:
 *
 * @return  none
 */
void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
    if(NewState != DISABLE)
    1c7e:	c599                	beqz	a1,1c8c <RCC_APB2PeriphResetCmd+0xe>
    {
        RCC->APB2PRSTR |= RCC_APB2Periph;
    1c80:	40021737          	lui	a4,0x40021
    1c84:	475c                	lw	a5,12(a4)
    1c86:	8d5d                	or	a0,a0,a5
    1c88:	c748                	sw	a0,12(a4)
    1c8a:	8082                	ret
    }
    else
    {
        RCC->APB2PRSTR &= ~RCC_APB2Periph;
    1c8c:	400217b7          	lui	a5,0x40021
    1c90:	47d8                	lw	a4,12(a5)
    1c92:	fff54513          	not	a0,a0
    1c96:	8d79                	and	a0,a0,a4
    1c98:	c7c8                	sw	a0,12(a5)
    }
}
    1c9a:	8082                	ret

00001c9c <TIM_TimeBaseInit>:
 */
void TIM_TimeBaseInit(TIM_TypeDef *TIMx, TIM_TimeBaseInitTypeDef *TIM_TimeBaseInitStruct)
{
    uint16_t tmpcr1 = 0;

    tmpcr1 = TIMx->CTLR1;
    1c9c:	211e                	lhu	a5,0(a0)

    if((TIMx == TIM1) || (TIMx == TIM2) || (TIMx == TIM3) || (TIMx == TIM4) ||
    1c9e:	400136b7          	lui	a3,0x40013
    1ca2:	c0068713          	addi	a4,a3,-1024 # 40012c00 <_eusrstack+0x1fff2c00>
    tmpcr1 = TIMx->CTLR1;
    1ca6:	07c2                	slli	a5,a5,0x10
    1ca8:	83c1                	srli	a5,a5,0x10
    if((TIMx == TIM1) || (TIMx == TIM2) || (TIMx == TIM3) || (TIMx == TIM4) ||
    1caa:	04e50063          	beq	a0,a4,1cea <TIM_TimeBaseInit+0x4e>
    1cae:	40000737          	lui	a4,0x40000
    1cb2:	02e50c63          	beq	a0,a4,1cea <TIM_TimeBaseInit+0x4e>
    1cb6:	40070713          	addi	a4,a4,1024 # 40000400 <_eusrstack+0x1ffe0400>
    1cba:	02e50863          	beq	a0,a4,1cea <TIM_TimeBaseInit+0x4e>
    1cbe:	40001737          	lui	a4,0x40001
    1cc2:	80070613          	addi	a2,a4,-2048 # 40000800 <_eusrstack+0x1ffe0800>
    1cc6:	02c50263          	beq	a0,a2,1cea <TIM_TimeBaseInit+0x4e>
    1cca:	c0070713          	addi	a4,a4,-1024
    1cce:	00e50e63          	beq	a0,a4,1cea <TIM_TimeBaseInit+0x4e>
       (TIMx == TIM5) || (TIMx == TIM8) || (TIMx == TIM9) || (TIMx == TIM10))
    1cd2:	40068693          	addi	a3,a3,1024
    1cd6:	00d50a63          	beq	a0,a3,1cea <TIM_TimeBaseInit+0x4e>
    1cda:	40015737          	lui	a4,0x40015
    1cde:	c0070693          	addi	a3,a4,-1024 # 40014c00 <_eusrstack+0x1fff4c00>
    1ce2:	00d50463          	beq	a0,a3,1cea <TIM_TimeBaseInit+0x4e>
    1ce6:	00e51663          	bne	a0,a4,1cf2 <TIM_TimeBaseInit+0x56>
    {
        tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_DIR | TIM_CMS)));
        tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
    1cea:	21ba                	lhu	a4,2(a1)
        tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_DIR | TIM_CMS)));
    1cec:	f8f7f793          	andi	a5,a5,-113
        tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
    1cf0:	8fd9                	or	a5,a5,a4
    }

    if((TIMx != TIM6) && (TIMx != TIM7))
    1cf2:	40001737          	lui	a4,0x40001
    1cf6:	21d2                	lhu	a2,4(a1)
    1cf8:	2196                	lhu	a3,0(a1)
    1cfa:	02e50a63          	beq	a0,a4,1d2e <TIM_TimeBaseInit+0x92>
    1cfe:	40070713          	addi	a4,a4,1024 # 40001400 <_eusrstack+0x1ffe1400>
    1d02:	02e50663          	beq	a0,a4,1d2e <TIM_TimeBaseInit+0x92>
    {
        tmpcr1 &= (uint16_t)(~((uint16_t)TIM_CTLR1_CKD));
        tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
    1d06:	21fa                	lhu	a4,6(a1)
        tmpcr1 &= (uint16_t)(~((uint16_t)TIM_CTLR1_CKD));
    1d08:	cff7f793          	andi	a5,a5,-769
    1d0c:	07c2                	slli	a5,a5,0x10
    1d0e:	83c1                	srli	a5,a5,0x10
        tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
    1d10:	8fd9                	or	a5,a5,a4
    }

    TIMx->CTLR1 = tmpcr1;
    1d12:	a11e                	sh	a5,0(a0)
    TIMx->ATRLR = TIM_TimeBaseInitStruct->TIM_Period;
    1d14:	b552                	sh	a2,44(a0)
    TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;

    if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM9) || (TIMx == TIM10))
    1d16:	400137b7          	lui	a5,0x40013
    TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
    1d1a:	b516                	sh	a3,40(a0)
    if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM9) || (TIMx == TIM10))
    1d1c:	c0078713          	addi	a4,a5,-1024 # 40012c00 <_eusrstack+0x1fff2c00>
    1d20:	00e51d63          	bne	a0,a4,1d3a <TIM_TimeBaseInit+0x9e>
    {
        TIMx->RPTCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
    1d24:	259c                	lbu	a5,8(a1)
    1d26:	b91e                	sh	a5,48(a0)
    }

    TIMx->SWEVGR = TIM_PSCReloadMode_Immediate;
    1d28:	4785                	li	a5,1
    1d2a:	a95e                	sh	a5,20(a0)
}
    1d2c:	8082                	ret
    TIMx->CTLR1 = tmpcr1;
    1d2e:	a11e                	sh	a5,0(a0)
    TIMx->ATRLR = TIM_TimeBaseInitStruct->TIM_Period;
    1d30:	b552                	sh	a2,44(a0)
    TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
    1d32:	b516                	sh	a3,40(a0)
    TIMx->SWEVGR = TIM_PSCReloadMode_Immediate;
    1d34:	4785                	li	a5,1
    1d36:	a95e                	sh	a5,20(a0)
}
    1d38:	8082                	ret
    if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM9) || (TIMx == TIM10))
    1d3a:	40078793          	addi	a5,a5,1024
    1d3e:	fef503e3          	beq	a0,a5,1d24 <TIM_TimeBaseInit+0x88>
    1d42:	400157b7          	lui	a5,0x40015
    1d46:	c0078713          	addi	a4,a5,-1024 # 40014c00 <_eusrstack+0x1fff4c00>
    1d4a:	fce50de3          	beq	a0,a4,1d24 <TIM_TimeBaseInit+0x88>
    1d4e:	fcf50be3          	beq	a0,a5,1d24 <TIM_TimeBaseInit+0x88>
    1d52:	b7cd                	j	1d34 <TIM_TimeBaseInit+0x98>

00001d54 <TIM_Cmd>:
 */
void TIM_Cmd(TIM_TypeDef *TIMx, FunctionalState NewState)
{
    if(NewState != DISABLE)
    {
        TIMx->CTLR1 |= TIM_CEN;
    1d54:	211e                	lhu	a5,0(a0)
    if(NewState != DISABLE)
    1d56:	c589                	beqz	a1,1d60 <TIM_Cmd+0xc>
        TIMx->CTLR1 |= TIM_CEN;
    1d58:	0017e793          	ori	a5,a5,1
    1d5c:	a11e                	sh	a5,0(a0)
    1d5e:	8082                	ret
    }
    else
    {
        TIMx->CTLR1 &= (uint16_t)(~((uint16_t)TIM_CEN));
    1d60:	07c2                	slli	a5,a5,0x10
    1d62:	83c1                	srli	a5,a5,0x10
    1d64:	9bf9                	andi	a5,a5,-2
    1d66:	07c2                	slli	a5,a5,0x10
    1d68:	83c1                	srli	a5,a5,0x10
    1d6a:	a11e                	sh	a5,0(a0)
    }
}
    1d6c:	8082                	ret

00001d6e <TIM_ITConfig>:
 */
void TIM_ITConfig(TIM_TypeDef *TIMx, uint16_t TIM_IT, FunctionalState NewState)
{
    if(NewState != DISABLE)
    {
        TIMx->DMAINTENR |= TIM_IT;
    1d6e:	255e                	lhu	a5,12(a0)
    if(NewState != DISABLE)
    1d70:	c601                	beqz	a2,1d78 <TIM_ITConfig+0xa>
        TIMx->DMAINTENR |= TIM_IT;
    1d72:	8ddd                	or	a1,a1,a5
    1d74:	a54e                	sh	a1,12(a0)
    1d76:	8082                	ret
    }
    else
    {
        TIMx->DMAINTENR &= (uint16_t)~TIM_IT;
    1d78:	fff5c593          	not	a1,a1
    1d7c:	8dfd                	and	a1,a1,a5
    1d7e:	a54e                	sh	a1,12(a0)
    }
}
    1d80:	8082                	ret

00001d82 <TIM_ARRPreloadConfig>:
 */
void TIM_ARRPreloadConfig(TIM_TypeDef *TIMx, FunctionalState NewState)
{
    if(NewState != DISABLE)
    {
        TIMx->CTLR1 |= TIM_ARPE;
    1d82:	211e                	lhu	a5,0(a0)
    if(NewState != DISABLE)
    1d84:	c589                	beqz	a1,1d8e <TIM_ARRPreloadConfig+0xc>
        TIMx->CTLR1 |= TIM_ARPE;
    1d86:	0807e793          	ori	a5,a5,128
    1d8a:	a11e                	sh	a5,0(a0)
    1d8c:	8082                	ret
    }
    else
    {
        TIMx->CTLR1 &= (uint16_t) ~((uint16_t)TIM_ARPE);
    1d8e:	07c2                	slli	a5,a5,0x10
    1d90:	83c1                	srli	a5,a5,0x10
    1d92:	f7f7f793          	andi	a5,a5,-129
    1d96:	07c2                	slli	a5,a5,0x10
    1d98:	83c1                	srli	a5,a5,0x10
    1d9a:	a11e                	sh	a5,0(a0)
    }
}
    1d9c:	8082                	ret

00001d9e <TIM_SelectOutputTrigger>:
 *
 * @return  none
 */
void TIM_SelectOutputTrigger(TIM_TypeDef *TIMx, uint16_t TIM_TRGOSource)
{
    TIMx->CTLR2 &= (uint16_t) ~((uint16_t)TIM_MMS);
    1d9e:	215e                	lhu	a5,4(a0)
    1da0:	07c2                	slli	a5,a5,0x10
    1da2:	83c1                	srli	a5,a5,0x10
    1da4:	f8f7f793          	andi	a5,a5,-113
    1da8:	07c2                	slli	a5,a5,0x10
    1daa:	83c1                	srli	a5,a5,0x10
    1dac:	a15e                	sh	a5,4(a0)
    TIMx->CTLR2 |= TIM_TRGOSource;
    1dae:	215e                	lhu	a5,4(a0)
    1db0:	8ddd                	or	a1,a1,a5
    1db2:	a14e                	sh	a1,4(a0)
}
    1db4:	8082                	ret

00001db6 <TIM_GetITStatus>:
ITStatus TIM_GetITStatus(TIM_TypeDef *TIMx, uint16_t TIM_IT)
{
    ITStatus bitstatus = RESET;
    uint16_t itstatus = 0x0, itenable = 0x0;

    itstatus = TIMx->INTFR & TIM_IT;
    1db6:	291e                	lhu	a5,16(a0)

    itenable = TIMx->DMAINTENR & TIM_IT;
    1db8:	254a                	lhu	a0,12(a0)
    if((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
    1dba:	8fed                	and	a5,a5,a1
    itenable = TIMx->DMAINTENR & TIM_IT;
    1dbc:	0542                	slli	a0,a0,0x10
    1dbe:	8141                	srli	a0,a0,0x10
    if((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
    1dc0:	c789                	beqz	a5,1dca <TIM_GetITStatus+0x14>
    1dc2:	8d6d                	and	a0,a0,a1
    1dc4:	00a03533          	snez	a0,a0
    1dc8:	8082                	ret
    {
        bitstatus = SET;
    }
    else
    {
        bitstatus = RESET;
    1dca:	4501                	li	a0,0
    }

    return bitstatus;
}
    1dcc:	8082                	ret

00001dce <TIM_ClearITPendingBit>:
    1dce:	fff5c593          	not	a1,a1
    1dd2:	05c2                	slli	a1,a1,0x10
    1dd4:	81c1                	srli	a1,a1,0x10
    1dd6:	a90e                	sh	a1,16(a0)
    1dd8:	8082                	ret

00001dda <USART_Init>:
    if(USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
    {
    }

    usartxbase = (uint32_t)USARTx;
    tmpreg = USARTx->CTLR2;
    1dda:	2916                	lhu	a3,16(a0)
    1ddc:	21fa                	lhu	a4,6(a1)
    1dde:	77f5                	lui	a5,0xffffd
    1de0:	17fd                	addi	a5,a5,-1
{
    1de2:	7179                	addi	sp,sp,-48
    1de4:	8ff5                	and	a5,a5,a3
    1de6:	d422                	sw	s0,40(sp)
    1de8:	d226                	sw	s1,36(sp)
    1dea:	d606                	sw	ra,44(sp)
    1dec:	8fd9                	or	a5,a5,a4
    if(USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
    1dee:	25da                	lhu	a4,12(a1)
    tmpreg &= CTLR2_STOP_CLEAR_Mask;
    tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;

    USARTx->CTLR2 = (uint16_t)tmpreg;
    1df0:	a91e                	sh	a5,16(a0)
{
    1df2:	842a                	mv	s0,a0
    tmpreg = USARTx->CTLR1;
    1df4:	254a                	lhu	a0,12(a0)
{
    1df6:	84ae                	mv	s1,a1
    1df8:	77fd                	lui	a5,0xfffff
    1dfa:	21ce                	lhu	a1,4(a1)
    1dfc:	2492                	lhu	a2,8(s1)
    1dfe:	9f378793          	addi	a5,a5,-1549 # ffffe9f3 <_eusrstack+0xdffde9f3>
    1e02:	24b6                	lhu	a3,10(s1)
    1e04:	8fe9                	and	a5,a5,a0
    1e06:	8fcd                	or	a5,a5,a1
    1e08:	8fd1                	or	a5,a5,a2
    1e0a:	8fd5                	or	a5,a5,a3
    tmpreg &= CTLR1_CLEAR_Mask;
    tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
              USART_InitStruct->USART_Mode;
    USARTx->CTLR1 = (uint16_t)tmpreg;
    1e0c:	a45e                	sh	a5,12(s0)

    tmpreg = USARTx->CTLR3;
    1e0e:	285e                	lhu	a5,20(s0)
    tmpreg &= CTLR3_CLEAR_Mask;
    tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
    USARTx->CTLR3 = (uint16_t)tmpreg;

    RCC_GetClocksFreq(&RCC_ClocksStatus);
    1e10:	0068                	addi	a0,sp,12
    tmpreg = USARTx->CTLR3;
    1e12:	07c2                	slli	a5,a5,0x10
    1e14:	83c1                	srli	a5,a5,0x10
    tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
    1e16:	cff7f793          	andi	a5,a5,-769
    1e1a:	8fd9                	or	a5,a5,a4
    USARTx->CTLR3 = (uint16_t)tmpreg;
    1e1c:	a85e                	sh	a5,20(s0)
    RCC_GetClocksFreq(&RCC_ClocksStatus);
    1e1e:	39ad                	jal	1a98 <RCC_GetClocksFreq>

    if(usartxbase == USART1_BASE)
    1e20:	400147b7          	lui	a5,0x40014
    1e24:	80078793          	addi	a5,a5,-2048 # 40013800 <_eusrstack+0x1fff3800>
    1e28:	08f40c63          	beq	s0,a5,1ec0 <USART_Init+0xe6>
    {
        apbclock = RCC_ClocksStatus.PCLK2_Frequency;
    }
    else
    {
        apbclock = RCC_ClocksStatus.PCLK1_Frequency;
    1e2c:	4752                	lw	a4,20(sp)
    }

    if((USARTx->CTLR1 & CTLR1_OVER8_Set) != 0)
    1e2e:	2456                	lhu	a3,12(s0)
    1e30:	00171793          	slli	a5,a4,0x1
    1e34:	97ba                	add	a5,a5,a4
    1e36:	06c2                	slli	a3,a3,0x10
    1e38:	078e                	slli	a5,a5,0x3
    1e3a:	86c1                	srai	a3,a3,0x10
    1e3c:	97ba                	add	a5,a5,a4
    1e3e:	4098                	lw	a4,0(s1)
    1e40:	0406c063          	bltz	a3,1e80 <USART_Init+0xa6>
    {
        integerdivider = ((25 * apbclock) / (2 * (USART_InitStruct->USART_BaudRate)));
    }
    else
    {
        integerdivider = ((25 * apbclock) / (4 * (USART_InitStruct->USART_BaudRate)));
    1e44:	070a                	slli	a4,a4,0x2
    1e46:	02e7d7b3          	divu	a5,a5,a4
    }
    tmpreg = (integerdivider / 100) << 4;
    1e4a:	06400713          	li	a4,100

    fractionaldivider = integerdivider - (100 * (tmpreg >> 4));

    if((USARTx->CTLR1 & CTLR1_OVER8_Set) != 0)
    1e4e:	2452                	lhu	a2,12(s0)
    1e50:	0642                	slli	a2,a2,0x10
    1e52:	8641                	srai	a2,a2,0x10
    tmpreg = (integerdivider / 100) << 4;
    1e54:	02e7d6b3          	divu	a3,a5,a4
    1e58:	02e7f7b3          	remu	a5,a5,a4
    1e5c:	0692                	slli	a3,a3,0x4
    if((USARTx->CTLR1 & CTLR1_OVER8_Set) != 0)
    1e5e:	04064063          	bltz	a2,1e9e <USART_Init+0xc4>
    {
        tmpreg |= ((((fractionaldivider * 8) + 50) / 100)) & ((uint8_t)0x07);
    }
    else
    {
        tmpreg |= ((((fractionaldivider * 16) + 50) / 100)) & ((uint8_t)0x0F);
    1e62:	0792                	slli	a5,a5,0x4
    1e64:	03278793          	addi	a5,a5,50
    }

    USARTx->BRR = (uint16_t)tmpreg;
}
    1e68:	50b2                	lw	ra,44(sp)
    1e6a:	5492                	lw	s1,36(sp)
        tmpreg |= ((((fractionaldivider * 16) + 50) / 100)) & ((uint8_t)0x0F);
    1e6c:	02e7d7b3          	divu	a5,a5,a4
    1e70:	8bbd                	andi	a5,a5,15
    1e72:	8fd5                	or	a5,a5,a3
    USARTx->BRR = (uint16_t)tmpreg;
    1e74:	07c2                	slli	a5,a5,0x10
    1e76:	83c1                	srli	a5,a5,0x10
    1e78:	a41e                	sh	a5,8(s0)
}
    1e7a:	5422                	lw	s0,40(sp)
    1e7c:	6145                	addi	sp,sp,48
    1e7e:	8082                	ret
        integerdivider = ((25 * apbclock) / (2 * (USART_InitStruct->USART_BaudRate)));
    1e80:	0706                	slli	a4,a4,0x1
    1e82:	02e7d7b3          	divu	a5,a5,a4
    tmpreg = (integerdivider / 100) << 4;
    1e86:	06400713          	li	a4,100
    if((USARTx->CTLR1 & CTLR1_OVER8_Set) != 0)
    1e8a:	2452                	lhu	a2,12(s0)
    1e8c:	0642                	slli	a2,a2,0x10
    1e8e:	8641                	srai	a2,a2,0x10
    tmpreg = (integerdivider / 100) << 4;
    1e90:	02e7d6b3          	divu	a3,a5,a4
    1e94:	02e7f7b3          	remu	a5,a5,a4
    1e98:	0692                	slli	a3,a3,0x4
    if((USARTx->CTLR1 & CTLR1_OVER8_Set) != 0)
    1e9a:	fc0654e3          	bgez	a2,1e62 <USART_Init+0x88>
        tmpreg |= ((((fractionaldivider * 8) + 50) / 100)) & ((uint8_t)0x07);
    1e9e:	078e                	slli	a5,a5,0x3
    1ea0:	03278793          	addi	a5,a5,50
}
    1ea4:	50b2                	lw	ra,44(sp)
    1ea6:	5492                	lw	s1,36(sp)
        tmpreg |= ((((fractionaldivider * 8) + 50) / 100)) & ((uint8_t)0x07);
    1ea8:	02e7d7b3          	divu	a5,a5,a4
    1eac:	0077f713          	andi	a4,a5,7
    1eb0:	00d767b3          	or	a5,a4,a3
    USARTx->BRR = (uint16_t)tmpreg;
    1eb4:	07c2                	slli	a5,a5,0x10
    1eb6:	83c1                	srli	a5,a5,0x10
    1eb8:	a41e                	sh	a5,8(s0)
}
    1eba:	5422                	lw	s0,40(sp)
    1ebc:	6145                	addi	sp,sp,48
    1ebe:	8082                	ret
        apbclock = RCC_ClocksStatus.PCLK2_Frequency;
    1ec0:	4762                	lw	a4,24(sp)
    1ec2:	b7b5                	j	1e2e <USART_Init+0x54>

00001ec4 <USART_Cmd>:
 *
 * @return  none
 */
void USART_Cmd(USART_TypeDef *USARTx, FunctionalState NewState)
{
    if(NewState != DISABLE)
    1ec4:	c591                	beqz	a1,1ed0 <USART_Cmd+0xc>
    {
        USARTx->CTLR1 |= CTLR1_UE_Set;
    1ec6:	255e                	lhu	a5,12(a0)
    1ec8:	6709                	lui	a4,0x2
    1eca:	8fd9                	or	a5,a5,a4
    1ecc:	a55e                	sh	a5,12(a0)
    1ece:	8082                	ret
    }
    else
    {
        USARTx->CTLR1 &= CTLR1_UE_Reset;
    1ed0:	255a                	lhu	a4,12(a0)
    1ed2:	77f9                	lui	a5,0xffffe
    1ed4:	17fd                	addi	a5,a5,-1
    1ed6:	8ff9                	and	a5,a5,a4
    1ed8:	a55e                	sh	a5,12(a0)
    }
}
    1eda:	8082                	ret

00001edc <USART_SendData>:
 *
 * @return  none
 */
void USART_SendData(USART_TypeDef *USARTx, uint16_t Data)
{
    USARTx->DATAR = (Data & (uint16_t)0x01FF);
    1edc:	1ff5f593          	andi	a1,a1,511
    1ee0:	a14e                	sh	a1,4(a0)
}
    1ee2:	8082                	ret

00001ee4 <USART_GetFlagStatus>:

    if(USART_FLAG == USART_FLAG_CTS)
    {
    }

    if((USARTx->STATR & USART_FLAG) != (uint16_t)RESET)
    1ee4:	210a                	lhu	a0,0(a0)
    1ee6:	8d6d                	and	a0,a0,a1
    else
    {
        bitstatus = RESET;
    }
    return bitstatus;
}
    1ee8:	00a03533          	snez	a0,a0
    1eec:	8082                	ret

00001eee <Delay_Init>:
 *
 * @return  none
 */
void Delay_Init(void)
{
    p_us = SystemCoreClock / 8000000;
    1eee:	8081a783          	lw	a5,-2040(gp) # 200001e8 <SystemCoreClock>
    1ef2:	007a1737          	lui	a4,0x7a1
    1ef6:	20070713          	addi	a4,a4,512 # 7a1200 <_data_lma+0x79a02c>
    1efa:	02e7d7b3          	divu	a5,a5,a4
    p_ms = (uint16_t)p_us * 1000;
    1efe:	3e800713          	li	a4,1000
    p_us = SystemCoreClock / 8000000;
    1f02:	0ff7f793          	andi	a5,a5,255
    p_ms = (uint16_t)p_us * 1000;
    1f06:	02e78733          	mul	a4,a5,a4
    p_us = SystemCoreClock / 8000000;
    1f0a:	82f18523          	sb	a5,-2006(gp) # 2000020a <p_us>
    p_ms = (uint16_t)p_us * 1000;
    1f0e:	82e19423          	sh	a4,-2008(gp) # 20000208 <p_ms>
}
    1f12:	8082                	ret

00001f14 <USART_Printf_Init>:
 * @param   baudrate - USART communication baud rate.
 *
 * @return  None
 */
void USART_Printf_Init(uint32_t baudrate)
{
    1f14:	7179                	addi	sp,sp,-48
    1f16:	d226                	sw	s1,36(sp)
    1f18:	84aa                	mv	s1,a0
    GPIO_InitTypeDef  GPIO_InitStructure;
    USART_InitTypeDef USART_InitStructure;

#if(DEBUG == DEBUG_UART1)
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_GPIOA, ENABLE);
    1f1a:	6511                	lui	a0,0x4
    1f1c:	4585                	li	a1,1
    1f1e:	0511                	addi	a0,a0,4
{
    1f20:	d606                	sw	ra,44(sp)
    1f22:	d422                	sw	s0,40(sp)
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_GPIOA, ENABLE);
    1f24:	3b39                	jal	1c42 <RCC_APB2PeriphClockCmd>

    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
    1f26:	20000793          	li	a5,512
    1f2a:	827c                	sh	a5,4(sp)
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
    1f2c:	40011537          	lui	a0,0x40011
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    1f30:	478d                	li	a5,3
    GPIO_Init(GPIOA, &GPIO_InitStructure);
    1f32:	004c                	addi	a1,sp,4
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    1f34:	c43e                	sw	a5,8(sp)
    GPIO_Init(GPIOA, &GPIO_InitStructure);
    1f36:	80050513          	addi	a0,a0,-2048 # 40010800 <_eusrstack+0x1fff0800>
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    1f3a:	47e1                	li	a5,24
    USART_InitStructure.USART_Parity = USART_Parity_No;
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode = USART_Mode_Tx;

#if(DEBUG == DEBUG_UART1)
    USART_Init(USART1, &USART_InitStructure);
    1f3c:	40014437          	lui	s0,0x40014
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    1f40:	c63e                	sw	a5,12(sp)
    GPIO_Init(GPIOA, &GPIO_InitStructure);
    1f42:	e4cff0ef          	jal	ra,158e <GPIO_Init>
    USART_Init(USART1, &USART_InitStructure);
    1f46:	080c                	addi	a1,sp,16
    1f48:	80040513          	addi	a0,s0,-2048 # 40013800 <_eusrstack+0x1fff3800>
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    1f4c:	000807b7          	lui	a5,0x80
    USART_InitStructure.USART_BaudRate = baudrate;
    1f50:	c826                	sw	s1,16(sp)
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    1f52:	cc3e                	sw	a5,24(sp)
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    1f54:	00011e23          	sh	zero,28(sp)
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    1f58:	ca02                	sw	zero,20(sp)
    USART_Init(USART1, &USART_InitStructure);
    1f5a:	3541                	jal	1dda <USART_Init>
    USART_Cmd(USART1, ENABLE);
    1f5c:	80040513          	addi	a0,s0,-2048
    1f60:	4585                	li	a1,1
    1f62:	378d                	jal	1ec4 <USART_Cmd>
#elif(DEBUG == DEBUG_UART3)
    USART_Init(USART3, &USART_InitStructure);
    USART_Cmd(USART3, ENABLE);

#endif
}
    1f64:	50b2                	lw	ra,44(sp)
    1f66:	5422                	lw	s0,40(sp)
    1f68:	5492                	lw	s1,36(sp)
    1f6a:	6145                	addi	sp,sp,48
    1f6c:	8082                	ret

00001f6e <_write>:
 *          size - Data length
 *
 * @return  size: Data length
 */
__attribute__((used)) int _write(int fd, char *buf, int size)
{
    1f6e:	1101                	addi	sp,sp,-32
    1f70:	c64e                	sw	s3,12(sp)
    1f72:	ce06                	sw	ra,28(sp)
    1f74:	cc22                	sw	s0,24(sp)
    1f76:	ca26                	sw	s1,20(sp)
    1f78:	c84a                	sw	s2,16(sp)
    1f7a:	89b2                	mv	s3,a2
    int i;

    for(i = 0; i < size; i++)
    1f7c:	02c05763          	blez	a2,1faa <_write+0x3c>
    {
#if(DEBUG == DEBUG_UART1)
        while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET);
    1f80:	40014437          	lui	s0,0x40014
    1f84:	84ae                	mv	s1,a1
    1f86:	00c58933          	add	s2,a1,a2
    1f8a:	80040413          	addi	s0,s0,-2048 # 40013800 <_eusrstack+0x1fff3800>
    1f8e:	04000593          	li	a1,64
    1f92:	8522                	mv	a0,s0
    1f94:	3f81                	jal	1ee4 <USART_GetFlagStatus>
    1f96:	dd65                	beqz	a0,1f8e <_write+0x20>
        USART_SendData(USART1, *buf++);
    1f98:	0485                	addi	s1,s1,1
    1f9a:	fff48583          	lb	a1,-1(s1)
    1f9e:	8522                	mv	a0,s0
    1fa0:	05c2                	slli	a1,a1,0x10
    1fa2:	81c1                	srli	a1,a1,0x10
    1fa4:	3f25                	jal	1edc <USART_SendData>
    for(i = 0; i < size; i++)
    1fa6:	fe9914e3          	bne	s2,s1,1f8e <_write+0x20>
        USART_SendData(USART3, *buf++);
#endif
    }

    return size;
}
    1faa:	40f2                	lw	ra,28(sp)
    1fac:	4462                	lw	s0,24(sp)
    1fae:	854e                	mv	a0,s3
    1fb0:	44d2                	lw	s1,20(sp)
    1fb2:	4942                	lw	s2,16(sp)
    1fb4:	49b2                	lw	s3,12(sp)
    1fb6:	6105                	addi	sp,sp,32
    1fb8:	8082                	ret

00001fba <_sbrk>:
{
    extern char _end[];
    extern char _heap_end[];
    static char *curbrk = _end;

    if ((curbrk + incr < _end) || (curbrk + incr > _heap_end))
    1fba:	81018793          	addi	a5,gp,-2032 # 200001f0 <curbrk.5253>
    1fbe:	4394                	lw	a3,0(a5)
    1fc0:	2000c737          	lui	a4,0x2000c
    1fc4:	67070713          	addi	a4,a4,1648 # 2000c670 <_ebss>
    1fc8:	9536                	add	a0,a0,a3
    1fca:	00e56b63          	bltu	a0,a4,1fe0 <_sbrk+0x26>
    1fce:	20020737          	lui	a4,0x20020
    1fd2:	80070713          	addi	a4,a4,-2048 # 2001f800 <_heap_end>
    1fd6:	00a76563          	bltu	a4,a0,1fe0 <_sbrk+0x26>
    return NULL - 1;

    curbrk += incr;
    1fda:	c388                	sw	a0,0(a5)
    return curbrk - incr;
}
    1fdc:	8536                	mv	a0,a3
    1fde:	8082                	ret
    return NULL - 1;
    1fe0:	56fd                	li	a3,-1
}
    1fe2:	8536                	mv	a0,a3
    1fe4:	8082                	ret

00001fe6 <__get_MEPC>:
 */
uint32_t __get_MEPC(void)
{
  uint32_t result;

  __ASM volatile ( "csrr %0," "mepc" : "=r" (result) );
    1fe6:	34102573          	csrr	a0,mepc
  return (result);
}
    1fea:	8082                	ret

00001fec <__get_MCAUSE>:
 */
uint32_t __get_MCAUSE(void)
{
  uint32_t result;

  __ASM volatile ( "csrr %0," "mcause" : "=r" (result) );
    1fec:	34202573          	csrr	a0,mcause
  return (result);
}
    1ff0:	8082                	ret

00001ff2 <__cvt>:
    1ff2:	7179                	addi	sp,sp,-48
    1ff4:	d422                	sw	s0,40(sp)
    1ff6:	d04a                	sw	s2,32(sp)
    1ff8:	cc52                	sw	s4,24(sp)
    1ffa:	ca56                	sw	s5,20(sp)
    1ffc:	c85a                	sw	s6,16(sp)
    1ffe:	d606                	sw	ra,44(sp)
    2000:	d226                	sw	s1,36(sp)
    2002:	ce4e                	sw	s3,28(sp)
    2004:	8a3a                	mv	s4,a4
    2006:	8aae                	mv	s5,a1
    2008:	8432                	mv	s0,a2
    200a:	8936                	mv	s2,a3
    200c:	8b42                	mv	s6,a6
    200e:	4701                	li	a4,0
    2010:	00065863          	bgez	a2,2020 <__cvt+0x2e>
    2014:	80000737          	lui	a4,0x80000
    2018:	00c74433          	xor	s0,a4,a2
    201c:	02d00713          	li	a4,45
    2020:	a398                	sb	a4,0(a5)
    2022:	fdf8f493          	andi	s1,a7,-33
    2026:	04600793          	li	a5,70
    202a:	468d                	li	a3,3
    202c:	00f48863          	beq	s1,a5,203c <__cvt+0x4a>
    2030:	04500793          	li	a5,69
    2034:	4689                	li	a3,2
    2036:	00f49363          	bne	s1,a5,203c <__cvt+0x4a>
    203a:	0905                	addi	s2,s2,1
    203c:	87da                	mv	a5,s6
    203e:	00c10893          	addi	a7,sp,12
    2042:	00810813          	addi	a6,sp,8
    2046:	874a                	mv	a4,s2
    2048:	85d6                	mv	a1,s5
    204a:	8622                	mv	a2,s0
    204c:	5b7000ef          	jal	ra,2e02 <_dtoa_r>
    2050:	04700793          	li	a5,71
    2054:	89aa                	mv	s3,a0
    2056:	00f49663          	bne	s1,a5,2062 <__cvt+0x70>
    205a:	001a7a13          	andi	s4,s4,1
    205e:	040a0a63          	beqz	s4,20b2 <__cvt+0xc0>
    2062:	04600793          	li	a5,70
    2066:	01298a33          	add	s4,s3,s2
    206a:	02f49763          	bne	s1,a5,2098 <__cvt+0xa6>
    206e:	0009c703          	lbu	a4,0(s3)
    2072:	03000793          	li	a5,48
    2076:	00f71e63          	bne	a4,a5,2092 <__cvt+0xa0>
    207a:	4601                	li	a2,0
    207c:	4681                	li	a3,0
    207e:	8556                	mv	a0,s5
    2080:	85a2                	mv	a1,s0
    2082:	1e1030ef          	jal	ra,5a62 <__eqdf2>
    2086:	c511                	beqz	a0,2092 <__cvt+0xa0>
    2088:	4785                	li	a5,1
    208a:	41278933          	sub	s2,a5,s2
    208e:	012b2023          	sw	s2,0(s6)
    2092:	000b2783          	lw	a5,0(s6)
    2096:	9a3e                	add	s4,s4,a5
    2098:	4601                	li	a2,0
    209a:	4681                	li	a3,0
    209c:	8556                	mv	a0,s5
    209e:	85a2                	mv	a1,s0
    20a0:	1c3030ef          	jal	ra,5a62 <__eqdf2>
    20a4:	e111                	bnez	a0,20a8 <__cvt+0xb6>
    20a6:	c652                	sw	s4,12(sp)
    20a8:	03000713          	li	a4,48
    20ac:	47b2                	lw	a5,12(sp)
    20ae:	0347e263          	bltu	a5,s4,20d2 <__cvt+0xe0>
    20b2:	47b2                	lw	a5,12(sp)
    20b4:	5742                	lw	a4,48(sp)
    20b6:	50b2                	lw	ra,44(sp)
    20b8:	5422                	lw	s0,40(sp)
    20ba:	413787b3          	sub	a5,a5,s3
    20be:	c31c                	sw	a5,0(a4)
    20c0:	854e                	mv	a0,s3
    20c2:	5492                	lw	s1,36(sp)
    20c4:	5902                	lw	s2,32(sp)
    20c6:	49f2                	lw	s3,28(sp)
    20c8:	4a62                	lw	s4,24(sp)
    20ca:	4ad2                	lw	s5,20(sp)
    20cc:	4b42                	lw	s6,16(sp)
    20ce:	6145                	addi	sp,sp,48
    20d0:	8082                	ret
    20d2:	00178693          	addi	a3,a5,1 # 80001 <_data_lma+0x78e2d>
    20d6:	c636                	sw	a3,12(sp)
    20d8:	a398                	sb	a4,0(a5)
    20da:	bfc9                	j	20ac <__cvt+0xba>

000020dc <__exponent>:
    20dc:	a110                	sb	a2,0(a0)
    20de:	00250713          	addi	a4,a0,2
    20e2:	02b00793          	li	a5,43
    20e6:	0005d663          	bgez	a1,20f2 <__exponent+0x16>
    20ea:	40b005b3          	neg	a1,a1
    20ee:	02d00793          	li	a5,45
    20f2:	b11c                	sb	a5,1(a0)
    20f4:	47a5                	li	a5,9
    20f6:	04b7da63          	bge	a5,a1,214a <__exponent+0x6e>
    20fa:	1141                	addi	sp,sp,-16
    20fc:	00f10793          	addi	a5,sp,15
    2100:	88be                	mv	a7,a5
    2102:	4829                	li	a6,10
    2104:	06300313          	li	t1,99
    2108:	0305e6b3          	rem	a3,a1,a6
    210c:	fff78613          	addi	a2,a5,-1
    2110:	03068693          	addi	a3,a3,48
    2114:	fed78fa3          	sb	a3,-1(a5)
    2118:	0305c6b3          	div	a3,a1,a6
    211c:	00b34d63          	blt	t1,a1,2136 <__exponent+0x5a>
    2120:	03068693          	addi	a3,a3,48
    2124:	17f9                	addi	a5,a5,-2
    2126:	fed60fa3          	sb	a3,-1(a2) # 40020fff <_eusrstack+0x20000fff>
    212a:	0117e963          	bltu	a5,a7,213c <__exponent+0x60>
    212e:	40a70533          	sub	a0,a4,a0
    2132:	0141                	addi	sp,sp,16
    2134:	8082                	ret
    2136:	87b2                	mv	a5,a2
    2138:	85b6                	mv	a1,a3
    213a:	b7f9                	j	2108 <__exponent+0x2c>
    213c:	0785                	addi	a5,a5,1
    213e:	fff7c683          	lbu	a3,-1(a5)
    2142:	0705                	addi	a4,a4,1
    2144:	fed70fa3          	sb	a3,-1(a4) # 7fffffff <_eusrstack+0x5ffdffff>
    2148:	b7cd                	j	212a <__exponent+0x4e>
    214a:	03000793          	li	a5,48
    214e:	00450713          	addi	a4,a0,4
    2152:	03058593          	addi	a1,a1,48 # 40021030 <_eusrstack+0x20001030>
    2156:	a13c                	sb	a5,2(a0)
    2158:	b12c                	sb	a1,3(a0)
    215a:	40a70533          	sub	a0,a4,a0
    215e:	8082                	ret

00002160 <_printf_float>:
    2160:	7119                	addi	sp,sp,-128
    2162:	ce3a                	sw	a4,28(sp)
    2164:	de86                	sw	ra,124(sp)
    2166:	dca2                	sw	s0,120(sp)
    2168:	daa6                	sw	s1,116(sp)
    216a:	842e                	mv	s0,a1
    216c:	d8ca                	sw	s2,112(sp)
    216e:	d6ce                	sw	s3,108(sp)
    2170:	d4d2                	sw	s4,104(sp)
    2172:	89b6                	mv	s3,a3
    2174:	d0da                	sw	s6,96(sp)
    2176:	cede                	sw	s7,92(sp)
    2178:	cce2                	sw	s8,88(sp)
    217a:	8932                	mv	s2,a2
    217c:	d2d6                	sw	s5,100(sp)
    217e:	cae6                	sw	s9,84(sp)
    2180:	c8ea                	sw	s10,80(sp)
    2182:	c6ee                	sw	s11,76(sp)
    2184:	84aa                	mv	s1,a0
    2186:	44d010ef          	jal	ra,3dd2 <_localeconv_r>
    218a:	00052b83          	lw	s7,0(a0)
    218e:	855e                	mv	a0,s7
    2190:	163000ef          	jal	ra,2af2 <strlen>
    2194:	00042b03          	lw	s6,0(s0)
    2198:	4772                	lw	a4,28(sp)
    219a:	dc02                	sw	zero,56(sp)
    219c:	100b7693          	andi	a3,s6,256
    21a0:	8c2a                	mv	s8,a0
    21a2:	01844a03          	lbu	s4,24(s0)
    21a6:	431c                	lw	a5,0(a4)
    21a8:	caf1                	beqz	a3,227c <_printf_float+0x11c>
    21aa:	00478693          	addi	a3,a5,4
    21ae:	c314                	sw	a3,0(a4)
    21b0:	439c                	lw	a5,0(a5)
    21b2:	1008                	addi	a0,sp,32
    21b4:	4398                	lw	a4,0(a5)
    21b6:	d03a                	sw	a4,32(sp)
    21b8:	43d8                	lw	a4,4(a5)
    21ba:	d23a                	sw	a4,36(sp)
    21bc:	4798                	lw	a4,8(a5)
    21be:	d43a                	sw	a4,40(sp)
    21c0:	47dc                	lw	a5,12(a5)
    21c2:	d63e                	sw	a5,44(sp)
    21c4:	7da040ef          	jal	ra,699e <__trunctfdf2>
    21c8:	c428                	sw	a0,72(s0)
    21ca:	c46c                	sw	a1,76(s0)
    21cc:	04c42c83          	lw	s9,76(s0)
    21d0:	00005717          	auipc	a4,0x5
    21d4:	b6070713          	addi	a4,a4,-1184 # 6d30 <_read+0xc6>
    21d8:	04842a83          	lw	s5,72(s0)
    21dc:	00072d03          	lw	s10,0(a4)
    21e0:	00472d83          	lw	s11,4(a4)
    21e4:	001c9793          	slli	a5,s9,0x1
    21e8:	8385                	srli	a5,a5,0x1
    21ea:	866a                	mv	a2,s10
    21ec:	86ee                	mv	a3,s11
    21ee:	8556                	mv	a0,s5
    21f0:	85be                	mv	a1,a5
    21f2:	ce3e                	sw	a5,28(sp)
    21f4:	630040ef          	jal	ra,6824 <__unorddf2>
    21f8:	ed41                	bnez	a0,2290 <_printf_float+0x130>
    21fa:	47f2                	lw	a5,28(sp)
    21fc:	866a                	mv	a2,s10
    21fe:	86ee                	mv	a3,s11
    2200:	8556                	mv	a0,s5
    2202:	85be                	mv	a1,a5
    2204:	177030ef          	jal	ra,5b7a <__ledf2>
    2208:	08a05463          	blez	a0,2290 <_printf_float+0x130>
    220c:	4601                	li	a2,0
    220e:	4681                	li	a3,0
    2210:	8556                	mv	a0,s5
    2212:	85e6                	mv	a1,s9
    2214:	167030ef          	jal	ra,5b7a <__ledf2>
    2218:	00055663          	bgez	a0,2224 <_printf_float+0xc4>
    221c:	02d00793          	li	a5,45
    2220:	04f401a3          	sb	a5,67(s0)
    2224:	04700793          	li	a5,71
    2228:	00005a97          	auipc	s5,0x5
    222c:	b10a8a93          	addi	s5,s5,-1264 # 6d38 <_read+0xce>
    2230:	0147f663          	bgeu	a5,s4,223c <_printf_float+0xdc>
    2234:	00005a97          	auipc	s5,0x5
    2238:	b08a8a93          	addi	s5,s5,-1272 # 6d3c <_read+0xd2>
    223c:	ffbb7b13          	andi	s6,s6,-5
    2240:	478d                	li	a5,3
    2242:	01642023          	sw	s6,0(s0)
    2246:	c81c                	sw	a5,16(s0)
    2248:	4b01                	li	s6,0
    224a:	874e                	mv	a4,s3
    224c:	86ca                	mv	a3,s2
    224e:	1870                	addi	a2,sp,60
    2250:	85a2                	mv	a1,s0
    2252:	8526                	mv	a0,s1
    2254:	26f1                	jal	2620 <_printf_common>
    2256:	5cfd                	li	s9,-1
    2258:	15951c63          	bne	a0,s9,23b0 <_printf_float+0x250>
    225c:	557d                	li	a0,-1
    225e:	50f6                	lw	ra,124(sp)
    2260:	5466                	lw	s0,120(sp)
    2262:	54d6                	lw	s1,116(sp)
    2264:	5946                	lw	s2,112(sp)
    2266:	59b6                	lw	s3,108(sp)
    2268:	5a26                	lw	s4,104(sp)
    226a:	5a96                	lw	s5,100(sp)
    226c:	5b06                	lw	s6,96(sp)
    226e:	4bf6                	lw	s7,92(sp)
    2270:	4c66                	lw	s8,88(sp)
    2272:	4cd6                	lw	s9,84(sp)
    2274:	4d46                	lw	s10,80(sp)
    2276:	4db6                	lw	s11,76(sp)
    2278:	6109                	addi	sp,sp,128
    227a:	8082                	ret
    227c:	079d                	addi	a5,a5,7
    227e:	9be1                	andi	a5,a5,-8
    2280:	00878693          	addi	a3,a5,8
    2284:	c314                	sw	a3,0(a4)
    2286:	4398                	lw	a4,0(a5)
    2288:	43dc                	lw	a5,4(a5)
    228a:	c438                	sw	a4,72(s0)
    228c:	c47c                	sw	a5,76(s0)
    228e:	bf3d                	j	21cc <_printf_float+0x6c>
    2290:	8656                	mv	a2,s5
    2292:	86e6                	mv	a3,s9
    2294:	8556                	mv	a0,s5
    2296:	85e6                	mv	a1,s9
    2298:	58c040ef          	jal	ra,6824 <__unorddf2>
    229c:	cd11                	beqz	a0,22b8 <_printf_float+0x158>
    229e:	04700793          	li	a5,71
    22a2:	00005a97          	auipc	s5,0x5
    22a6:	a9ea8a93          	addi	s5,s5,-1378 # 6d40 <_read+0xd6>
    22aa:	f947f9e3          	bgeu	a5,s4,223c <_printf_float+0xdc>
    22ae:	00005a97          	auipc	s5,0x5
    22b2:	a96a8a93          	addi	s5,s5,-1386 # 6d44 <_read+0xda>
    22b6:	b759                	j	223c <_printf_float+0xdc>
    22b8:	405c                	lw	a5,4(s0)
    22ba:	577d                	li	a4,-1
    22bc:	0dfa7d13          	andi	s10,s4,223
    22c0:	08e79363          	bne	a5,a4,2346 <_printf_float+0x1e6>
    22c4:	4799                	li	a5,6
    22c6:	c05c                	sw	a5,4(s0)
    22c8:	4054                	lw	a3,4(s0)
    22ca:	400b6713          	ori	a4,s6,1024
    22ce:	183c                	addi	a5,sp,56
    22d0:	85d6                	mv	a1,s5
    22d2:	c03e                	sw	a5,0(sp)
    22d4:	c018                	sw	a4,0(s0)
    22d6:	03310793          	addi	a5,sp,51
    22da:	c202                	sw	zero,4(sp)
    22dc:	88d2                	mv	a7,s4
    22de:	03410813          	addi	a6,sp,52
    22e2:	8666                	mv	a2,s9
    22e4:	8526                	mv	a0,s1
    22e6:	3331                	jal	1ff2 <__cvt>
    22e8:	04700793          	li	a5,71
    22ec:	8aaa                	mv	s5,a0
    22ee:	55d2                	lw	a1,52(sp)
    22f0:	00fd1b63          	bne	s10,a5,2306 <_printf_float+0x1a6>
    22f4:	57f5                	li	a5,-3
    22f6:	00f5c563          	blt	a1,a5,2300 <_printf_float+0x1a0>
    22fa:	405c                	lw	a5,4(s0)
    22fc:	08b7d763          	bge	a5,a1,238a <_printf_float+0x22a>
    2300:	1a79                	addi	s4,s4,-2
    2302:	0ffa7a13          	andi	s4,s4,255
    2306:	06500793          	li	a5,101
    230a:	0547e563          	bltu	a5,s4,2354 <_printf_float+0x1f4>
    230e:	15fd                	addi	a1,a1,-1
    2310:	8652                	mv	a2,s4
    2312:	05040513          	addi	a0,s0,80
    2316:	da2e                	sw	a1,52(sp)
    2318:	33d1                	jal	20dc <__exponent>
    231a:	5762                	lw	a4,56(sp)
    231c:	4685                	li	a3,1
    231e:	8b2a                	mv	s6,a0
    2320:	00a707b3          	add	a5,a4,a0
    2324:	c81c                	sw	a5,16(s0)
    2326:	00e6c563          	blt	a3,a4,2330 <_printf_float+0x1d0>
    232a:	4018                	lw	a4,0(s0)
    232c:	8b05                	andi	a4,a4,1
    232e:	c319                	beqz	a4,2334 <_printf_float+0x1d4>
    2330:	0785                	addi	a5,a5,1
    2332:	c81c                	sw	a5,16(s0)
    2334:	03314783          	lbu	a5,51(sp)
    2338:	f00789e3          	beqz	a5,224a <_printf_float+0xea>
    233c:	02d00793          	li	a5,45
    2340:	04f401a3          	sb	a5,67(s0)
    2344:	b719                	j	224a <_printf_float+0xea>
    2346:	04700713          	li	a4,71
    234a:	f6ed1fe3          	bne	s10,a4,22c8 <_printf_float+0x168>
    234e:	ffad                	bnez	a5,22c8 <_printf_float+0x168>
    2350:	4785                	li	a5,1
    2352:	bf95                	j	22c6 <_printf_float+0x166>
    2354:	06600793          	li	a5,102
    2358:	02fa1b63          	bne	s4,a5,238e <_printf_float+0x22e>
    235c:	405c                	lw	a5,4(s0)
    235e:	00b05b63          	blez	a1,2374 <_printf_float+0x214>
    2362:	c80c                	sw	a1,16(s0)
    2364:	e781                	bnez	a5,236c <_printf_float+0x20c>
    2366:	4018                	lw	a4,0(s0)
    2368:	8b05                	andi	a4,a4,1
    236a:	cf09                	beqz	a4,2384 <_printf_float+0x224>
    236c:	0785                	addi	a5,a5,1
    236e:	97ae                	add	a5,a5,a1
    2370:	c81c                	sw	a5,16(s0)
    2372:	a809                	j	2384 <_printf_float+0x224>
    2374:	e789                	bnez	a5,237e <_printf_float+0x21e>
    2376:	4018                	lw	a4,0(s0)
    2378:	4685                	li	a3,1
    237a:	8b05                	andi	a4,a4,1
    237c:	c319                	beqz	a4,2382 <_printf_float+0x222>
    237e:	00278693          	addi	a3,a5,2
    2382:	c814                	sw	a3,16(s0)
    2384:	cc2c                	sw	a1,88(s0)
    2386:	4b01                	li	s6,0
    2388:	b775                	j	2334 <_printf_float+0x1d4>
    238a:	06700a13          	li	s4,103
    238e:	57e2                	lw	a5,56(sp)
    2390:	00f5c963          	blt	a1,a5,23a2 <_printf_float+0x242>
    2394:	401c                	lw	a5,0(s0)
    2396:	c80c                	sw	a1,16(s0)
    2398:	8b85                	andi	a5,a5,1
    239a:	d7ed                	beqz	a5,2384 <_printf_float+0x224>
    239c:	00158793          	addi	a5,a1,1
    23a0:	bfc1                	j	2370 <_printf_float+0x210>
    23a2:	4705                	li	a4,1
    23a4:	00b04463          	bgtz	a1,23ac <_printf_float+0x24c>
    23a8:	4709                	li	a4,2
    23aa:	8f0d                	sub	a4,a4,a1
    23ac:	97ba                	add	a5,a5,a4
    23ae:	b7c9                	j	2370 <_printf_float+0x210>
    23b0:	401c                	lw	a5,0(s0)
    23b2:	4007f713          	andi	a4,a5,1024
    23b6:	e315                	bnez	a4,23da <_printf_float+0x27a>
    23b8:	4814                	lw	a3,16(s0)
    23ba:	8656                	mv	a2,s5
    23bc:	85ca                	mv	a1,s2
    23be:	8526                	mv	a0,s1
    23c0:	9982                	jalr	s3
    23c2:	e9950de3          	beq	a0,s9,225c <_printf_float+0xfc>
    23c6:	401c                	lw	a5,0(s0)
    23c8:	8b89                	andi	a5,a5,2
    23ca:	24079663          	bnez	a5,2616 <_printf_float+0x4b6>
    23ce:	57f2                	lw	a5,60(sp)
    23d0:	4448                	lw	a0,12(s0)
    23d2:	e8f556e3          	bge	a0,a5,225e <_printf_float+0xfe>
    23d6:	853e                	mv	a0,a5
    23d8:	b559                	j	225e <_printf_float+0xfe>
    23da:	06500713          	li	a4,101
    23de:	19477b63          	bgeu	a4,s4,2574 <_printf_float+0x414>
    23e2:	4428                	lw	a0,72(s0)
    23e4:	446c                	lw	a1,76(s0)
    23e6:	4601                	li	a2,0
    23e8:	4681                	li	a3,0
    23ea:	678030ef          	jal	ra,5a62 <__eqdf2>
    23ee:	e939                	bnez	a0,2444 <_printf_float+0x2e4>
    23f0:	4685                	li	a3,1
    23f2:	00005617          	auipc	a2,0x5
    23f6:	95660613          	addi	a2,a2,-1706 # 6d48 <_read+0xde>
    23fa:	85ca                	mv	a1,s2
    23fc:	8526                	mv	a0,s1
    23fe:	9982                	jalr	s3
    2400:	e5950ee3          	beq	a0,s9,225c <_printf_float+0xfc>
    2404:	5752                	lw	a4,52(sp)
    2406:	57e2                	lw	a5,56(sp)
    2408:	00f74563          	blt	a4,a5,2412 <_printf_float+0x2b2>
    240c:	401c                	lw	a5,0(s0)
    240e:	8b85                	andi	a5,a5,1
    2410:	dbdd                	beqz	a5,23c6 <_printf_float+0x266>
    2412:	86e2                	mv	a3,s8
    2414:	865e                	mv	a2,s7
    2416:	85ca                	mv	a1,s2
    2418:	8526                	mv	a0,s1
    241a:	9982                	jalr	s3
    241c:	57fd                	li	a5,-1
    241e:	e2f50fe3          	beq	a0,a5,225c <_printf_float+0xfc>
    2422:	4a01                	li	s4,0
    2424:	01a40a93          	addi	s5,s0,26
    2428:	5b7d                	li	s6,-1
    242a:	57e2                	lw	a5,56(sp)
    242c:	17fd                	addi	a5,a5,-1
    242e:	f8fa5ce3          	bge	s4,a5,23c6 <_printf_float+0x266>
    2432:	4685                	li	a3,1
    2434:	8656                	mv	a2,s5
    2436:	85ca                	mv	a1,s2
    2438:	8526                	mv	a0,s1
    243a:	9982                	jalr	s3
    243c:	e36500e3          	beq	a0,s6,225c <_printf_float+0xfc>
    2440:	0a05                	addi	s4,s4,1
    2442:	b7e5                	j	242a <_printf_float+0x2ca>
    2444:	57d2                	lw	a5,52(sp)
    2446:	06f04663          	bgtz	a5,24b2 <_printf_float+0x352>
    244a:	4685                	li	a3,1
    244c:	00005617          	auipc	a2,0x5
    2450:	8fc60613          	addi	a2,a2,-1796 # 6d48 <_read+0xde>
    2454:	85ca                	mv	a1,s2
    2456:	8526                	mv	a0,s1
    2458:	9982                	jalr	s3
    245a:	e19501e3          	beq	a0,s9,225c <_printf_float+0xfc>
    245e:	57d2                	lw	a5,52(sp)
    2460:	5762                	lw	a4,56(sp)
    2462:	8fd9                	or	a5,a5,a4
    2464:	e781                	bnez	a5,246c <_printf_float+0x30c>
    2466:	401c                	lw	a5,0(s0)
    2468:	8b85                	andi	a5,a5,1
    246a:	dfb1                	beqz	a5,23c6 <_printf_float+0x266>
    246c:	86e2                	mv	a3,s8
    246e:	865e                	mv	a2,s7
    2470:	85ca                	mv	a1,s2
    2472:	8526                	mv	a0,s1
    2474:	9982                	jalr	s3
    2476:	57fd                	li	a5,-1
    2478:	def502e3          	beq	a0,a5,225c <_printf_float+0xfc>
    247c:	4a01                	li	s4,0
    247e:	01a40b13          	addi	s6,s0,26
    2482:	5bfd                	li	s7,-1
    2484:	57d2                	lw	a5,52(sp)
    2486:	40f007b3          	neg	a5,a5
    248a:	00fa4b63          	blt	s4,a5,24a0 <_printf_float+0x340>
    248e:	56e2                	lw	a3,56(sp)
    2490:	8656                	mv	a2,s5
    2492:	85ca                	mv	a1,s2
    2494:	8526                	mv	a0,s1
    2496:	9982                	jalr	s3
    2498:	57fd                	li	a5,-1
    249a:	f2f516e3          	bne	a0,a5,23c6 <_printf_float+0x266>
    249e:	bb7d                	j	225c <_printf_float+0xfc>
    24a0:	4685                	li	a3,1
    24a2:	865a                	mv	a2,s6
    24a4:	85ca                	mv	a1,s2
    24a6:	8526                	mv	a0,s1
    24a8:	9982                	jalr	s3
    24aa:	db7509e3          	beq	a0,s7,225c <_printf_float+0xfc>
    24ae:	0a05                	addi	s4,s4,1
    24b0:	bfd1                	j	2484 <_printf_float+0x324>
    24b2:	4c3c                	lw	a5,88(s0)
    24b4:	5a62                	lw	s4,56(sp)
    24b6:	0147d363          	bge	a5,s4,24bc <_printf_float+0x35c>
    24ba:	8a3e                	mv	s4,a5
    24bc:	01405a63          	blez	s4,24d0 <_printf_float+0x370>
    24c0:	86d2                	mv	a3,s4
    24c2:	8656                	mv	a2,s5
    24c4:	85ca                	mv	a1,s2
    24c6:	8526                	mv	a0,s1
    24c8:	9982                	jalr	s3
    24ca:	57fd                	li	a5,-1
    24cc:	d8f508e3          	beq	a0,a5,225c <_printf_float+0xfc>
    24d0:	4c81                	li	s9,0
    24d2:	01a40d13          	addi	s10,s0,26
    24d6:	5dfd                	li	s11,-1
    24d8:	a809                	j	24ea <_printf_float+0x38a>
    24da:	4685                	li	a3,1
    24dc:	866a                	mv	a2,s10
    24de:	85ca                	mv	a1,s2
    24e0:	8526                	mv	a0,s1
    24e2:	9982                	jalr	s3
    24e4:	d7b50ce3          	beq	a0,s11,225c <_printf_float+0xfc>
    24e8:	0c85                	addi	s9,s9,1
    24ea:	05842b03          	lw	s6,88(s0)
    24ee:	87d2                	mv	a5,s4
    24f0:	000a5363          	bgez	s4,24f6 <_printf_float+0x396>
    24f4:	4781                	li	a5,0
    24f6:	40fb07b3          	sub	a5,s6,a5
    24fa:	fefcc0e3          	blt	s9,a5,24da <_printf_float+0x37a>
    24fe:	5752                	lw	a4,52(sp)
    2500:	57e2                	lw	a5,56(sp)
    2502:	02f74d63          	blt	a4,a5,253c <_printf_float+0x3dc>
    2506:	401c                	lw	a5,0(s0)
    2508:	8b85                	andi	a5,a5,1
    250a:	eb8d                	bnez	a5,253c <_printf_float+0x3dc>
    250c:	57e2                	lw	a5,56(sp)
    250e:	5752                	lw	a4,52(sp)
    2510:	40e78a33          	sub	s4,a5,a4
    2514:	00eb4463          	blt	s6,a4,251c <_printf_float+0x3bc>
    2518:	41678a33          	sub	s4,a5,s6
    251c:	01405b63          	blez	s4,2532 <_printf_float+0x3d2>
    2520:	86d2                	mv	a3,s4
    2522:	016a8633          	add	a2,s5,s6
    2526:	85ca                	mv	a1,s2
    2528:	8526                	mv	a0,s1
    252a:	9982                	jalr	s3
    252c:	57fd                	li	a5,-1
    252e:	d2f507e3          	beq	a0,a5,225c <_printf_float+0xfc>
    2532:	4a81                	li	s5,0
    2534:	01a40b13          	addi	s6,s0,26
    2538:	5bfd                	li	s7,-1
    253a:	a015                	j	255e <_printf_float+0x3fe>
    253c:	86e2                	mv	a3,s8
    253e:	865e                	mv	a2,s7
    2540:	85ca                	mv	a1,s2
    2542:	8526                	mv	a0,s1
    2544:	9982                	jalr	s3
    2546:	57fd                	li	a5,-1
    2548:	fcf512e3          	bne	a0,a5,250c <_printf_float+0x3ac>
    254c:	bb01                	j	225c <_printf_float+0xfc>
    254e:	4685                	li	a3,1
    2550:	865a                	mv	a2,s6
    2552:	85ca                	mv	a1,s2
    2554:	8526                	mv	a0,s1
    2556:	9982                	jalr	s3
    2558:	d17502e3          	beq	a0,s7,225c <_printf_float+0xfc>
    255c:	0a85                	addi	s5,s5,1
    255e:	5752                	lw	a4,52(sp)
    2560:	57e2                	lw	a5,56(sp)
    2562:	8f99                	sub	a5,a5,a4
    2564:	8752                	mv	a4,s4
    2566:	000a5363          	bgez	s4,256c <_printf_float+0x40c>
    256a:	4701                	li	a4,0
    256c:	8f99                	sub	a5,a5,a4
    256e:	fefac0e3          	blt	s5,a5,254e <_printf_float+0x3ee>
    2572:	bd91                	j	23c6 <_printf_float+0x266>
    2574:	56e2                	lw	a3,56(sp)
    2576:	4705                	li	a4,1
    2578:	00d74463          	blt	a4,a3,2580 <_printf_float+0x420>
    257c:	8b85                	andi	a5,a5,1
    257e:	c7b5                	beqz	a5,25ea <_printf_float+0x48a>
    2580:	4685                	li	a3,1
    2582:	8656                	mv	a2,s5
    2584:	85ca                	mv	a1,s2
    2586:	8526                	mv	a0,s1
    2588:	9982                	jalr	s3
    258a:	5a7d                	li	s4,-1
    258c:	cd4508e3          	beq	a0,s4,225c <_printf_float+0xfc>
    2590:	86e2                	mv	a3,s8
    2592:	865e                	mv	a2,s7
    2594:	85ca                	mv	a1,s2
    2596:	8526                	mv	a0,s1
    2598:	9982                	jalr	s3
    259a:	cd4501e3          	beq	a0,s4,225c <_printf_float+0xfc>
    259e:	4428                	lw	a0,72(s0)
    25a0:	446c                	lw	a1,76(s0)
    25a2:	4601                	li	a2,0
    25a4:	4681                	li	a3,0
    25a6:	4bc030ef          	jal	ra,5a62 <__eqdf2>
    25aa:	c91d                	beqz	a0,25e0 <_printf_float+0x480>
    25ac:	56e2                	lw	a3,56(sp)
    25ae:	001a8613          	addi	a2,s5,1
    25b2:	85ca                	mv	a1,s2
    25b4:	16fd                	addi	a3,a3,-1
    25b6:	8526                	mv	a0,s1
    25b8:	9982                	jalr	s3
    25ba:	cb4501e3          	beq	a0,s4,225c <_printf_float+0xfc>
    25be:	86da                	mv	a3,s6
    25c0:	05040613          	addi	a2,s0,80
    25c4:	b5f9                	j	2492 <_printf_float+0x332>
    25c6:	4685                	li	a3,1
    25c8:	8656                	mv	a2,s5
    25ca:	85ca                	mv	a1,s2
    25cc:	8526                	mv	a0,s1
    25ce:	9982                	jalr	s3
    25d0:	c97506e3          	beq	a0,s7,225c <_printf_float+0xfc>
    25d4:	0a05                	addi	s4,s4,1
    25d6:	57e2                	lw	a5,56(sp)
    25d8:	17fd                	addi	a5,a5,-1
    25da:	fefa46e3          	blt	s4,a5,25c6 <_printf_float+0x466>
    25de:	b7c5                	j	25be <_printf_float+0x45e>
    25e0:	4a01                	li	s4,0
    25e2:	01a40a93          	addi	s5,s0,26
    25e6:	5bfd                	li	s7,-1
    25e8:	b7fd                	j	25d6 <_printf_float+0x476>
    25ea:	4685                	li	a3,1
    25ec:	8656                	mv	a2,s5
    25ee:	85ca                	mv	a1,s2
    25f0:	8526                	mv	a0,s1
    25f2:	9982                	jalr	s3
    25f4:	fd9515e3          	bne	a0,s9,25be <_printf_float+0x45e>
    25f8:	b195                	j	225c <_printf_float+0xfc>
    25fa:	4685                	li	a3,1
    25fc:	8656                	mv	a2,s5
    25fe:	85ca                	mv	a1,s2
    2600:	8526                	mv	a0,s1
    2602:	9982                	jalr	s3
    2604:	c5650ce3          	beq	a0,s6,225c <_printf_float+0xfc>
    2608:	0a05                	addi	s4,s4,1
    260a:	445c                	lw	a5,12(s0)
    260c:	5772                	lw	a4,60(sp)
    260e:	8f99                	sub	a5,a5,a4
    2610:	fefa45e3          	blt	s4,a5,25fa <_printf_float+0x49a>
    2614:	bb6d                	j	23ce <_printf_float+0x26e>
    2616:	4a01                	li	s4,0
    2618:	01940a93          	addi	s5,s0,25
    261c:	5b7d                	li	s6,-1
    261e:	b7f5                	j	260a <_printf_float+0x4aa>

00002620 <_printf_common>:
    2620:	7179                	addi	sp,sp,-48
    2622:	ca56                	sw	s5,20(sp)
    2624:	499c                	lw	a5,16(a1)
    2626:	8aba                	mv	s5,a4
    2628:	4598                	lw	a4,8(a1)
    262a:	d422                	sw	s0,40(sp)
    262c:	d226                	sw	s1,36(sp)
    262e:	ce4e                	sw	s3,28(sp)
    2630:	cc52                	sw	s4,24(sp)
    2632:	d606                	sw	ra,44(sp)
    2634:	d04a                	sw	s2,32(sp)
    2636:	c85a                	sw	s6,16(sp)
    2638:	c65e                	sw	s7,12(sp)
    263a:	89aa                	mv	s3,a0
    263c:	842e                	mv	s0,a1
    263e:	84b2                	mv	s1,a2
    2640:	8a36                	mv	s4,a3
    2642:	00e7d363          	bge	a5,a4,2648 <_printf_common+0x28>
    2646:	87ba                	mv	a5,a4
    2648:	c09c                	sw	a5,0(s1)
    264a:	04344703          	lbu	a4,67(s0)
    264e:	c319                	beqz	a4,2654 <_printf_common+0x34>
    2650:	0785                	addi	a5,a5,1
    2652:	c09c                	sw	a5,0(s1)
    2654:	401c                	lw	a5,0(s0)
    2656:	0207f793          	andi	a5,a5,32
    265a:	c781                	beqz	a5,2662 <_printf_common+0x42>
    265c:	409c                	lw	a5,0(s1)
    265e:	0789                	addi	a5,a5,2
    2660:	c09c                	sw	a5,0(s1)
    2662:	00042903          	lw	s2,0(s0)
    2666:	00697913          	andi	s2,s2,6
    266a:	00091a63          	bnez	s2,267e <_printf_common+0x5e>
    266e:	01940b13          	addi	s6,s0,25
    2672:	5bfd                	li	s7,-1
    2674:	445c                	lw	a5,12(s0)
    2676:	4098                	lw	a4,0(s1)
    2678:	8f99                	sub	a5,a5,a4
    267a:	04f94c63          	blt	s2,a5,26d2 <_printf_common+0xb2>
    267e:	401c                	lw	a5,0(s0)
    2680:	04344683          	lbu	a3,67(s0)
    2684:	0207f793          	andi	a5,a5,32
    2688:	00d036b3          	snez	a3,a3
    268c:	eba5                	bnez	a5,26fc <_printf_common+0xdc>
    268e:	04340613          	addi	a2,s0,67
    2692:	85d2                	mv	a1,s4
    2694:	854e                	mv	a0,s3
    2696:	9a82                	jalr	s5
    2698:	57fd                	li	a5,-1
    269a:	04f50363          	beq	a0,a5,26e0 <_printf_common+0xc0>
    269e:	401c                	lw	a5,0(s0)
    26a0:	4611                	li	a2,4
    26a2:	4098                	lw	a4,0(s1)
    26a4:	8b99                	andi	a5,a5,6
    26a6:	4454                	lw	a3,12(s0)
    26a8:	4481                	li	s1,0
    26aa:	00c79763          	bne	a5,a2,26b8 <_printf_common+0x98>
    26ae:	40e684b3          	sub	s1,a3,a4
    26b2:	0004d363          	bgez	s1,26b8 <_printf_common+0x98>
    26b6:	4481                	li	s1,0
    26b8:	441c                	lw	a5,8(s0)
    26ba:	4818                	lw	a4,16(s0)
    26bc:	00f75463          	bge	a4,a5,26c4 <_printf_common+0xa4>
    26c0:	8f99                	sub	a5,a5,a4
    26c2:	94be                	add	s1,s1,a5
    26c4:	4901                	li	s2,0
    26c6:	0469                	addi	s0,s0,26
    26c8:	5b7d                	li	s6,-1
    26ca:	05249863          	bne	s1,s2,271a <_printf_common+0xfa>
    26ce:	4501                	li	a0,0
    26d0:	a809                	j	26e2 <_printf_common+0xc2>
    26d2:	4685                	li	a3,1
    26d4:	865a                	mv	a2,s6
    26d6:	85d2                	mv	a1,s4
    26d8:	854e                	mv	a0,s3
    26da:	9a82                	jalr	s5
    26dc:	01751e63          	bne	a0,s7,26f8 <_printf_common+0xd8>
    26e0:	557d                	li	a0,-1
    26e2:	50b2                	lw	ra,44(sp)
    26e4:	5422                	lw	s0,40(sp)
    26e6:	5492                	lw	s1,36(sp)
    26e8:	5902                	lw	s2,32(sp)
    26ea:	49f2                	lw	s3,28(sp)
    26ec:	4a62                	lw	s4,24(sp)
    26ee:	4ad2                	lw	s5,20(sp)
    26f0:	4b42                	lw	s6,16(sp)
    26f2:	4bb2                	lw	s7,12(sp)
    26f4:	6145                	addi	sp,sp,48
    26f6:	8082                	ret
    26f8:	0905                	addi	s2,s2,1
    26fa:	bfad                	j	2674 <_printf_common+0x54>
    26fc:	00d40733          	add	a4,s0,a3
    2700:	03000613          	li	a2,48
    2704:	04c701a3          	sb	a2,67(a4)
    2708:	04544703          	lbu	a4,69(s0)
    270c:	00168793          	addi	a5,a3,1
    2710:	97a2                	add	a5,a5,s0
    2712:	0689                	addi	a3,a3,2
    2714:	04e781a3          	sb	a4,67(a5)
    2718:	bf9d                	j	268e <_printf_common+0x6e>
    271a:	4685                	li	a3,1
    271c:	8622                	mv	a2,s0
    271e:	85d2                	mv	a1,s4
    2720:	854e                	mv	a0,s3
    2722:	9a82                	jalr	s5
    2724:	fb650ee3          	beq	a0,s6,26e0 <_printf_common+0xc0>
    2728:	0905                	addi	s2,s2,1
    272a:	b745                	j	26ca <_printf_common+0xaa>

0000272c <_printf_i>:
    272c:	7179                	addi	sp,sp,-48
    272e:	d422                	sw	s0,40(sp)
    2730:	d226                	sw	s1,36(sp)
    2732:	d04a                	sw	s2,32(sp)
    2734:	ce4e                	sw	s3,28(sp)
    2736:	d606                	sw	ra,44(sp)
    2738:	cc52                	sw	s4,24(sp)
    273a:	ca56                	sw	s5,20(sp)
    273c:	c85a                	sw	s6,16(sp)
    273e:	89b6                	mv	s3,a3
    2740:	2d94                	lbu	a3,24(a1)
    2742:	06900793          	li	a5,105
    2746:	8932                	mv	s2,a2
    2748:	84aa                	mv	s1,a0
    274a:	842e                	mv	s0,a1
    274c:	04358613          	addi	a2,a1,67
    2750:	02f68d63          	beq	a3,a5,278a <_printf_i+0x5e>
    2754:	06d7e263          	bltu	a5,a3,27b8 <_printf_i+0x8c>
    2758:	05800793          	li	a5,88
    275c:	18f68663          	beq	a3,a5,28e8 <_printf_i+0x1bc>
    2760:	00d7ed63          	bltu	a5,a3,277a <_printf_i+0x4e>
    2764:	20068e63          	beqz	a3,2980 <_printf_i+0x254>
    2768:	04300793          	li	a5,67
    276c:	0af68f63          	beq	a3,a5,282a <_printf_i+0xfe>
    2770:	04240a93          	addi	s5,s0,66
    2774:	04d40123          	sb	a3,66(s0)
    2778:	a0d1                	j	283c <_printf_i+0x110>
    277a:	06300793          	li	a5,99
    277e:	0af68663          	beq	a3,a5,282a <_printf_i+0xfe>
    2782:	06400793          	li	a5,100
    2786:	fef695e3          	bne	a3,a5,2770 <_printf_i+0x44>
    278a:	401c                	lw	a5,0(s0)
    278c:	4308                	lw	a0,0(a4)
    278e:	0807f693          	andi	a3,a5,128
    2792:	00450593          	addi	a1,a0,4
    2796:	c6cd                	beqz	a3,2840 <_printf_i+0x114>
    2798:	411c                	lw	a5,0(a0)
    279a:	c30c                	sw	a1,0(a4)
    279c:	0007d863          	bgez	a5,27ac <_printf_i+0x80>
    27a0:	02d00713          	li	a4,45
    27a4:	40f007b3          	neg	a5,a5
    27a8:	04e401a3          	sb	a4,67(s0)
    27ac:	00004697          	auipc	a3,0x4
    27b0:	5a068693          	addi	a3,a3,1440 # 6d4c <_read+0xe2>
    27b4:	4729                	li	a4,10
    27b6:	a86d                	j	2870 <_printf_i+0x144>
    27b8:	07000793          	li	a5,112
    27bc:	16f68263          	beq	a3,a5,2920 <_printf_i+0x1f4>
    27c0:	02d7e563          	bltu	a5,a3,27ea <_printf_i+0xbe>
    27c4:	06e00793          	li	a5,110
    27c8:	18f68963          	beq	a3,a5,295a <_printf_i+0x22e>
    27cc:	06f00793          	li	a5,111
    27d0:	faf690e3          	bne	a3,a5,2770 <_printf_i+0x44>
    27d4:	400c                	lw	a1,0(s0)
    27d6:	431c                	lw	a5,0(a4)
    27d8:	0805f813          	andi	a6,a1,128
    27dc:	00478513          	addi	a0,a5,4
    27e0:	06080863          	beqz	a6,2850 <_printf_i+0x124>
    27e4:	c308                	sw	a0,0(a4)
    27e6:	439c                	lw	a5,0(a5)
    27e8:	a88d                	j	285a <_printf_i+0x12e>
    27ea:	07500793          	li	a5,117
    27ee:	fef683e3          	beq	a3,a5,27d4 <_printf_i+0xa8>
    27f2:	07800793          	li	a5,120
    27f6:	12f68963          	beq	a3,a5,2928 <_printf_i+0x1fc>
    27fa:	07300793          	li	a5,115
    27fe:	f6f699e3          	bne	a3,a5,2770 <_printf_i+0x44>
    2802:	431c                	lw	a5,0(a4)
    2804:	41d0                	lw	a2,4(a1)
    2806:	4581                	li	a1,0
    2808:	00478693          	addi	a3,a5,4
    280c:	c314                	sw	a3,0(a4)
    280e:	0007aa83          	lw	s5,0(a5)
    2812:	8556                	mv	a0,s5
    2814:	6cc010ef          	jal	ra,3ee0 <memchr>
    2818:	c501                	beqz	a0,2820 <_printf_i+0xf4>
    281a:	41550533          	sub	a0,a0,s5
    281e:	c048                	sw	a0,4(s0)
    2820:	405c                	lw	a5,4(s0)
    2822:	c81c                	sw	a5,16(s0)
    2824:	040401a3          	sb	zero,67(s0)
    2828:	a861                	j	28c0 <_printf_i+0x194>
    282a:	431c                	lw	a5,0(a4)
    282c:	04240a93          	addi	s5,s0,66
    2830:	00478693          	addi	a3,a5,4
    2834:	439c                	lw	a5,0(a5)
    2836:	c314                	sw	a3,0(a4)
    2838:	04f40123          	sb	a5,66(s0)
    283c:	4785                	li	a5,1
    283e:	b7d5                	j	2822 <_printf_i+0xf6>
    2840:	0407f693          	andi	a3,a5,64
    2844:	411c                	lw	a5,0(a0)
    2846:	c30c                	sw	a1,0(a4)
    2848:	dab1                	beqz	a3,279c <_printf_i+0x70>
    284a:	07c2                	slli	a5,a5,0x10
    284c:	87c1                	srai	a5,a5,0x10
    284e:	b7b9                	j	279c <_printf_i+0x70>
    2850:	0405f593          	andi	a1,a1,64
    2854:	c308                	sw	a0,0(a4)
    2856:	d9c1                	beqz	a1,27e6 <_printf_i+0xba>
    2858:	239e                	lhu	a5,0(a5)
    285a:	06f00713          	li	a4,111
    285e:	0ee68663          	beq	a3,a4,294a <_printf_i+0x21e>
    2862:	00004697          	auipc	a3,0x4
    2866:	4ea68693          	addi	a3,a3,1258 # 6d4c <_read+0xe2>
    286a:	4729                	li	a4,10
    286c:	040401a3          	sb	zero,67(s0)
    2870:	404c                	lw	a1,4(s0)
    2872:	c40c                	sw	a1,8(s0)
    2874:	0005c563          	bltz	a1,287e <_printf_i+0x152>
    2878:	4008                	lw	a0,0(s0)
    287a:	996d                	andi	a0,a0,-5
    287c:	c008                	sw	a0,0(s0)
    287e:	e399                	bnez	a5,2884 <_printf_i+0x158>
    2880:	8ab2                	mv	s5,a2
    2882:	cd89                	beqz	a1,289c <_printf_i+0x170>
    2884:	8ab2                	mv	s5,a2
    2886:	02e7f5b3          	remu	a1,a5,a4
    288a:	1afd                	addi	s5,s5,-1
    288c:	95b6                	add	a1,a1,a3
    288e:	218c                	lbu	a1,0(a1)
    2890:	00ba8023          	sb	a1,0(s5)
    2894:	02e7d5b3          	divu	a1,a5,a4
    2898:	0ae7ff63          	bgeu	a5,a4,2956 <_printf_i+0x22a>
    289c:	47a1                	li	a5,8
    289e:	00f71e63          	bne	a4,a5,28ba <_printf_i+0x18e>
    28a2:	401c                	lw	a5,0(s0)
    28a4:	8b85                	andi	a5,a5,1
    28a6:	cb91                	beqz	a5,28ba <_printf_i+0x18e>
    28a8:	4058                	lw	a4,4(s0)
    28aa:	481c                	lw	a5,16(s0)
    28ac:	00e7c763          	blt	a5,a4,28ba <_printf_i+0x18e>
    28b0:	03000793          	li	a5,48
    28b4:	fefa8fa3          	sb	a5,-1(s5)
    28b8:	1afd                	addi	s5,s5,-1
    28ba:	41560633          	sub	a2,a2,s5
    28be:	c810                	sw	a2,16(s0)
    28c0:	874e                	mv	a4,s3
    28c2:	86ca                	mv	a3,s2
    28c4:	0070                	addi	a2,sp,12
    28c6:	85a2                	mv	a1,s0
    28c8:	8526                	mv	a0,s1
    28ca:	3b99                	jal	2620 <_printf_common>
    28cc:	5a7d                	li	s4,-1
    28ce:	0b451d63          	bne	a0,s4,2988 <_printf_i+0x25c>
    28d2:	557d                	li	a0,-1
    28d4:	50b2                	lw	ra,44(sp)
    28d6:	5422                	lw	s0,40(sp)
    28d8:	5492                	lw	s1,36(sp)
    28da:	5902                	lw	s2,32(sp)
    28dc:	49f2                	lw	s3,28(sp)
    28de:	4a62                	lw	s4,24(sp)
    28e0:	4ad2                	lw	s5,20(sp)
    28e2:	4b42                	lw	s6,16(sp)
    28e4:	6145                	addi	sp,sp,48
    28e6:	8082                	ret
    28e8:	04d582a3          	sb	a3,69(a1)
    28ec:	00004697          	auipc	a3,0x4
    28f0:	46068693          	addi	a3,a3,1120 # 6d4c <_read+0xe2>
    28f4:	400c                	lw	a1,0(s0)
    28f6:	4308                	lw	a0,0(a4)
    28f8:	0805f813          	andi	a6,a1,128
    28fc:	411c                	lw	a5,0(a0)
    28fe:	0511                	addi	a0,a0,4
    2900:	02080d63          	beqz	a6,293a <_printf_i+0x20e>
    2904:	c308                	sw	a0,0(a4)
    2906:	0015f713          	andi	a4,a1,1
    290a:	c701                	beqz	a4,2912 <_printf_i+0x1e6>
    290c:	0205e593          	ori	a1,a1,32
    2910:	c00c                	sw	a1,0(s0)
    2912:	4741                	li	a4,16
    2914:	ffa1                	bnez	a5,286c <_printf_i+0x140>
    2916:	400c                	lw	a1,0(s0)
    2918:	fdf5f593          	andi	a1,a1,-33
    291c:	c00c                	sw	a1,0(s0)
    291e:	b7b9                	j	286c <_printf_i+0x140>
    2920:	419c                	lw	a5,0(a1)
    2922:	0207e793          	ori	a5,a5,32
    2926:	c19c                	sw	a5,0(a1)
    2928:	07800793          	li	a5,120
    292c:	04f402a3          	sb	a5,69(s0)
    2930:	00004697          	auipc	a3,0x4
    2934:	43068693          	addi	a3,a3,1072 # 6d60 <_read+0xf6>
    2938:	bf75                	j	28f4 <_printf_i+0x1c8>
    293a:	0405f813          	andi	a6,a1,64
    293e:	c308                	sw	a0,0(a4)
    2940:	fc0803e3          	beqz	a6,2906 <_printf_i+0x1da>
    2944:	07c2                	slli	a5,a5,0x10
    2946:	83c1                	srli	a5,a5,0x10
    2948:	bf7d                	j	2906 <_printf_i+0x1da>
    294a:	00004697          	auipc	a3,0x4
    294e:	40268693          	addi	a3,a3,1026 # 6d4c <_read+0xe2>
    2952:	4721                	li	a4,8
    2954:	bf21                	j	286c <_printf_i+0x140>
    2956:	87ae                	mv	a5,a1
    2958:	b73d                	j	2886 <_printf_i+0x15a>
    295a:	4194                	lw	a3,0(a1)
    295c:	431c                	lw	a5,0(a4)
    295e:	49cc                	lw	a1,20(a1)
    2960:	0806f813          	andi	a6,a3,128
    2964:	00478513          	addi	a0,a5,4
    2968:	00080663          	beqz	a6,2974 <_printf_i+0x248>
    296c:	c308                	sw	a0,0(a4)
    296e:	439c                	lw	a5,0(a5)
    2970:	c38c                	sw	a1,0(a5)
    2972:	a039                	j	2980 <_printf_i+0x254>
    2974:	c308                	sw	a0,0(a4)
    2976:	0406f693          	andi	a3,a3,64
    297a:	439c                	lw	a5,0(a5)
    297c:	daf5                	beqz	a3,2970 <_printf_i+0x244>
    297e:	a38e                	sh	a1,0(a5)
    2980:	00042823          	sw	zero,16(s0)
    2984:	8ab2                	mv	s5,a2
    2986:	bf2d                	j	28c0 <_printf_i+0x194>
    2988:	4814                	lw	a3,16(s0)
    298a:	8656                	mv	a2,s5
    298c:	85ca                	mv	a1,s2
    298e:	8526                	mv	a0,s1
    2990:	9982                	jalr	s3
    2992:	f54500e3          	beq	a0,s4,28d2 <_printf_i+0x1a6>
    2996:	401c                	lw	a5,0(s0)
    2998:	8b89                	andi	a5,a5,2
    299a:	e78d                	bnez	a5,29c4 <_printf_i+0x298>
    299c:	47b2                	lw	a5,12(sp)
    299e:	4448                	lw	a0,12(s0)
    29a0:	f2f55ae3          	bge	a0,a5,28d4 <_printf_i+0x1a8>
    29a4:	853e                	mv	a0,a5
    29a6:	b73d                	j	28d4 <_printf_i+0x1a8>
    29a8:	4685                	li	a3,1
    29aa:	8656                	mv	a2,s5
    29ac:	85ca                	mv	a1,s2
    29ae:	8526                	mv	a0,s1
    29b0:	9982                	jalr	s3
    29b2:	f36500e3          	beq	a0,s6,28d2 <_printf_i+0x1a6>
    29b6:	0a05                	addi	s4,s4,1
    29b8:	445c                	lw	a5,12(s0)
    29ba:	4732                	lw	a4,12(sp)
    29bc:	8f99                	sub	a5,a5,a4
    29be:	fefa45e3          	blt	s4,a5,29a8 <_printf_i+0x27c>
    29c2:	bfe9                	j	299c <_printf_i+0x270>
    29c4:	4a01                	li	s4,0
    29c6:	01940a93          	addi	s5,s0,25
    29ca:	5b7d                	li	s6,-1
    29cc:	b7f5                	j	29b8 <_printf_i+0x28c>

000029ce <iprintf>:
    29ce:	7139                	addi	sp,sp,-64
    29d0:	da3e                	sw	a5,52(sp)
    29d2:	d22e                	sw	a1,36(sp)
    29d4:	d432                	sw	a2,40(sp)
    29d6:	d636                	sw	a3,44(sp)
    29d8:	d83a                	sw	a4,48(sp)
    29da:	dc42                	sw	a6,56(sp)
    29dc:	de46                	sw	a7,60(sp)
    29de:	81418793          	addi	a5,gp,-2028 # 200001f4 <_impure_ptr>
    29e2:	cc22                	sw	s0,24(sp)
    29e4:	4380                	lw	s0,0(a5)
    29e6:	ca26                	sw	s1,20(sp)
    29e8:	ce06                	sw	ra,28(sp)
    29ea:	84aa                	mv	s1,a0
    29ec:	c411                	beqz	s0,29f8 <iprintf+0x2a>
    29ee:	4c1c                	lw	a5,24(s0)
    29f0:	e781                	bnez	a5,29f8 <iprintf+0x2a>
    29f2:	8522                	mv	a0,s0
    29f4:	272010ef          	jal	ra,3c66 <__sinit>
    29f8:	440c                	lw	a1,8(s0)
    29fa:	1054                	addi	a3,sp,36
    29fc:	8626                	mv	a2,s1
    29fe:	8522                	mv	a0,s0
    2a00:	c636                	sw	a3,12(sp)
    2a02:	689010ef          	jal	ra,488a <_vfiprintf_r>
    2a06:	40f2                	lw	ra,28(sp)
    2a08:	4462                	lw	s0,24(sp)
    2a0a:	44d2                	lw	s1,20(sp)
    2a0c:	6121                	addi	sp,sp,64
    2a0e:	8082                	ret

00002a10 <_puts_r>:
    2a10:	1101                	addi	sp,sp,-32
    2a12:	ca26                	sw	s1,20(sp)
    2a14:	c84a                	sw	s2,16(sp)
    2a16:	ce06                	sw	ra,28(sp)
    2a18:	cc22                	sw	s0,24(sp)
    2a1a:	c64e                	sw	s3,12(sp)
    2a1c:	c452                	sw	s4,8(sp)
    2a1e:	84aa                	mv	s1,a0
    2a20:	892e                	mv	s2,a1
    2a22:	c509                	beqz	a0,2a2c <_puts_r+0x1c>
    2a24:	4d1c                	lw	a5,24(a0)
    2a26:	e399                	bnez	a5,2a2c <_puts_r+0x1c>
    2a28:	23e010ef          	jal	ra,3c66 <__sinit>
    2a2c:	4c9c                	lw	a5,24(s1)
    2a2e:	4480                	lw	s0,8(s1)
    2a30:	e781                	bnez	a5,2a38 <_puts_r+0x28>
    2a32:	8526                	mv	a0,s1
    2a34:	232010ef          	jal	ra,3c66 <__sinit>
    2a38:	00004797          	auipc	a5,0x4
    2a3c:	3b878793          	addi	a5,a5,952 # 6df0 <__sf_fake_stdin>
    2a40:	02f41b63          	bne	s0,a5,2a76 <_puts_r+0x66>
    2a44:	40c0                	lw	s0,4(s1)
    2a46:	245e                	lhu	a5,12(s0)
    2a48:	8ba1                	andi	a5,a5,8
    2a4a:	c7b1                	beqz	a5,2a96 <_puts_r+0x86>
    2a4c:	481c                	lw	a5,16(s0)
    2a4e:	c7a1                	beqz	a5,2a96 <_puts_r+0x86>
    2a50:	59fd                	li	s3,-1
    2a52:	4a29                	li	s4,10
    2a54:	441c                	lw	a5,8(s0)
    2a56:	00094583          	lbu	a1,0(s2) # 801c000 <_data_lma+0x8014e2c>
    2a5a:	17fd                	addi	a5,a5,-1
    2a5c:	e9b1                	bnez	a1,2ab0 <_puts_r+0xa0>
    2a5e:	c41c                	sw	a5,8(s0)
    2a60:	0607dd63          	bgez	a5,2ada <_puts_r+0xca>
    2a64:	8622                	mv	a2,s0
    2a66:	45a9                	li	a1,10
    2a68:	8526                	mv	a0,s1
    2a6a:	2869                	jal	2b04 <__swbuf_r>
    2a6c:	57fd                	li	a5,-1
    2a6e:	02f50863          	beq	a0,a5,2a9e <_puts_r+0x8e>
    2a72:	4529                	li	a0,10
    2a74:	a035                	j	2aa0 <_puts_r+0x90>
    2a76:	00004797          	auipc	a5,0x4
    2a7a:	39a78793          	addi	a5,a5,922 # 6e10 <__sf_fake_stdout>
    2a7e:	00f41463          	bne	s0,a5,2a86 <_puts_r+0x76>
    2a82:	4480                	lw	s0,8(s1)
    2a84:	b7c9                	j	2a46 <_puts_r+0x36>
    2a86:	00004797          	auipc	a5,0x4
    2a8a:	34a78793          	addi	a5,a5,842 # 6dd0 <__sf_fake_stderr>
    2a8e:	faf41ce3          	bne	s0,a5,2a46 <_puts_r+0x36>
    2a92:	44c0                	lw	s0,12(s1)
    2a94:	bf4d                	j	2a46 <_puts_r+0x36>
    2a96:	85a2                	mv	a1,s0
    2a98:	8526                	mv	a0,s1
    2a9a:	2235                	jal	2bc6 <__swsetup_r>
    2a9c:	d955                	beqz	a0,2a50 <_puts_r+0x40>
    2a9e:	557d                	li	a0,-1
    2aa0:	40f2                	lw	ra,28(sp)
    2aa2:	4462                	lw	s0,24(sp)
    2aa4:	44d2                	lw	s1,20(sp)
    2aa6:	4942                	lw	s2,16(sp)
    2aa8:	49b2                	lw	s3,12(sp)
    2aaa:	4a22                	lw	s4,8(sp)
    2aac:	6105                	addi	sp,sp,32
    2aae:	8082                	ret
    2ab0:	c41c                	sw	a5,8(s0)
    2ab2:	0905                	addi	s2,s2,1
    2ab4:	0007d763          	bgez	a5,2ac2 <_puts_r+0xb2>
    2ab8:	4c18                	lw	a4,24(s0)
    2aba:	00e7ca63          	blt	a5,a4,2ace <_puts_r+0xbe>
    2abe:	01458863          	beq	a1,s4,2ace <_puts_r+0xbe>
    2ac2:	401c                	lw	a5,0(s0)
    2ac4:	00178713          	addi	a4,a5,1
    2ac8:	c018                	sw	a4,0(s0)
    2aca:	a38c                	sb	a1,0(a5)
    2acc:	b761                	j	2a54 <_puts_r+0x44>
    2ace:	8622                	mv	a2,s0
    2ad0:	8526                	mv	a0,s1
    2ad2:	280d                	jal	2b04 <__swbuf_r>
    2ad4:	f93510e3          	bne	a0,s3,2a54 <_puts_r+0x44>
    2ad8:	b7d9                	j	2a9e <_puts_r+0x8e>
    2ada:	401c                	lw	a5,0(s0)
    2adc:	00178713          	addi	a4,a5,1
    2ae0:	c018                	sw	a4,0(s0)
    2ae2:	4729                	li	a4,10
    2ae4:	a398                	sb	a4,0(a5)
    2ae6:	b771                	j	2a72 <_puts_r+0x62>

00002ae8 <puts>:
    2ae8:	81418793          	addi	a5,gp,-2028 # 200001f4 <_impure_ptr>
    2aec:	85aa                	mv	a1,a0
    2aee:	4388                	lw	a0,0(a5)
    2af0:	b705                	j	2a10 <_puts_r>

00002af2 <strlen>:
    2af2:	87aa                	mv	a5,a0
    2af4:	0785                	addi	a5,a5,1
    2af6:	fff7c703          	lbu	a4,-1(a5)
    2afa:	ff6d                	bnez	a4,2af4 <strlen+0x2>
    2afc:	40a78533          	sub	a0,a5,a0
    2b00:	157d                	addi	a0,a0,-1
    2b02:	8082                	ret

00002b04 <__swbuf_r>:
    2b04:	1101                	addi	sp,sp,-32
    2b06:	cc22                	sw	s0,24(sp)
    2b08:	ca26                	sw	s1,20(sp)
    2b0a:	c84a                	sw	s2,16(sp)
    2b0c:	ce06                	sw	ra,28(sp)
    2b0e:	c64e                	sw	s3,12(sp)
    2b10:	84aa                	mv	s1,a0
    2b12:	892e                	mv	s2,a1
    2b14:	8432                	mv	s0,a2
    2b16:	c509                	beqz	a0,2b20 <__swbuf_r+0x1c>
    2b18:	4d1c                	lw	a5,24(a0)
    2b1a:	e399                	bnez	a5,2b20 <__swbuf_r+0x1c>
    2b1c:	14a010ef          	jal	ra,3c66 <__sinit>
    2b20:	00004797          	auipc	a5,0x4
    2b24:	2d078793          	addi	a5,a5,720 # 6df0 <__sf_fake_stdin>
    2b28:	06f41963          	bne	s0,a5,2b9a <__swbuf_r+0x96>
    2b2c:	40c0                	lw	s0,4(s1)
    2b2e:	4c1c                	lw	a5,24(s0)
    2b30:	c41c                	sw	a5,8(s0)
    2b32:	245e                	lhu	a5,12(s0)
    2b34:	8ba1                	andi	a5,a5,8
    2b36:	c3d1                	beqz	a5,2bba <__swbuf_r+0xb6>
    2b38:	481c                	lw	a5,16(s0)
    2b3a:	c3c1                	beqz	a5,2bba <__swbuf_r+0xb6>
    2b3c:	481c                	lw	a5,16(s0)
    2b3e:	4008                	lw	a0,0(s0)
    2b40:	0ff97993          	andi	s3,s2,255
    2b44:	0ff97913          	andi	s2,s2,255
    2b48:	8d1d                	sub	a0,a0,a5
    2b4a:	485c                	lw	a5,20(s0)
    2b4c:	00f54763          	blt	a0,a5,2b5a <__swbuf_r+0x56>
    2b50:	85a2                	mv	a1,s0
    2b52:	8526                	mv	a0,s1
    2b54:	7f7000ef          	jal	ra,3b4a <_fflush_r>
    2b58:	e52d                	bnez	a0,2bc2 <__swbuf_r+0xbe>
    2b5a:	441c                	lw	a5,8(s0)
    2b5c:	0505                	addi	a0,a0,1
    2b5e:	17fd                	addi	a5,a5,-1
    2b60:	c41c                	sw	a5,8(s0)
    2b62:	401c                	lw	a5,0(s0)
    2b64:	00178713          	addi	a4,a5,1
    2b68:	c018                	sw	a4,0(s0)
    2b6a:	01378023          	sb	s3,0(a5)
    2b6e:	485c                	lw	a5,20(s0)
    2b70:	00a78863          	beq	a5,a0,2b80 <__swbuf_r+0x7c>
    2b74:	245e                	lhu	a5,12(s0)
    2b76:	8b85                	andi	a5,a5,1
    2b78:	cb89                	beqz	a5,2b8a <__swbuf_r+0x86>
    2b7a:	47a9                	li	a5,10
    2b7c:	00f91763          	bne	s2,a5,2b8a <__swbuf_r+0x86>
    2b80:	85a2                	mv	a1,s0
    2b82:	8526                	mv	a0,s1
    2b84:	7c7000ef          	jal	ra,3b4a <_fflush_r>
    2b88:	ed0d                	bnez	a0,2bc2 <__swbuf_r+0xbe>
    2b8a:	40f2                	lw	ra,28(sp)
    2b8c:	4462                	lw	s0,24(sp)
    2b8e:	854a                	mv	a0,s2
    2b90:	44d2                	lw	s1,20(sp)
    2b92:	4942                	lw	s2,16(sp)
    2b94:	49b2                	lw	s3,12(sp)
    2b96:	6105                	addi	sp,sp,32
    2b98:	8082                	ret
    2b9a:	00004797          	auipc	a5,0x4
    2b9e:	27678793          	addi	a5,a5,630 # 6e10 <__sf_fake_stdout>
    2ba2:	00f41463          	bne	s0,a5,2baa <__swbuf_r+0xa6>
    2ba6:	4480                	lw	s0,8(s1)
    2ba8:	b759                	j	2b2e <__swbuf_r+0x2a>
    2baa:	00004797          	auipc	a5,0x4
    2bae:	22678793          	addi	a5,a5,550 # 6dd0 <__sf_fake_stderr>
    2bb2:	f6f41ee3          	bne	s0,a5,2b2e <__swbuf_r+0x2a>
    2bb6:	44c0                	lw	s0,12(s1)
    2bb8:	bf9d                	j	2b2e <__swbuf_r+0x2a>
    2bba:	85a2                	mv	a1,s0
    2bbc:	8526                	mv	a0,s1
    2bbe:	2021                	jal	2bc6 <__swsetup_r>
    2bc0:	dd35                	beqz	a0,2b3c <__swbuf_r+0x38>
    2bc2:	597d                	li	s2,-1
    2bc4:	b7d9                	j	2b8a <__swbuf_r+0x86>

00002bc6 <__swsetup_r>:
    2bc6:	1141                	addi	sp,sp,-16
    2bc8:	81418793          	addi	a5,gp,-2028 # 200001f4 <_impure_ptr>
    2bcc:	c226                	sw	s1,4(sp)
    2bce:	4384                	lw	s1,0(a5)
    2bd0:	c422                	sw	s0,8(sp)
    2bd2:	c04a                	sw	s2,0(sp)
    2bd4:	c606                	sw	ra,12(sp)
    2bd6:	892a                	mv	s2,a0
    2bd8:	842e                	mv	s0,a1
    2bda:	c491                	beqz	s1,2be6 <__swsetup_r+0x20>
    2bdc:	4c9c                	lw	a5,24(s1)
    2bde:	e781                	bnez	a5,2be6 <__swsetup_r+0x20>
    2be0:	8526                	mv	a0,s1
    2be2:	084010ef          	jal	ra,3c66 <__sinit>
    2be6:	00004797          	auipc	a5,0x4
    2bea:	20a78793          	addi	a5,a5,522 # 6df0 <__sf_fake_stdin>
    2bee:	02f41b63          	bne	s0,a5,2c24 <__swsetup_r+0x5e>
    2bf2:	40c0                	lw	s0,4(s1)
    2bf4:	00c41703          	lh	a4,12(s0)
    2bf8:	01071793          	slli	a5,a4,0x10
    2bfc:	83c1                	srli	a5,a5,0x10
    2bfe:	0087f693          	andi	a3,a5,8
    2c02:	eab5                	bnez	a3,2c76 <__swsetup_r+0xb0>
    2c04:	0107f693          	andi	a3,a5,16
    2c08:	ee95                	bnez	a3,2c44 <__swsetup_r+0x7e>
    2c0a:	47a5                	li	a5,9
    2c0c:	00f92023          	sw	a5,0(s2)
    2c10:	04076713          	ori	a4,a4,64
    2c14:	a45a                	sh	a4,12(s0)
    2c16:	557d                	li	a0,-1
    2c18:	40b2                	lw	ra,12(sp)
    2c1a:	4422                	lw	s0,8(sp)
    2c1c:	4492                	lw	s1,4(sp)
    2c1e:	4902                	lw	s2,0(sp)
    2c20:	0141                	addi	sp,sp,16
    2c22:	8082                	ret
    2c24:	00004797          	auipc	a5,0x4
    2c28:	1ec78793          	addi	a5,a5,492 # 6e10 <__sf_fake_stdout>
    2c2c:	00f41463          	bne	s0,a5,2c34 <__swsetup_r+0x6e>
    2c30:	4480                	lw	s0,8(s1)
    2c32:	b7c9                	j	2bf4 <__swsetup_r+0x2e>
    2c34:	00004797          	auipc	a5,0x4
    2c38:	19c78793          	addi	a5,a5,412 # 6dd0 <__sf_fake_stderr>
    2c3c:	faf41ce3          	bne	s0,a5,2bf4 <__swsetup_r+0x2e>
    2c40:	44c0                	lw	s0,12(s1)
    2c42:	bf4d                	j	2bf4 <__swsetup_r+0x2e>
    2c44:	8b91                	andi	a5,a5,4
    2c46:	c785                	beqz	a5,2c6e <__swsetup_r+0xa8>
    2c48:	584c                	lw	a1,52(s0)
    2c4a:	c991                	beqz	a1,2c5e <__swsetup_r+0x98>
    2c4c:	04440793          	addi	a5,s0,68
    2c50:	00f58563          	beq	a1,a5,2c5a <__swsetup_r+0x94>
    2c54:	854a                	mv	a0,s2
    2c56:	25b010ef          	jal	ra,46b0 <_free_r>
    2c5a:	02042a23          	sw	zero,52(s0)
    2c5e:	245e                	lhu	a5,12(s0)
    2c60:	00042223          	sw	zero,4(s0)
    2c64:	fdb7f793          	andi	a5,a5,-37
    2c68:	a45e                	sh	a5,12(s0)
    2c6a:	481c                	lw	a5,16(s0)
    2c6c:	c01c                	sw	a5,0(s0)
    2c6e:	245e                	lhu	a5,12(s0)
    2c70:	0087e793          	ori	a5,a5,8
    2c74:	a45e                	sh	a5,12(s0)
    2c76:	481c                	lw	a5,16(s0)
    2c78:	ef81                	bnez	a5,2c90 <__swsetup_r+0xca>
    2c7a:	245e                	lhu	a5,12(s0)
    2c7c:	20000713          	li	a4,512
    2c80:	2807f793          	andi	a5,a5,640
    2c84:	00e78663          	beq	a5,a4,2c90 <__swsetup_r+0xca>
    2c88:	85a2                	mv	a1,s0
    2c8a:	854a                	mv	a0,s2
    2c8c:	1b6010ef          	jal	ra,3e42 <__smakebuf_r>
    2c90:	245e                	lhu	a5,12(s0)
    2c92:	0017f713          	andi	a4,a5,1
    2c96:	c31d                	beqz	a4,2cbc <__swsetup_r+0xf6>
    2c98:	485c                	lw	a5,20(s0)
    2c9a:	00042423          	sw	zero,8(s0)
    2c9e:	40f007b3          	neg	a5,a5
    2ca2:	cc1c                	sw	a5,24(s0)
    2ca4:	481c                	lw	a5,16(s0)
    2ca6:	4501                	li	a0,0
    2ca8:	fba5                	bnez	a5,2c18 <__swsetup_r+0x52>
    2caa:	00c41783          	lh	a5,12(s0)
    2cae:	0807f713          	andi	a4,a5,128
    2cb2:	d33d                	beqz	a4,2c18 <__swsetup_r+0x52>
    2cb4:	0407e793          	ori	a5,a5,64
    2cb8:	a45e                	sh	a5,12(s0)
    2cba:	bfb1                	j	2c16 <__swsetup_r+0x50>
    2cbc:	8b89                	andi	a5,a5,2
    2cbe:	4701                	li	a4,0
    2cc0:	e391                	bnez	a5,2cc4 <__swsetup_r+0xfe>
    2cc2:	4858                	lw	a4,20(s0)
    2cc4:	c418                	sw	a4,8(s0)
    2cc6:	bff9                	j	2ca4 <__swsetup_r+0xde>

00002cc8 <quorem>:
    2cc8:	1101                	addi	sp,sp,-32
    2cca:	cc22                	sw	s0,24(sp)
    2ccc:	491c                	lw	a5,16(a0)
    2cce:	4980                	lw	s0,16(a1)
    2cd0:	ce06                	sw	ra,28(sp)
    2cd2:	ca26                	sw	s1,20(sp)
    2cd4:	c84a                	sw	s2,16(sp)
    2cd6:	c64e                	sw	s3,12(sp)
    2cd8:	c452                	sw	s4,8(sp)
    2cda:	c256                	sw	s5,4(sp)
    2cdc:	1287c163          	blt	a5,s0,2dfe <quorem+0x136>
    2ce0:	147d                	addi	s0,s0,-1
    2ce2:	00241813          	slli	a6,s0,0x2
    2ce6:	01458993          	addi	s3,a1,20
    2cea:	01098a33          	add	s4,s3,a6
    2cee:	01450913          	addi	s2,a0,20
    2cf2:	984a                	add	a6,a6,s2
    2cf4:	000a2783          	lw	a5,0(s4)
    2cf8:	00082703          	lw	a4,0(a6)
    2cfc:	0785                	addi	a5,a5,1
    2cfe:	02f754b3          	divu	s1,a4,a5
    2d02:	06f76663          	bltu	a4,a5,2d6e <quorem+0xa6>
    2d06:	68c1                	lui	a7,0x10
    2d08:	834e                	mv	t1,s3
    2d0a:	8e4a                	mv	t3,s2
    2d0c:	4e81                	li	t4,0
    2d0e:	4f01                	li	t5,0
    2d10:	18fd                	addi	a7,a7,-1
    2d12:	0311                	addi	t1,t1,4
    2d14:	ffc32603          	lw	a2,-4(t1)
    2d18:	0e11                	addi	t3,t3,4
    2d1a:	01167733          	and	a4,a2,a7
    2d1e:	8241                	srli	a2,a2,0x10
    2d20:	02970733          	mul	a4,a4,s1
    2d24:	02960633          	mul	a2,a2,s1
    2d28:	9776                	add	a4,a4,t4
    2d2a:	01075693          	srli	a3,a4,0x10
    2d2e:	011777b3          	and	a5,a4,a7
    2d32:	40ff07b3          	sub	a5,t5,a5
    2d36:	9636                	add	a2,a2,a3
    2d38:	ffce2683          	lw	a3,-4(t3)
    2d3c:	01065e93          	srli	t4,a2,0x10
    2d40:	01167633          	and	a2,a2,a7
    2d44:	0116f733          	and	a4,a3,a7
    2d48:	97ba                	add	a5,a5,a4
    2d4a:	82c1                	srli	a3,a3,0x10
    2d4c:	4107d713          	srai	a4,a5,0x10
    2d50:	8e91                	sub	a3,a3,a2
    2d52:	96ba                	add	a3,a3,a4
    2d54:	4106df13          	srai	t5,a3,0x10
    2d58:	0117f7b3          	and	a5,a5,a7
    2d5c:	06c2                	slli	a3,a3,0x10
    2d5e:	8fd5                	or	a5,a5,a3
    2d60:	fefe2e23          	sw	a5,-4(t3)
    2d64:	fa6a77e3          	bgeu	s4,t1,2d12 <quorem+0x4a>
    2d68:	00082783          	lw	a5,0(a6)
    2d6c:	cbbd                	beqz	a5,2de2 <quorem+0x11a>
    2d6e:	8aaa                	mv	s5,a0
    2d70:	724010ef          	jal	ra,4494 <__mcmp>
    2d74:	04054963          	bltz	a0,2dc6 <quorem+0xfe>
    2d78:	6641                	lui	a2,0x10
    2d7a:	0485                	addi	s1,s1,1
    2d7c:	85ca                	mv	a1,s2
    2d7e:	4501                	li	a0,0
    2d80:	167d                	addi	a2,a2,-1
    2d82:	0991                	addi	s3,s3,4
    2d84:	ffc9a803          	lw	a6,-4(s3)
    2d88:	4198                	lw	a4,0(a1)
    2d8a:	0591                	addi	a1,a1,4
    2d8c:	00c876b3          	and	a3,a6,a2
    2d90:	8d15                	sub	a0,a0,a3
    2d92:	00c776b3          	and	a3,a4,a2
    2d96:	96aa                	add	a3,a3,a0
    2d98:	01075793          	srli	a5,a4,0x10
    2d9c:	01085813          	srli	a6,a6,0x10
    2da0:	4106d713          	srai	a4,a3,0x10
    2da4:	410787b3          	sub	a5,a5,a6
    2da8:	97ba                	add	a5,a5,a4
    2daa:	4107d513          	srai	a0,a5,0x10
    2dae:	8ef1                	and	a3,a3,a2
    2db0:	07c2                	slli	a5,a5,0x10
    2db2:	8fd5                	or	a5,a5,a3
    2db4:	fef5ae23          	sw	a5,-4(a1)
    2db8:	fd3a75e3          	bgeu	s4,s3,2d82 <quorem+0xba>
    2dbc:	00241793          	slli	a5,s0,0x2
    2dc0:	97ca                	add	a5,a5,s2
    2dc2:	4398                	lw	a4,0(a5)
    2dc4:	c71d                	beqz	a4,2df2 <quorem+0x12a>
    2dc6:	8526                	mv	a0,s1
    2dc8:	40f2                	lw	ra,28(sp)
    2dca:	4462                	lw	s0,24(sp)
    2dcc:	44d2                	lw	s1,20(sp)
    2dce:	4942                	lw	s2,16(sp)
    2dd0:	49b2                	lw	s3,12(sp)
    2dd2:	4a22                	lw	s4,8(sp)
    2dd4:	4a92                	lw	s5,4(sp)
    2dd6:	6105                	addi	sp,sp,32
    2dd8:	8082                	ret
    2dda:	00082783          	lw	a5,0(a6)
    2dde:	e789                	bnez	a5,2de8 <quorem+0x120>
    2de0:	147d                	addi	s0,s0,-1
    2de2:	1871                	addi	a6,a6,-4
    2de4:	ff096be3          	bltu	s2,a6,2dda <quorem+0x112>
    2de8:	c900                	sw	s0,16(a0)
    2dea:	b751                	j	2d6e <quorem+0xa6>
    2dec:	4398                	lw	a4,0(a5)
    2dee:	e709                	bnez	a4,2df8 <quorem+0x130>
    2df0:	147d                	addi	s0,s0,-1
    2df2:	17f1                	addi	a5,a5,-4
    2df4:	fef96ce3          	bltu	s2,a5,2dec <quorem+0x124>
    2df8:	008aa823          	sw	s0,16(s5)
    2dfc:	b7e9                	j	2dc6 <quorem+0xfe>
    2dfe:	4501                	li	a0,0
    2e00:	b7e1                	j	2dc8 <quorem+0x100>

00002e02 <_dtoa_r>:
    2e02:	7175                	addi	sp,sp,-144
    2e04:	d83e                	sw	a5,48(sp)
    2e06:	515c                	lw	a5,36(a0)
    2e08:	c522                	sw	s0,136(sp)
    2e0a:	c326                	sw	s1,132(sp)
    2e0c:	c14a                	sw	s2,128(sp)
    2e0e:	dece                	sw	s3,124(sp)
    2e10:	dcd2                	sw	s4,120(sp)
    2e12:	d4e2                	sw	s8,104(sp)
    2e14:	c706                	sw	ra,140(sp)
    2e16:	dad6                	sw	s5,116(sp)
    2e18:	d8da                	sw	s6,112(sp)
    2e1a:	d6de                	sw	s7,108(sp)
    2e1c:	d2e6                	sw	s9,100(sp)
    2e1e:	d0ea                	sw	s10,96(sp)
    2e20:	ceee                	sw	s11,92(sp)
    2e22:	c236                	sw	a3,4(sp)
    2e24:	c63a                	sw	a4,12(sp)
    2e26:	ca46                	sw	a7,20(sp)
    2e28:	84aa                	mv	s1,a0
    2e2a:	842e                	mv	s0,a1
    2e2c:	8932                	mv	s2,a2
    2e2e:	89c2                	mv	s3,a6
    2e30:	8a2e                	mv	s4,a1
    2e32:	8c32                	mv	s8,a2
    2e34:	ef89                	bnez	a5,2e4e <_dtoa_r+0x4c>
    2e36:	4541                	li	a0,16
    2e38:	09c010ef          	jal	ra,3ed4 <malloc>
    2e3c:	d0c8                	sw	a0,36(s1)
    2e3e:	00052223          	sw	zero,4(a0)
    2e42:	00052423          	sw	zero,8(a0)
    2e46:	00052023          	sw	zero,0(a0)
    2e4a:	00052623          	sw	zero,12(a0)
    2e4e:	50dc                	lw	a5,36(s1)
    2e50:	438c                	lw	a1,0(a5)
    2e52:	cd89                	beqz	a1,2e6c <_dtoa_r+0x6a>
    2e54:	43d8                	lw	a4,4(a5)
    2e56:	4785                	li	a5,1
    2e58:	8526                	mv	a0,s1
    2e5a:	00e797b3          	sll	a5,a5,a4
    2e5e:	c59c                	sw	a5,8(a1)
    2e60:	c1d8                	sw	a4,4(a1)
    2e62:	1ce010ef          	jal	ra,4030 <_Bfree>
    2e66:	50dc                	lw	a5,36(s1)
    2e68:	0007a023          	sw	zero,0(a5)
    2e6c:	04095363          	bgez	s2,2eb2 <_dtoa_r+0xb0>
    2e70:	4785                	li	a5,1
    2e72:	00191c13          	slli	s8,s2,0x1
    2e76:	00f9a023          	sw	a5,0(s3)
    2e7a:	001c5c13          	srli	s8,s8,0x1
    2e7e:	7ff007b7          	lui	a5,0x7ff00
    2e82:	00fc7733          	and	a4,s8,a5
    2e86:	06f71463          	bne	a4,a5,2eee <_dtoa_r+0xec>
    2e8a:	5742                	lw	a4,48(sp)
    2e8c:	6789                	lui	a5,0x2
    2e8e:	0c32                	slli	s8,s8,0xc
    2e90:	70f78793          	addi	a5,a5,1807 # 270f <_printf_common+0xef>
    2e94:	00cc5c13          	srli	s8,s8,0xc
    2e98:	c31c                	sw	a5,0(a4)
    2e9a:	008c6c33          	or	s8,s8,s0
    2e9e:	320c00e3          	beqz	s8,39be <_dtoa_r+0xbbc>
    2ea2:	47d2                	lw	a5,20(sp)
    2ea4:	eb91                	bnez	a5,2eb8 <_dtoa_r+0xb6>
    2ea6:	00004797          	auipc	a5,0x4
    2eaa:	f2678793          	addi	a5,a5,-218 # 6dcc <_read+0x162>
    2eae:	c03e                	sw	a5,0(sp)
    2eb0:	a839                	j	2ece <_dtoa_r+0xcc>
    2eb2:	0009a023          	sw	zero,0(s3)
    2eb6:	b7e1                	j	2e7e <_dtoa_r+0x7c>
    2eb8:	00004797          	auipc	a5,0x4
    2ebc:	f1478793          	addi	a5,a5,-236 # 6dcc <_read+0x162>
    2ec0:	c03e                	sw	a5,0(sp)
    2ec2:	00004797          	auipc	a5,0x4
    2ec6:	f0d78793          	addi	a5,a5,-243 # 6dcf <_read+0x165>
    2eca:	4752                	lw	a4,20(sp)
    2ecc:	c31c                	sw	a5,0(a4)
    2ece:	40ba                	lw	ra,140(sp)
    2ed0:	442a                	lw	s0,136(sp)
    2ed2:	4502                	lw	a0,0(sp)
    2ed4:	449a                	lw	s1,132(sp)
    2ed6:	490a                	lw	s2,128(sp)
    2ed8:	59f6                	lw	s3,124(sp)
    2eda:	5a66                	lw	s4,120(sp)
    2edc:	5ad6                	lw	s5,116(sp)
    2ede:	5b46                	lw	s6,112(sp)
    2ee0:	5bb6                	lw	s7,108(sp)
    2ee2:	5c26                	lw	s8,104(sp)
    2ee4:	5c96                	lw	s9,100(sp)
    2ee6:	5d06                	lw	s10,96(sp)
    2ee8:	4df6                	lw	s11,92(sp)
    2eea:	6149                	addi	sp,sp,144
    2eec:	8082                	ret
    2eee:	4601                	li	a2,0
    2ef0:	4681                	li	a3,0
    2ef2:	8522                	mv	a0,s0
    2ef4:	85e2                	mv	a1,s8
    2ef6:	ce22                	sw	s0,28(sp)
    2ef8:	d462                	sw	s8,40(sp)
    2efa:	369020ef          	jal	ra,5a62 <__eqdf2>
    2efe:	e105                	bnez	a0,2f1e <_dtoa_r+0x11c>
    2f00:	5742                	lw	a4,48(sp)
    2f02:	4785                	li	a5,1
    2f04:	c31c                	sw	a5,0(a4)
    2f06:	00004797          	auipc	a5,0x4
    2f0a:	e4278793          	addi	a5,a5,-446 # 6d48 <_read+0xde>
    2f0e:	c03e                	sw	a5,0(sp)
    2f10:	47d2                	lw	a5,20(sp)
    2f12:	dfd5                	beqz	a5,2ece <_dtoa_r+0xcc>
    2f14:	00004797          	auipc	a5,0x4
    2f18:	e3578793          	addi	a5,a5,-459 # 6d49 <_read+0xdf>
    2f1c:	b77d                	j	2eca <_dtoa_r+0xc8>
    2f1e:	00b8                	addi	a4,sp,72
    2f20:	00f4                	addi	a3,sp,76
    2f22:	8662                	mv	a2,s8
    2f24:	85a2                	mv	a1,s0
    2f26:	8526                	mv	a0,s1
    2f28:	014c5913          	srli	s2,s8,0x14
    2f2c:	68a010ef          	jal	ra,45b6 <__d2b>
    2f30:	7ff97913          	andi	s2,s2,2047
    2f34:	89aa                	mv	s3,a0
    2f36:	4aa6                	lw	s5,72(sp)
    2f38:	10090d63          	beqz	s2,3052 <_dtoa_r+0x250>
    2f3c:	57a2                	lw	a5,40(sp)
    2f3e:	4572                	lw	a0,28(sp)
    2f40:	c0190913          	addi	s2,s2,-1023
    2f44:	00c79593          	slli	a1,a5,0xc
    2f48:	81b1                	srli	a1,a1,0xc
    2f4a:	3ff007b7          	lui	a5,0x3ff00
    2f4e:	8ddd                	or	a1,a1,a5
    2f50:	dc02                	sw	zero,56(sp)
    2f52:	00004797          	auipc	a5,0x4
    2f56:	e2678793          	addi	a5,a5,-474 # 6d78 <_read+0x10e>
    2f5a:	4390                	lw	a2,0(a5)
    2f5c:	43d4                	lw	a3,4(a5)
    2f5e:	18a030ef          	jal	ra,60e8 <__subdf3>
    2f62:	00004797          	auipc	a5,0x4
    2f66:	e1e78793          	addi	a5,a5,-482 # 6d80 <_read+0x116>
    2f6a:	4390                	lw	a2,0(a5)
    2f6c:	43d4                	lw	a3,4(a5)
    2f6e:	4c3020ef          	jal	ra,5c30 <__muldf3>
    2f72:	00004797          	auipc	a5,0x4
    2f76:	e1678793          	addi	a5,a5,-490 # 6d88 <_read+0x11e>
    2f7a:	4390                	lw	a2,0(a5)
    2f7c:	43d4                	lw	a3,4(a5)
    2f7e:	601010ef          	jal	ra,4d7e <__adddf3>
    2f82:	8b2a                	mv	s6,a0
    2f84:	854a                	mv	a0,s2
    2f86:	8bae                	mv	s7,a1
    2f88:	141030ef          	jal	ra,68c8 <__floatsidf>
    2f8c:	00004797          	auipc	a5,0x4
    2f90:	e0478793          	addi	a5,a5,-508 # 6d90 <_read+0x126>
    2f94:	4390                	lw	a2,0(a5)
    2f96:	43d4                	lw	a3,4(a5)
    2f98:	499020ef          	jal	ra,5c30 <__muldf3>
    2f9c:	862a                	mv	a2,a0
    2f9e:	86ae                	mv	a3,a1
    2fa0:	855a                	mv	a0,s6
    2fa2:	85de                	mv	a1,s7
    2fa4:	5db010ef          	jal	ra,4d7e <__adddf3>
    2fa8:	8b2a                	mv	s6,a0
    2faa:	8bae                	mv	s7,a1
    2fac:	0b5030ef          	jal	ra,6860 <__fixdfsi>
    2fb0:	842a                	mv	s0,a0
    2fb2:	4601                	li	a2,0
    2fb4:	4681                	li	a3,0
    2fb6:	855a                	mv	a0,s6
    2fb8:	85de                	mv	a1,s7
    2fba:	3c1020ef          	jal	ra,5b7a <__ledf2>
    2fbe:	00055b63          	bgez	a0,2fd4 <_dtoa_r+0x1d2>
    2fc2:	8522                	mv	a0,s0
    2fc4:	105030ef          	jal	ra,68c8 <__floatsidf>
    2fc8:	865a                	mv	a2,s6
    2fca:	86de                	mv	a3,s7
    2fcc:	297020ef          	jal	ra,5a62 <__eqdf2>
    2fd0:	c111                	beqz	a0,2fd4 <_dtoa_r+0x1d2>
    2fd2:	147d                	addi	s0,s0,-1
    2fd4:	4705                	li	a4,1
    2fd6:	47d9                	li	a5,22
    2fd8:	d63a                	sw	a4,44(sp)
    2fda:	0287e363          	bltu	a5,s0,3000 <_dtoa_r+0x1fe>
    2fde:	00341713          	slli	a4,s0,0x3
    2fe2:	00004797          	auipc	a5,0x4
    2fe6:	e7678793          	addi	a5,a5,-394 # 6e58 <__mprec_tens>
    2fea:	97ba                	add	a5,a5,a4
    2fec:	4390                	lw	a2,0(a5)
    2fee:	43d4                	lw	a3,4(a5)
    2ff0:	4572                	lw	a0,28(sp)
    2ff2:	55a2                	lw	a1,40(sp)
    2ff4:	387020ef          	jal	ra,5b7a <__ledf2>
    2ff8:	00055363          	bgez	a0,2ffe <_dtoa_r+0x1fc>
    2ffc:	147d                	addi	s0,s0,-1
    2ffe:	d602                	sw	zero,44(sp)
    3000:	412a8933          	sub	s2,s5,s2
    3004:	fff90b93          	addi	s7,s2,-1
    3008:	4b01                	li	s6,0
    300a:	000bd663          	bgez	s7,3016 <_dtoa_r+0x214>
    300e:	4b05                	li	s6,1
    3010:	412b0b33          	sub	s6,s6,s2
    3014:	4b81                	li	s7,0
    3016:	06044e63          	bltz	s0,3092 <_dtoa_r+0x290>
    301a:	9ba2                	add	s7,s7,s0
    301c:	cc22                	sw	s0,24(sp)
    301e:	4a81                	li	s5,0
    3020:	4712                	lw	a4,4(sp)
    3022:	47a5                	li	a5,9
    3024:	14e7e563          	bltu	a5,a4,316e <_dtoa_r+0x36c>
    3028:	4795                	li	a5,5
    302a:	4c85                	li	s9,1
    302c:	00e7d663          	bge	a5,a4,3038 <_dtoa_r+0x236>
    3030:	ffc70793          	addi	a5,a4,-4
    3034:	c23e                	sw	a5,4(sp)
    3036:	4c81                	li	s9,0
    3038:	4712                	lw	a4,4(sp)
    303a:	478d                	li	a5,3
    303c:	10f70e63          	beq	a4,a5,3158 <_dtoa_r+0x356>
    3040:	04e7cf63          	blt	a5,a4,309e <_dtoa_r+0x29c>
    3044:	4789                	li	a5,2
    3046:	c802                	sw	zero,16(sp)
    3048:	06f70d63          	beq	a4,a5,30c2 <_dtoa_r+0x2c0>
    304c:	4785                	li	a5,1
    304e:	c83e                	sw	a5,16(sp)
    3050:	a08d                	j	30b2 <_dtoa_r+0x2b0>
    3052:	4936                	lw	s2,76(sp)
    3054:	02000793          	li	a5,32
    3058:	9956                	add	s2,s2,s5
    305a:	43290713          	addi	a4,s2,1074
    305e:	02e7d563          	bge	a5,a4,3088 <_dtoa_r+0x286>
    3062:	04000513          	li	a0,64
    3066:	8d19                	sub	a0,a0,a4
    3068:	41290793          	addi	a5,s2,1042
    306c:	00ac1533          	sll	a0,s8,a0
    3070:	00f45433          	srl	s0,s0,a5
    3074:	8d41                	or	a0,a0,s0
    3076:	0c3030ef          	jal	ra,6938 <__floatunsidf>
    307a:	fe1007b7          	lui	a5,0xfe100
    307e:	95be                	add	a1,a1,a5
    3080:	4785                	li	a5,1
    3082:	197d                	addi	s2,s2,-1
    3084:	dc3e                	sw	a5,56(sp)
    3086:	b5f1                	j	2f52 <_dtoa_r+0x150>
    3088:	40e78533          	sub	a0,a5,a4
    308c:	00a41533          	sll	a0,s0,a0
    3090:	b7dd                	j	3076 <_dtoa_r+0x274>
    3092:	408b0b33          	sub	s6,s6,s0
    3096:	40800ab3          	neg	s5,s0
    309a:	cc02                	sw	zero,24(sp)
    309c:	b751                	j	3020 <_dtoa_r+0x21e>
    309e:	4712                	lw	a4,4(sp)
    30a0:	4791                	li	a5,4
    30a2:	00f70e63          	beq	a4,a5,30be <_dtoa_r+0x2bc>
    30a6:	4705                	li	a4,1
    30a8:	c83a                	sw	a4,16(sp)
    30aa:	4712                	lw	a4,4(sp)
    30ac:	4795                	li	a5,5
    30ae:	0af70663          	beq	a4,a5,315a <_dtoa_r+0x358>
    30b2:	57fd                	li	a5,-1
    30b4:	c43e                	sw	a5,8(sp)
    30b6:	5dfd                	li	s11,-1
    30b8:	47c9                	li	a5,18
    30ba:	c602                	sw	zero,12(sp)
    30bc:	a819                	j	30d2 <_dtoa_r+0x2d0>
    30be:	4785                	li	a5,1
    30c0:	c83e                	sw	a5,16(sp)
    30c2:	47b2                	lw	a5,12(sp)
    30c4:	0af04863          	bgtz	a5,3174 <_dtoa_r+0x372>
    30c8:	4785                	li	a5,1
    30ca:	4705                	li	a4,1
    30cc:	c43e                	sw	a5,8(sp)
    30ce:	4d85                	li	s11,1
    30d0:	c63a                	sw	a4,12(sp)
    30d2:	0244a903          	lw	s2,36(s1)
    30d6:	4711                	li	a4,4
    30d8:	00092223          	sw	zero,4(s2)
    30dc:	01470693          	addi	a3,a4,20
    30e0:	00492583          	lw	a1,4(s2)
    30e4:	08d7fc63          	bgeu	a5,a3,317c <_dtoa_r+0x37a>
    30e8:	8526                	mv	a0,s1
    30ea:	6c1000ef          	jal	ra,3faa <_Balloc>
    30ee:	50dc                	lw	a5,36(s1)
    30f0:	00a92023          	sw	a0,0(s2)
    30f4:	439c                	lw	a5,0(a5)
    30f6:	c03e                	sw	a5,0(sp)
    30f8:	47b9                	li	a5,14
    30fa:	1db7e663          	bltu	a5,s11,32c6 <_dtoa_r+0x4c4>
    30fe:	1c0c8463          	beqz	s9,32c6 <_dtoa_r+0x4c4>
    3102:	0a805e63          	blez	s0,31be <_dtoa_r+0x3bc>
    3106:	00f47793          	andi	a5,s0,15
    310a:	00379713          	slli	a4,a5,0x3
    310e:	40445c93          	srai	s9,s0,0x4
    3112:	00004797          	auipc	a5,0x4
    3116:	d4678793          	addi	a5,a5,-698 # 6e58 <__mprec_tens>
    311a:	97ba                	add	a5,a5,a4
    311c:	010cf693          	andi	a3,s9,16
    3120:	4398                	lw	a4,0(a5)
    3122:	4909                	li	s2,2
    3124:	43dc                	lw	a5,4(a5)
    3126:	c685                	beqz	a3,314e <_dtoa_r+0x34c>
    3128:	00004697          	auipc	a3,0x4
    312c:	d0868693          	addi	a3,a3,-760 # 6e30 <__mprec_bigtens>
    3130:	5290                	lw	a2,32(a3)
    3132:	4572                	lw	a0,28(sp)
    3134:	52d4                	lw	a3,36(a3)
    3136:	55a2                	lw	a1,40(sp)
    3138:	d03a                	sw	a4,32(sp)
    313a:	d23e                	sw	a5,36(sp)
    313c:	372020ef          	jal	ra,54ae <__divdf3>
    3140:	5702                	lw	a4,32(sp)
    3142:	5792                	lw	a5,36(sp)
    3144:	00fcfc93          	andi	s9,s9,15
    3148:	8a2a                	mv	s4,a0
    314a:	8c2e                	mv	s8,a1
    314c:	490d                	li	s2,3
    314e:	00004d17          	auipc	s10,0x4
    3152:	ce2d0d13          	addi	s10,s10,-798 # 6e30 <__mprec_bigtens>
    3156:	a889                	j	31a8 <_dtoa_r+0x3a6>
    3158:	c802                	sw	zero,16(sp)
    315a:	47b2                	lw	a5,12(sp)
    315c:	97a2                	add	a5,a5,s0
    315e:	c43e                	sw	a5,8(sp)
    3160:	00178d93          	addi	s11,a5,1
    3164:	87ee                	mv	a5,s11
    3166:	f7b046e3          	bgtz	s11,30d2 <_dtoa_r+0x2d0>
    316a:	4785                	li	a5,1
    316c:	b79d                	j	30d2 <_dtoa_r+0x2d0>
    316e:	4c85                	li	s9,1
    3170:	c202                	sw	zero,4(sp)
    3172:	bde9                	j	304c <_dtoa_r+0x24a>
    3174:	47b2                	lw	a5,12(sp)
    3176:	c43e                	sw	a5,8(sp)
    3178:	8dbe                	mv	s11,a5
    317a:	bfa1                	j	30d2 <_dtoa_r+0x2d0>
    317c:	0585                	addi	a1,a1,1
    317e:	00b92223          	sw	a1,4(s2)
    3182:	0706                	slli	a4,a4,0x1
    3184:	bfa1                	j	30dc <_dtoa_r+0x2da>
    3186:	001cf693          	andi	a3,s9,1
    318a:	ce81                	beqz	a3,31a2 <_dtoa_r+0x3a0>
    318c:	000d2603          	lw	a2,0(s10)
    3190:	004d2683          	lw	a3,4(s10)
    3194:	853a                	mv	a0,a4
    3196:	85be                	mv	a1,a5
    3198:	299020ef          	jal	ra,5c30 <__muldf3>
    319c:	0905                	addi	s2,s2,1
    319e:	872a                	mv	a4,a0
    31a0:	87ae                	mv	a5,a1
    31a2:	401cdc93          	srai	s9,s9,0x1
    31a6:	0d21                	addi	s10,s10,8
    31a8:	fc0c9fe3          	bnez	s9,3186 <_dtoa_r+0x384>
    31ac:	863a                	mv	a2,a4
    31ae:	86be                	mv	a3,a5
    31b0:	8552                	mv	a0,s4
    31b2:	85e2                	mv	a1,s8
    31b4:	2fa020ef          	jal	ra,54ae <__divdf3>
    31b8:	8a2a                	mv	s4,a0
    31ba:	8c2e                	mv	s8,a1
    31bc:	a081                	j	31fc <_dtoa_r+0x3fa>
    31be:	4909                	li	s2,2
    31c0:	cc15                	beqz	s0,31fc <_dtoa_r+0x3fa>
    31c2:	40800cb3          	neg	s9,s0
    31c6:	00fcf793          	andi	a5,s9,15
    31ca:	00379713          	slli	a4,a5,0x3
    31ce:	00004797          	auipc	a5,0x4
    31d2:	c8a78793          	addi	a5,a5,-886 # 6e58 <__mprec_tens>
    31d6:	97ba                	add	a5,a5,a4
    31d8:	4390                	lw	a2,0(a5)
    31da:	43d4                	lw	a3,4(a5)
    31dc:	4572                	lw	a0,28(sp)
    31de:	55a2                	lw	a1,40(sp)
    31e0:	404cdc93          	srai	s9,s9,0x4
    31e4:	00004d17          	auipc	s10,0x4
    31e8:	c4cd0d13          	addi	s10,s10,-948 # 6e30 <__mprec_bigtens>
    31ec:	245020ef          	jal	ra,5c30 <__muldf3>
    31f0:	8a2a                	mv	s4,a0
    31f2:	8c2e                	mv	s8,a1
    31f4:	4781                	li	a5,0
    31f6:	120c9b63          	bnez	s9,332c <_dtoa_r+0x52a>
    31fa:	ffdd                	bnez	a5,31b8 <_dtoa_r+0x3b6>
    31fc:	57b2                	lw	a5,44(sp)
    31fe:	14078663          	beqz	a5,334a <_dtoa_r+0x548>
    3202:	00004717          	auipc	a4,0x4
    3206:	b9670713          	addi	a4,a4,-1130 # 6d98 <_read+0x12e>
    320a:	4310                	lw	a2,0(a4)
    320c:	4354                	lw	a3,4(a4)
    320e:	8552                	mv	a0,s4
    3210:	85e2                	mv	a1,s8
    3212:	d052                	sw	s4,32(sp)
    3214:	167020ef          	jal	ra,5b7a <__ledf2>
    3218:	12055963          	bgez	a0,334a <_dtoa_r+0x548>
    321c:	120d8a63          	beqz	s11,3350 <_dtoa_r+0x54e>
    3220:	47a2                	lw	a5,8(sp)
    3222:	0af05063          	blez	a5,32c2 <_dtoa_r+0x4c0>
    3226:	00004717          	auipc	a4,0x4
    322a:	b7a70713          	addi	a4,a4,-1158 # 6da0 <_read+0x136>
    322e:	5782                	lw	a5,32(sp)
    3230:	4310                	lw	a2,0(a4)
    3232:	4354                	lw	a3,4(a4)
    3234:	853e                	mv	a0,a5
    3236:	85e2                	mv	a1,s8
    3238:	1f9020ef          	jal	ra,5c30 <__muldf3>
    323c:	47a2                	lw	a5,8(sp)
    323e:	fff40d13          	addi	s10,s0,-1
    3242:	8a2a                	mv	s4,a0
    3244:	8c2e                	mv	s8,a1
    3246:	0905                	addi	s2,s2,1
    3248:	8762                	mv	a4,s8
    324a:	854a                	mv	a0,s2
    324c:	de3e                	sw	a5,60(sp)
    324e:	da52                	sw	s4,52(sp)
    3250:	8cba                	mv	s9,a4
    3252:	d03a                	sw	a4,32(sp)
    3254:	674030ef          	jal	ra,68c8 <__floatsidf>
    3258:	5852                	lw	a6,52(sp)
    325a:	5702                	lw	a4,32(sp)
    325c:	fcc00937          	lui	s2,0xfcc00
    3260:	8642                	mv	a2,a6
    3262:	86ba                	mv	a3,a4
    3264:	1cd020ef          	jal	ra,5c30 <__muldf3>
    3268:	00004697          	auipc	a3,0x4
    326c:	b4068693          	addi	a3,a3,-1216 # 6da8 <_read+0x13e>
    3270:	4290                	lw	a2,0(a3)
    3272:	42d4                	lw	a3,4(a3)
    3274:	8c52                	mv	s8,s4
    3276:	309010ef          	jal	ra,4d7e <__adddf3>
    327a:	57f2                	lw	a5,60(sp)
    327c:	8a2a                	mv	s4,a0
    327e:	992e                	add	s2,s2,a1
    3280:	ebf9                	bnez	a5,3356 <_dtoa_r+0x554>
    3282:	00004797          	auipc	a5,0x4
    3286:	b2e78793          	addi	a5,a5,-1234 # 6db0 <_read+0x146>
    328a:	5852                	lw	a6,52(sp)
    328c:	5702                	lw	a4,32(sp)
    328e:	4390                	lw	a2,0(a5)
    3290:	43d4                	lw	a3,4(a5)
    3292:	8542                	mv	a0,a6
    3294:	85ba                	mv	a1,a4
    3296:	653020ef          	jal	ra,60e8 <__subdf3>
    329a:	8652                	mv	a2,s4
    329c:	86ca                	mv	a3,s2
    329e:	8c2a                	mv	s8,a0
    32a0:	8cae                	mv	s9,a1
    32a2:	02b020ef          	jal	ra,5acc <__gedf2>
    32a6:	54a04663          	bgtz	a0,37f2 <_dtoa_r+0x9f0>
    32aa:	800007b7          	lui	a5,0x80000
    32ae:	0127c7b3          	xor	a5,a5,s2
    32b2:	8652                	mv	a2,s4
    32b4:	86be                	mv	a3,a5
    32b6:	8562                	mv	a0,s8
    32b8:	85e6                	mv	a1,s9
    32ba:	0c1020ef          	jal	ra,5b7a <__ledf2>
    32be:	52054763          	bltz	a0,37ec <_dtoa_r+0x9ea>
    32c2:	4a72                	lw	s4,28(sp)
    32c4:	5c22                	lw	s8,40(sp)
    32c6:	47b6                	lw	a5,76(sp)
    32c8:	3007c363          	bltz	a5,35ce <_dtoa_r+0x7cc>
    32cc:	4739                	li	a4,14
    32ce:	30874063          	blt	a4,s0,35ce <_dtoa_r+0x7cc>
    32d2:	00341713          	slli	a4,s0,0x3
    32d6:	00004797          	auipc	a5,0x4
    32da:	b8278793          	addi	a5,a5,-1150 # 6e58 <__mprec_tens>
    32de:	97ba                	add	a5,a5,a4
    32e0:	0007ab03          	lw	s6,0(a5)
    32e4:	0047ab83          	lw	s7,4(a5)
    32e8:	47b2                	lw	a5,12(sp)
    32ea:	2007d163          	bgez	a5,34ec <_dtoa_r+0x6ea>
    32ee:	1fb04f63          	bgtz	s11,34ec <_dtoa_r+0x6ea>
    32f2:	4e0d9d63          	bnez	s11,37ec <_dtoa_r+0x9ea>
    32f6:	00004797          	auipc	a5,0x4
    32fa:	aba78793          	addi	a5,a5,-1350 # 6db0 <_read+0x146>
    32fe:	4390                	lw	a2,0(a5)
    3300:	43d4                	lw	a3,4(a5)
    3302:	855a                	mv	a0,s6
    3304:	85de                	mv	a1,s7
    3306:	12b020ef          	jal	ra,5c30 <__muldf3>
    330a:	8652                	mv	a2,s4
    330c:	86e2                	mv	a3,s8
    330e:	7be020ef          	jal	ra,5acc <__gedf2>
    3312:	4a81                	li	s5,0
    3314:	4901                	li	s2,0
    3316:	4a055363          	bgez	a0,37bc <_dtoa_r+0x9ba>
    331a:	4782                	lw	a5,0(sp)
    331c:	4702                	lw	a4,0(sp)
    331e:	0405                	addi	s0,s0,1
    3320:	00178a13          	addi	s4,a5,1
    3324:	03100793          	li	a5,49
    3328:	a31c                	sb	a5,0(a4)
    332a:	a969                	j	37c4 <_dtoa_r+0x9c2>
    332c:	001cf713          	andi	a4,s9,1
    3330:	cb09                	beqz	a4,3342 <_dtoa_r+0x540>
    3332:	000d2603          	lw	a2,0(s10)
    3336:	004d2683          	lw	a3,4(s10)
    333a:	0905                	addi	s2,s2,1
    333c:	0f5020ef          	jal	ra,5c30 <__muldf3>
    3340:	4785                	li	a5,1
    3342:	401cdc93          	srai	s9,s9,0x1
    3346:	0d21                	addi	s10,s10,8
    3348:	b57d                	j	31f6 <_dtoa_r+0x3f4>
    334a:	8d22                	mv	s10,s0
    334c:	87ee                	mv	a5,s11
    334e:	bded                	j	3248 <_dtoa_r+0x446>
    3350:	8d22                	mv	s10,s0
    3352:	4781                	li	a5,0
    3354:	bdd5                	j	3248 <_dtoa_r+0x446>
    3356:	fff78693          	addi	a3,a5,-1
    335a:	00369613          	slli	a2,a3,0x3
    335e:	00004697          	auipc	a3,0x4
    3362:	afa68693          	addi	a3,a3,-1286 # 6e58 <__mprec_tens>
    3366:	96b2                	add	a3,a3,a2
    3368:	4288                	lw	a0,0(a3)
    336a:	42cc                	lw	a1,4(a3)
    336c:	4682                	lw	a3,0(sp)
    336e:	97b6                	add	a5,a5,a3
    3370:	da3e                	sw	a5,52(sp)
    3372:	47c2                	lw	a5,16(sp)
    3374:	c3e9                	beqz	a5,3436 <_dtoa_r+0x634>
    3376:	00004797          	auipc	a5,0x4
    337a:	a4278793          	addi	a5,a5,-1470 # 6db8 <_read+0x14e>
    337e:	862a                	mv	a2,a0
    3380:	86ae                	mv	a3,a1
    3382:	4388                	lw	a0,0(a5)
    3384:	43cc                	lw	a1,4(a5)
    3386:	de4a                	sw	s2,60(sp)
    3388:	d052                	sw	s4,32(sp)
    338a:	124020ef          	jal	ra,54ae <__divdf3>
    338e:	5802                	lw	a6,32(sp)
    3390:	5772                	lw	a4,60(sp)
    3392:	00004917          	auipc	s2,0x4
    3396:	a0e90913          	addi	s2,s2,-1522 # 6da0 <_read+0x136>
    339a:	8642                	mv	a2,a6
    339c:	86ba                	mv	a3,a4
    339e:	54b020ef          	jal	ra,60e8 <__subdf3>
    33a2:	4a02                	lw	s4,0(sp)
    33a4:	d02a                	sw	a0,32(sp)
    33a6:	d22e                	sw	a1,36(sp)
    33a8:	85e6                	mv	a1,s9
    33aa:	8562                	mv	a0,s8
    33ac:	4b4030ef          	jal	ra,6860 <__fixdfsi>
    33b0:	de2a                	sw	a0,60(sp)
    33b2:	516030ef          	jal	ra,68c8 <__floatsidf>
    33b6:	862a                	mv	a2,a0
    33b8:	86ae                	mv	a3,a1
    33ba:	8562                	mv	a0,s8
    33bc:	85e6                	mv	a1,s9
    33be:	52b020ef          	jal	ra,60e8 <__subdf3>
    33c2:	57f2                	lw	a5,60(sp)
    33c4:	8c2a                	mv	s8,a0
    33c6:	8cae                	mv	s9,a1
    33c8:	862a                	mv	a2,a0
    33ca:	86ae                	mv	a3,a1
    33cc:	5502                	lw	a0,32(sp)
    33ce:	5592                	lw	a1,36(sp)
    33d0:	0a05                	addi	s4,s4,1
    33d2:	03078793          	addi	a5,a5,48
    33d6:	fefa0fa3          	sb	a5,-1(s4)
    33da:	6f2020ef          	jal	ra,5acc <__gedf2>
    33de:	0ea04863          	bgtz	a0,34ce <_dtoa_r+0x6cc>
    33e2:	00004797          	auipc	a5,0x4
    33e6:	9b678793          	addi	a5,a5,-1610 # 6d98 <_read+0x12e>
    33ea:	4388                	lw	a0,0(a5)
    33ec:	43cc                	lw	a1,4(a5)
    33ee:	8662                	mv	a2,s8
    33f0:	86e6                	mv	a3,s9
    33f2:	4f7020ef          	jal	ra,60e8 <__subdf3>
    33f6:	862a                	mv	a2,a0
    33f8:	86ae                	mv	a3,a1
    33fa:	5502                	lw	a0,32(sp)
    33fc:	5592                	lw	a1,36(sp)
    33fe:	6ce020ef          	jal	ra,5acc <__gedf2>
    3402:	18a04263          	bgtz	a0,3586 <_dtoa_r+0x784>
    3406:	57d2                	lw	a5,52(sp)
    3408:	eafa0de3          	beq	s4,a5,32c2 <_dtoa_r+0x4c0>
    340c:	00092603          	lw	a2,0(s2)
    3410:	00492683          	lw	a3,4(s2)
    3414:	5502                	lw	a0,32(sp)
    3416:	5592                	lw	a1,36(sp)
    3418:	019020ef          	jal	ra,5c30 <__muldf3>
    341c:	00092603          	lw	a2,0(s2)
    3420:	00492683          	lw	a3,4(s2)
    3424:	d02a                	sw	a0,32(sp)
    3426:	d22e                	sw	a1,36(sp)
    3428:	8562                	mv	a0,s8
    342a:	85e6                	mv	a1,s9
    342c:	005020ef          	jal	ra,5c30 <__muldf3>
    3430:	8c2a                	mv	s8,a0
    3432:	8cae                	mv	s9,a1
    3434:	bf95                	j	33a8 <_dtoa_r+0x5a6>
    3436:	8652                	mv	a2,s4
    3438:	86ca                	mv	a3,s2
    343a:	7f6020ef          	jal	ra,5c30 <__muldf3>
    343e:	5a52                	lw	s4,52(sp)
    3440:	4902                	lw	s2,0(sp)
    3442:	d02a                	sw	a0,32(sp)
    3444:	d22e                	sw	a1,36(sp)
    3446:	85e6                	mv	a1,s9
    3448:	8562                	mv	a0,s8
    344a:	416030ef          	jal	ra,6860 <__fixdfsi>
    344e:	de2a                	sw	a0,60(sp)
    3450:	478030ef          	jal	ra,68c8 <__floatsidf>
    3454:	862a                	mv	a2,a0
    3456:	86ae                	mv	a3,a1
    3458:	8562                	mv	a0,s8
    345a:	85e6                	mv	a1,s9
    345c:	48d020ef          	jal	ra,60e8 <__subdf3>
    3460:	5772                	lw	a4,60(sp)
    3462:	57d2                	lw	a5,52(sp)
    3464:	0905                	addi	s2,s2,1
    3466:	03070713          	addi	a4,a4,48
    346a:	fee90fa3          	sb	a4,-1(s2)
    346e:	8c2a                	mv	s8,a0
    3470:	8cae                	mv	s9,a1
    3472:	06f91263          	bne	s2,a5,34d6 <_dtoa_r+0x6d4>
    3476:	00004917          	auipc	s2,0x4
    347a:	94290913          	addi	s2,s2,-1726 # 6db8 <_read+0x14e>
    347e:	00092603          	lw	a2,0(s2)
    3482:	00492683          	lw	a3,4(s2)
    3486:	5502                	lw	a0,32(sp)
    3488:	5592                	lw	a1,36(sp)
    348a:	0f5010ef          	jal	ra,4d7e <__adddf3>
    348e:	862a                	mv	a2,a0
    3490:	86ae                	mv	a3,a1
    3492:	8562                	mv	a0,s8
    3494:	85e6                	mv	a1,s9
    3496:	636020ef          	jal	ra,5acc <__gedf2>
    349a:	0ea04663          	bgtz	a0,3586 <_dtoa_r+0x784>
    349e:	5602                	lw	a2,32(sp)
    34a0:	5692                	lw	a3,36(sp)
    34a2:	00092503          	lw	a0,0(s2)
    34a6:	00492583          	lw	a1,4(s2)
    34aa:	43f020ef          	jal	ra,60e8 <__subdf3>
    34ae:	862a                	mv	a2,a0
    34b0:	86ae                	mv	a3,a1
    34b2:	8562                	mv	a0,s8
    34b4:	85e6                	mv	a1,s9
    34b6:	6c4020ef          	jal	ra,5b7a <__ledf2>
    34ba:	03000793          	li	a5,48
    34be:	e00552e3          	bgez	a0,32c2 <_dtoa_r+0x4c0>
    34c2:	fffa4703          	lbu	a4,-1(s4)
    34c6:	fffa0693          	addi	a3,s4,-1
    34ca:	00f70463          	beq	a4,a5,34d2 <_dtoa_r+0x6d0>
    34ce:	846a                	mv	s0,s10
    34d0:	a859                	j	3566 <_dtoa_r+0x764>
    34d2:	8a36                	mv	s4,a3
    34d4:	b7fd                	j	34c2 <_dtoa_r+0x6c0>
    34d6:	00004797          	auipc	a5,0x4
    34da:	8ca78793          	addi	a5,a5,-1846 # 6da0 <_read+0x136>
    34de:	4390                	lw	a2,0(a5)
    34e0:	43d4                	lw	a3,4(a5)
    34e2:	74e020ef          	jal	ra,5c30 <__muldf3>
    34e6:	8c2a                	mv	s8,a0
    34e8:	8cae                	mv	s9,a1
    34ea:	bfb1                	j	3446 <_dtoa_r+0x644>
    34ec:	87e2                	mv	a5,s8
    34ee:	8cbe                	mv	s9,a5
    34f0:	4782                	lw	a5,0(sp)
    34f2:	8c52                	mv	s8,s4
    34f4:	00004a97          	auipc	s5,0x4
    34f8:	8aca8a93          	addi	s5,s5,-1876 # 6da0 <_read+0x136>
    34fc:	00178913          	addi	s2,a5,1
    3500:	9dbe                	add	s11,s11,a5
    3502:	865a                	mv	a2,s6
    3504:	86de                	mv	a3,s7
    3506:	8562                	mv	a0,s8
    3508:	85e6                	mv	a1,s9
    350a:	7a5010ef          	jal	ra,54ae <__divdf3>
    350e:	352030ef          	jal	ra,6860 <__fixdfsi>
    3512:	8d2a                	mv	s10,a0
    3514:	3b4030ef          	jal	ra,68c8 <__floatsidf>
    3518:	865a                	mv	a2,s6
    351a:	86de                	mv	a3,s7
    351c:	714020ef          	jal	ra,5c30 <__muldf3>
    3520:	862a                	mv	a2,a0
    3522:	86ae                	mv	a3,a1
    3524:	8562                	mv	a0,s8
    3526:	85e6                	mv	a1,s9
    3528:	3c1020ef          	jal	ra,60e8 <__subdf3>
    352c:	030d0793          	addi	a5,s10,48
    3530:	fef90fa3          	sb	a5,-1(s2)
    3534:	862a                	mv	a2,a0
    3536:	86ae                	mv	a3,a1
    3538:	8a4a                	mv	s4,s2
    353a:	072d9b63          	bne	s11,s2,35b0 <_dtoa_r+0x7ae>
    353e:	041010ef          	jal	ra,4d7e <__adddf3>
    3542:	865a                	mv	a2,s6
    3544:	86de                	mv	a3,s7
    3546:	8c2a                	mv	s8,a0
    3548:	8cae                	mv	s9,a1
    354a:	582020ef          	jal	ra,5acc <__gedf2>
    354e:	02a04b63          	bgtz	a0,3584 <_dtoa_r+0x782>
    3552:	865a                	mv	a2,s6
    3554:	86de                	mv	a3,s7
    3556:	8562                	mv	a0,s8
    3558:	85e6                	mv	a1,s9
    355a:	508020ef          	jal	ra,5a62 <__eqdf2>
    355e:	e501                	bnez	a0,3566 <_dtoa_r+0x764>
    3560:	001d7793          	andi	a5,s10,1
    3564:	e385                	bnez	a5,3584 <_dtoa_r+0x782>
    3566:	85ce                	mv	a1,s3
    3568:	8526                	mv	a0,s1
    356a:	2c7000ef          	jal	ra,4030 <_Bfree>
    356e:	57c2                	lw	a5,48(sp)
    3570:	000a0023          	sb	zero,0(s4)
    3574:	0405                	addi	s0,s0,1
    3576:	c380                	sw	s0,0(a5)
    3578:	47d2                	lw	a5,20(sp)
    357a:	94078ae3          	beqz	a5,2ece <_dtoa_r+0xcc>
    357e:	0147a023          	sw	s4,0(a5)
    3582:	b2b1                	j	2ece <_dtoa_r+0xcc>
    3584:	8d22                	mv	s10,s0
    3586:	03900713          	li	a4,57
    358a:	fffa4683          	lbu	a3,-1(s4)
    358e:	fffa0793          	addi	a5,s4,-1
    3592:	00e69963          	bne	a3,a4,35a4 <_dtoa_r+0x7a2>
    3596:	4682                	lw	a3,0(sp)
    3598:	00f69a63          	bne	a3,a5,35ac <_dtoa_r+0x7aa>
    359c:	03000713          	li	a4,48
    35a0:	0d05                	addi	s10,s10,1
    35a2:	a298                	sb	a4,0(a3)
    35a4:	2398                	lbu	a4,0(a5)
    35a6:	0705                	addi	a4,a4,1
    35a8:	a398                	sb	a4,0(a5)
    35aa:	b715                	j	34ce <_dtoa_r+0x6cc>
    35ac:	8a3e                	mv	s4,a5
    35ae:	bff1                	j	358a <_dtoa_r+0x788>
    35b0:	000aa603          	lw	a2,0(s5)
    35b4:	004aa683          	lw	a3,4(s5)
    35b8:	0905                	addi	s2,s2,1
    35ba:	676020ef          	jal	ra,5c30 <__muldf3>
    35be:	4601                	li	a2,0
    35c0:	4681                	li	a3,0
    35c2:	8c2a                	mv	s8,a0
    35c4:	8cae                	mv	s9,a1
    35c6:	49c020ef          	jal	ra,5a62 <__eqdf2>
    35ca:	fd05                	bnez	a0,3502 <_dtoa_r+0x700>
    35cc:	bf69                	j	3566 <_dtoa_r+0x764>
    35ce:	4742                	lw	a4,16(sp)
    35d0:	10070063          	beqz	a4,36d0 <_dtoa_r+0x8ce>
    35d4:	4692                	lw	a3,4(sp)
    35d6:	4705                	li	a4,1
    35d8:	0cd74563          	blt	a4,a3,36a2 <_dtoa_r+0x8a0>
    35dc:	5762                	lw	a4,56(sp)
    35de:	43378793          	addi	a5,a5,1075
    35e2:	e709                	bnez	a4,35ec <_dtoa_r+0x7ea>
    35e4:	4726                	lw	a4,72(sp)
    35e6:	03600793          	li	a5,54
    35ea:	8f99                	sub	a5,a5,a4
    35ec:	8d56                	mv	s10,s5
    35ee:	8cda                	mv	s9,s6
    35f0:	4585                	li	a1,1
    35f2:	8526                	mv	a0,s1
    35f4:	9b3e                	add	s6,s6,a5
    35f6:	9bbe                	add	s7,s7,a5
    35f8:	3bd000ef          	jal	ra,41b4 <__i2b>
    35fc:	892a                	mv	s2,a0
    35fe:	01905e63          	blez	s9,361a <_dtoa_r+0x818>
    3602:	01705c63          	blez	s7,361a <_dtoa_r+0x818>
    3606:	87e6                	mv	a5,s9
    3608:	019bd363          	bge	s7,s9,360e <_dtoa_r+0x80c>
    360c:	87de                	mv	a5,s7
    360e:	40fb0b33          	sub	s6,s6,a5
    3612:	40fc8cb3          	sub	s9,s9,a5
    3616:	40fb8bb3          	sub	s7,s7,a5
    361a:	040a8063          	beqz	s5,365a <_dtoa_r+0x858>
    361e:	47c2                	lw	a5,16(sp)
    3620:	cfc5                	beqz	a5,36d8 <_dtoa_r+0x8d6>
    3622:	03a05463          	blez	s10,364a <_dtoa_r+0x848>
    3626:	85ca                	mv	a1,s2
    3628:	866a                	mv	a2,s10
    362a:	8526                	mv	a0,s1
    362c:	4e5000ef          	jal	ra,4310 <__pow5mult>
    3630:	864e                	mv	a2,s3
    3632:	85aa                	mv	a1,a0
    3634:	892a                	mv	s2,a0
    3636:	8526                	mv	a0,s1
    3638:	397000ef          	jal	ra,41ce <__multiply>
    363c:	ce2a                	sw	a0,28(sp)
    363e:	85ce                	mv	a1,s3
    3640:	8526                	mv	a0,s1
    3642:	1ef000ef          	jal	ra,4030 <_Bfree>
    3646:	47f2                	lw	a5,28(sp)
    3648:	89be                	mv	s3,a5
    364a:	41aa8633          	sub	a2,s5,s10
    364e:	c611                	beqz	a2,365a <_dtoa_r+0x858>
    3650:	85ce                	mv	a1,s3
    3652:	8526                	mv	a0,s1
    3654:	4bd000ef          	jal	ra,4310 <__pow5mult>
    3658:	89aa                	mv	s3,a0
    365a:	4585                	li	a1,1
    365c:	8526                	mv	a0,s1
    365e:	357000ef          	jal	ra,41b4 <__i2b>
    3662:	47e2                	lw	a5,24(sp)
    3664:	8aaa                	mv	s5,a0
    3666:	06f05b63          	blez	a5,36dc <_dtoa_r+0x8da>
    366a:	863e                	mv	a2,a5
    366c:	85aa                	mv	a1,a0
    366e:	8526                	mv	a0,s1
    3670:	4a1000ef          	jal	ra,4310 <__pow5mult>
    3674:	4712                	lw	a4,4(sp)
    3676:	4785                	li	a5,1
    3678:	8aaa                	mv	s5,a0
    367a:	4d01                	li	s10,0
    367c:	06e7c863          	blt	a5,a4,36ec <_dtoa_r+0x8ea>
    3680:	4d01                	li	s10,0
    3682:	060a1263          	bnez	s4,36e6 <_dtoa_r+0x8e4>
    3686:	00cc1793          	slli	a5,s8,0xc
    368a:	8d52                	mv	s10,s4
    368c:	efa9                	bnez	a5,36e6 <_dtoa_r+0x8e4>
    368e:	7ff005b7          	lui	a1,0x7ff00
    3692:	00bc7c33          	and	s8,s8,a1
    3696:	040c0863          	beqz	s8,36e6 <_dtoa_r+0x8e4>
    369a:	0b05                	addi	s6,s6,1
    369c:	0b85                	addi	s7,s7,1
    369e:	4d05                	li	s10,1
    36a0:	a099                	j	36e6 <_dtoa_r+0x8e4>
    36a2:	fffd8d13          	addi	s10,s11,-1
    36a6:	01aaca63          	blt	s5,s10,36ba <_dtoa_r+0x8b8>
    36aa:	41aa8d33          	sub	s10,s5,s10
    36ae:	000dde63          	bgez	s11,36ca <_dtoa_r+0x8c8>
    36b2:	41bb0cb3          	sub	s9,s6,s11
    36b6:	4781                	li	a5,0
    36b8:	bf25                	j	35f0 <_dtoa_r+0x7ee>
    36ba:	47e2                	lw	a5,24(sp)
    36bc:	415d0ab3          	sub	s5,s10,s5
    36c0:	97d6                	add	a5,a5,s5
    36c2:	cc3e                	sw	a5,24(sp)
    36c4:	8aea                	mv	s5,s10
    36c6:	4d01                	li	s10,0
    36c8:	b7dd                	j	36ae <_dtoa_r+0x8ac>
    36ca:	8cda                	mv	s9,s6
    36cc:	87ee                	mv	a5,s11
    36ce:	b70d                	j	35f0 <_dtoa_r+0x7ee>
    36d0:	8d56                	mv	s10,s5
    36d2:	8cda                	mv	s9,s6
    36d4:	4901                	li	s2,0
    36d6:	b725                	j	35fe <_dtoa_r+0x7fc>
    36d8:	8656                	mv	a2,s5
    36da:	bf9d                	j	3650 <_dtoa_r+0x84e>
    36dc:	4712                	lw	a4,4(sp)
    36de:	4785                	li	a5,1
    36e0:	4d01                	li	s10,0
    36e2:	f8e7dfe3          	bge	a5,a4,3680 <_dtoa_r+0x87e>
    36e6:	47e2                	lw	a5,24(sp)
    36e8:	4505                	li	a0,1
    36ea:	cf89                	beqz	a5,3704 <_dtoa_r+0x902>
    36ec:	010aa783          	lw	a5,16(s5)
    36f0:	078d                	addi	a5,a5,3
    36f2:	078a                	slli	a5,a5,0x2
    36f4:	97d6                	add	a5,a5,s5
    36f6:	43c8                	lw	a0,4(a5)
    36f8:	20d000ef          	jal	ra,4104 <__hi0bits>
    36fc:	02000793          	li	a5,32
    3700:	40a78533          	sub	a0,a5,a0
    3704:	955e                	add	a0,a0,s7
    3706:	897d                	andi	a0,a0,31
    3708:	c151                	beqz	a0,378c <_dtoa_r+0x98a>
    370a:	02000793          	li	a5,32
    370e:	8f89                	sub	a5,a5,a0
    3710:	4711                	li	a4,4
    3712:	06f75a63          	bge	a4,a5,3786 <_dtoa_r+0x984>
    3716:	47f1                	li	a5,28
    3718:	40a78533          	sub	a0,a5,a0
    371c:	9b2a                	add	s6,s6,a0
    371e:	9caa                	add	s9,s9,a0
    3720:	9baa                	add	s7,s7,a0
    3722:	01605863          	blez	s6,3732 <_dtoa_r+0x930>
    3726:	85ce                	mv	a1,s3
    3728:	865a                	mv	a2,s6
    372a:	8526                	mv	a0,s1
    372c:	49b000ef          	jal	ra,43c6 <__lshift>
    3730:	89aa                	mv	s3,a0
    3732:	01705863          	blez	s7,3742 <_dtoa_r+0x940>
    3736:	85d6                	mv	a1,s5
    3738:	865e                	mv	a2,s7
    373a:	8526                	mv	a0,s1
    373c:	48b000ef          	jal	ra,43c6 <__lshift>
    3740:	8aaa                	mv	s5,a0
    3742:	57b2                	lw	a5,44(sp)
    3744:	c7b1                	beqz	a5,3790 <_dtoa_r+0x98e>
    3746:	85d6                	mv	a1,s5
    3748:	854e                	mv	a0,s3
    374a:	54b000ef          	jal	ra,4494 <__mcmp>
    374e:	04055163          	bgez	a0,3790 <_dtoa_r+0x98e>
    3752:	85ce                	mv	a1,s3
    3754:	4681                	li	a3,0
    3756:	4629                	li	a2,10
    3758:	8526                	mv	a0,s1
    375a:	119000ef          	jal	ra,4072 <__multadd>
    375e:	47c2                	lw	a5,16(sp)
    3760:	147d                	addi	s0,s0,-1
    3762:	89aa                	mv	s3,a0
    3764:	26078b63          	beqz	a5,39da <_dtoa_r+0xbd8>
    3768:	85ca                	mv	a1,s2
    376a:	4681                	li	a3,0
    376c:	4629                	li	a2,10
    376e:	8526                	mv	a0,s1
    3770:	103000ef          	jal	ra,4072 <__multadd>
    3774:	47a2                	lw	a5,8(sp)
    3776:	892a                	mv	s2,a0
    3778:	08f04563          	bgtz	a5,3802 <_dtoa_r+0xa00>
    377c:	4712                	lw	a4,4(sp)
    377e:	4789                	li	a5,2
    3780:	08e7d163          	bge	a5,a4,3802 <_dtoa_r+0xa00>
    3784:	a829                	j	379e <_dtoa_r+0x99c>
    3786:	f8e78ee3          	beq	a5,a4,3722 <_dtoa_r+0x920>
    378a:	853e                	mv	a0,a5
    378c:	0571                	addi	a0,a0,28
    378e:	b779                	j	371c <_dtoa_r+0x91a>
    3790:	07b04563          	bgtz	s11,37fa <_dtoa_r+0x9f8>
    3794:	4712                	lw	a4,4(sp)
    3796:	4789                	li	a5,2
    3798:	06e7d163          	bge	a5,a4,37fa <_dtoa_r+0x9f8>
    379c:	c46e                	sw	s11,8(sp)
    379e:	47a2                	lw	a5,8(sp)
    37a0:	ef91                	bnez	a5,37bc <_dtoa_r+0x9ba>
    37a2:	85d6                	mv	a1,s5
    37a4:	4681                	li	a3,0
    37a6:	4615                	li	a2,5
    37a8:	8526                	mv	a0,s1
    37aa:	0c9000ef          	jal	ra,4072 <__multadd>
    37ae:	8aaa                	mv	s5,a0
    37b0:	85aa                	mv	a1,a0
    37b2:	854e                	mv	a0,s3
    37b4:	4e1000ef          	jal	ra,4494 <__mcmp>
    37b8:	b6a041e3          	bgtz	a0,331a <_dtoa_r+0x518>
    37bc:	47b2                	lw	a5,12(sp)
    37be:	4a02                	lw	s4,0(sp)
    37c0:	fff7c413          	not	s0,a5
    37c4:	4b01                	li	s6,0
    37c6:	85d6                	mv	a1,s5
    37c8:	8526                	mv	a0,s1
    37ca:	067000ef          	jal	ra,4030 <_Bfree>
    37ce:	d8090ce3          	beqz	s2,3566 <_dtoa_r+0x764>
    37d2:	000b0863          	beqz	s6,37e2 <_dtoa_r+0x9e0>
    37d6:	012b0663          	beq	s6,s2,37e2 <_dtoa_r+0x9e0>
    37da:	85da                	mv	a1,s6
    37dc:	8526                	mv	a0,s1
    37de:	053000ef          	jal	ra,4030 <_Bfree>
    37e2:	85ca                	mv	a1,s2
    37e4:	8526                	mv	a0,s1
    37e6:	04b000ef          	jal	ra,4030 <_Bfree>
    37ea:	bbb5                	j	3566 <_dtoa_r+0x764>
    37ec:	4a81                	li	s5,0
    37ee:	4901                	li	s2,0
    37f0:	b7f1                	j	37bc <_dtoa_r+0x9ba>
    37f2:	846a                	mv	s0,s10
    37f4:	4a81                	li	s5,0
    37f6:	4901                	li	s2,0
    37f8:	b60d                	j	331a <_dtoa_r+0x518>
    37fa:	47c2                	lw	a5,16(sp)
    37fc:	c46e                	sw	s11,8(sp)
    37fe:	1e078563          	beqz	a5,39e8 <_dtoa_r+0xbe6>
    3802:	01905863          	blez	s9,3812 <_dtoa_r+0xa10>
    3806:	85ca                	mv	a1,s2
    3808:	8666                	mv	a2,s9
    380a:	8526                	mv	a0,s1
    380c:	3bb000ef          	jal	ra,43c6 <__lshift>
    3810:	892a                	mv	s2,a0
    3812:	854a                	mv	a0,s2
    3814:	020d0663          	beqz	s10,3840 <_dtoa_r+0xa3e>
    3818:	00492583          	lw	a1,4(s2)
    381c:	8526                	mv	a0,s1
    381e:	78c000ef          	jal	ra,3faa <_Balloc>
    3822:	01092603          	lw	a2,16(s2)
    3826:	8b2a                	mv	s6,a0
    3828:	00c90593          	addi	a1,s2,12
    382c:	0609                	addi	a2,a2,2
    382e:	060a                	slli	a2,a2,0x2
    3830:	0531                	addi	a0,a0,12
    3832:	6c6000ef          	jal	ra,3ef8 <memcpy>
    3836:	4605                	li	a2,1
    3838:	85da                	mv	a1,s6
    383a:	8526                	mv	a0,s1
    383c:	38b000ef          	jal	ra,43c6 <__lshift>
    3840:	4782                	lw	a5,0(sp)
    3842:	4722                	lw	a4,8(sp)
    3844:	8b4a                	mv	s6,s2
    3846:	00178c13          	addi	s8,a5,1
    384a:	97ba                	add	a5,a5,a4
    384c:	c63e                	sw	a5,12(sp)
    384e:	001a7793          	andi	a5,s4,1
    3852:	892a                	mv	s2,a0
    3854:	c43e                	sw	a5,8(sp)
    3856:	85d6                	mv	a1,s5
    3858:	854e                	mv	a0,s3
    385a:	c6eff0ef          	jal	ra,2cc8 <quorem>
    385e:	85da                	mv	a1,s6
    3860:	8d2a                	mv	s10,a0
    3862:	03050d93          	addi	s11,a0,48
    3866:	854e                	mv	a0,s3
    3868:	42d000ef          	jal	ra,4494 <__mcmp>
    386c:	864a                	mv	a2,s2
    386e:	8baa                	mv	s7,a0
    3870:	85d6                	mv	a1,s5
    3872:	8526                	mv	a0,s1
    3874:	453000ef          	jal	ra,44c6 <__mdiff>
    3878:	4550                	lw	a2,12(a0)
    387a:	fffc0c93          	addi	s9,s8,-1
    387e:	8a2a                	mv	s4,a0
    3880:	4705                	li	a4,1
    3882:	e611                	bnez	a2,388e <_dtoa_r+0xa8c>
    3884:	85aa                	mv	a1,a0
    3886:	854e                	mv	a0,s3
    3888:	40d000ef          	jal	ra,4494 <__mcmp>
    388c:	872a                	mv	a4,a0
    388e:	85d2                	mv	a1,s4
    3890:	8526                	mv	a0,s1
    3892:	c83a                	sw	a4,16(sp)
    3894:	79c000ef          	jal	ra,4030 <_Bfree>
    3898:	4792                	lw	a5,4(sp)
    389a:	4742                	lw	a4,16(sp)
    389c:	8a62                	mv	s4,s8
    389e:	00e7e6b3          	or	a3,a5,a4
    38a2:	47a2                	lw	a5,8(sp)
    38a4:	8edd                	or	a3,a3,a5
    38a6:	ee81                	bnez	a3,38be <_dtoa_r+0xabc>
    38a8:	03900713          	li	a4,57
    38ac:	04ed8863          	beq	s11,a4,38fc <_dtoa_r+0xafa>
    38b0:	01705463          	blez	s7,38b8 <_dtoa_r+0xab6>
    38b4:	031d0d93          	addi	s11,s10,49
    38b8:	01bc8023          	sb	s11,0(s9)
    38bc:	b729                	j	37c6 <_dtoa_r+0x9c4>
    38be:	000bca63          	bltz	s7,38d2 <_dtoa_r+0xad0>
    38c2:	4792                	lw	a5,4(sp)
    38c4:	0177ebb3          	or	s7,a5,s7
    38c8:	47a2                	lw	a5,8(sp)
    38ca:	00fbebb3          	or	s7,s7,a5
    38ce:	040b9563          	bnez	s7,3918 <_dtoa_r+0xb16>
    38d2:	fee053e3          	blez	a4,38b8 <_dtoa_r+0xab6>
    38d6:	85ce                	mv	a1,s3
    38d8:	4605                	li	a2,1
    38da:	8526                	mv	a0,s1
    38dc:	2eb000ef          	jal	ra,43c6 <__lshift>
    38e0:	85d6                	mv	a1,s5
    38e2:	89aa                	mv	s3,a0
    38e4:	3b1000ef          	jal	ra,4494 <__mcmp>
    38e8:	00a04663          	bgtz	a0,38f4 <_dtoa_r+0xaf2>
    38ec:	f571                	bnez	a0,38b8 <_dtoa_r+0xab6>
    38ee:	001df713          	andi	a4,s11,1
    38f2:	d379                	beqz	a4,38b8 <_dtoa_r+0xab6>
    38f4:	03900713          	li	a4,57
    38f8:	faed9ee3          	bne	s11,a4,38b4 <_dtoa_r+0xab2>
    38fc:	03900793          	li	a5,57
    3900:	00fc8023          	sb	a5,0(s9)
    3904:	03900693          	li	a3,57
    3908:	fffa4783          	lbu	a5,-1(s4)
    390c:	fffa0713          	addi	a4,s4,-1
    3910:	08d78c63          	beq	a5,a3,39a8 <_dtoa_r+0xba6>
    3914:	0785                	addi	a5,a5,1
    3916:	a045                	j	39b6 <_dtoa_r+0xbb4>
    3918:	00e05b63          	blez	a4,392e <_dtoa_r+0xb2c>
    391c:	03900713          	li	a4,57
    3920:	fced8ee3          	beq	s11,a4,38fc <_dtoa_r+0xafa>
    3924:	001d8793          	addi	a5,s11,1
    3928:	00fc8023          	sb	a5,0(s9)
    392c:	bd69                	j	37c6 <_dtoa_r+0x9c4>
    392e:	47b2                	lw	a5,12(sp)
    3930:	ffbc0fa3          	sb	s11,-1(s8)
    3934:	05878163          	beq	a5,s8,3976 <_dtoa_r+0xb74>
    3938:	85ce                	mv	a1,s3
    393a:	4681                	li	a3,0
    393c:	4629                	li	a2,10
    393e:	8526                	mv	a0,s1
    3940:	732000ef          	jal	ra,4072 <__multadd>
    3944:	89aa                	mv	s3,a0
    3946:	4681                	li	a3,0
    3948:	4629                	li	a2,10
    394a:	85da                	mv	a1,s6
    394c:	8526                	mv	a0,s1
    394e:	012b1863          	bne	s6,s2,395e <_dtoa_r+0xb5c>
    3952:	720000ef          	jal	ra,4072 <__multadd>
    3956:	8b2a                	mv	s6,a0
    3958:	892a                	mv	s2,a0
    395a:	0c05                	addi	s8,s8,1
    395c:	bded                	j	3856 <_dtoa_r+0xa54>
    395e:	714000ef          	jal	ra,4072 <__multadd>
    3962:	85ca                	mv	a1,s2
    3964:	8b2a                	mv	s6,a0
    3966:	4681                	li	a3,0
    3968:	4629                	li	a2,10
    396a:	8526                	mv	a0,s1
    396c:	706000ef          	jal	ra,4072 <__multadd>
    3970:	892a                	mv	s2,a0
    3972:	b7e5                	j	395a <_dtoa_r+0xb58>
    3974:	4b01                	li	s6,0
    3976:	85ce                	mv	a1,s3
    3978:	4605                	li	a2,1
    397a:	8526                	mv	a0,s1
    397c:	24b000ef          	jal	ra,43c6 <__lshift>
    3980:	85d6                	mv	a1,s5
    3982:	89aa                	mv	s3,a0
    3984:	311000ef          	jal	ra,4494 <__mcmp>
    3988:	f6a04ee3          	bgtz	a0,3904 <_dtoa_r+0xb02>
    398c:	e501                	bnez	a0,3994 <_dtoa_r+0xb92>
    398e:	001df793          	andi	a5,s11,1
    3992:	fbad                	bnez	a5,3904 <_dtoa_r+0xb02>
    3994:	03000793          	li	a5,48
    3998:	fffa4703          	lbu	a4,-1(s4)
    399c:	fffa0693          	addi	a3,s4,-1
    39a0:	e2f713e3          	bne	a4,a5,37c6 <_dtoa_r+0x9c4>
    39a4:	8a36                	mv	s4,a3
    39a6:	bfcd                	j	3998 <_dtoa_r+0xb96>
    39a8:	4782                	lw	a5,0(sp)
    39aa:	00e79863          	bne	a5,a4,39ba <_dtoa_r+0xbb8>
    39ae:	4702                	lw	a4,0(sp)
    39b0:	0405                	addi	s0,s0,1
    39b2:	03100793          	li	a5,49
    39b6:	a31c                	sb	a5,0(a4)
    39b8:	b539                	j	37c6 <_dtoa_r+0x9c4>
    39ba:	8a3a                	mv	s4,a4
    39bc:	b7b1                	j	3908 <_dtoa_r+0xb06>
    39be:	4752                	lw	a4,20(sp)
    39c0:	00003797          	auipc	a5,0x3
    39c4:	40078793          	addi	a5,a5,1024 # 6dc0 <_read+0x156>
    39c8:	c03e                	sw	a5,0(sp)
    39ca:	00003797          	auipc	a5,0x3
    39ce:	3fe78793          	addi	a5,a5,1022 # 6dc8 <_read+0x15e>
    39d2:	ce071c63          	bnez	a4,2eca <_dtoa_r+0xc8>
    39d6:	cf8ff06f          	j	2ece <_dtoa_r+0xcc>
    39da:	47a2                	lw	a5,8(sp)
    39dc:	00f04663          	bgtz	a5,39e8 <_dtoa_r+0xbe6>
    39e0:	4712                	lw	a4,4(sp)
    39e2:	4789                	li	a5,2
    39e4:	dae7cde3          	blt	a5,a4,379e <_dtoa_r+0x99c>
    39e8:	4a02                	lw	s4,0(sp)
    39ea:	85d6                	mv	a1,s5
    39ec:	854e                	mv	a0,s3
    39ee:	adaff0ef          	jal	ra,2cc8 <quorem>
    39f2:	4782                	lw	a5,0(sp)
    39f4:	0a05                	addi	s4,s4,1
    39f6:	03050d93          	addi	s11,a0,48
    39fa:	40fa0733          	sub	a4,s4,a5
    39fe:	47a2                	lw	a5,8(sp)
    3a00:	ffba0fa3          	sb	s11,-1(s4)
    3a04:	f6f758e3          	bge	a4,a5,3974 <_dtoa_r+0xb72>
    3a08:	85ce                	mv	a1,s3
    3a0a:	4681                	li	a3,0
    3a0c:	4629                	li	a2,10
    3a0e:	8526                	mv	a0,s1
    3a10:	662000ef          	jal	ra,4072 <__multadd>
    3a14:	89aa                	mv	s3,a0
    3a16:	bfd1                	j	39ea <_dtoa_r+0xbe8>

00003a18 <__sflush_r>:
    3a18:	25de                	lhu	a5,12(a1)
    3a1a:	1101                	addi	sp,sp,-32
    3a1c:	cc22                	sw	s0,24(sp)
    3a1e:	ca26                	sw	s1,20(sp)
    3a20:	ce06                	sw	ra,28(sp)
    3a22:	c84a                	sw	s2,16(sp)
    3a24:	c64e                	sw	s3,12(sp)
    3a26:	0087f713          	andi	a4,a5,8
    3a2a:	84aa                	mv	s1,a0
    3a2c:	842e                	mv	s0,a1
    3a2e:	ef61                	bnez	a4,3b06 <__sflush_r+0xee>
    3a30:	41d8                	lw	a4,4(a1)
    3a32:	00e04d63          	bgtz	a4,3a4c <__sflush_r+0x34>
    3a36:	41b8                	lw	a4,64(a1)
    3a38:	00e04a63          	bgtz	a4,3a4c <__sflush_r+0x34>
    3a3c:	4501                	li	a0,0
    3a3e:	40f2                	lw	ra,28(sp)
    3a40:	4462                	lw	s0,24(sp)
    3a42:	44d2                	lw	s1,20(sp)
    3a44:	4942                	lw	s2,16(sp)
    3a46:	49b2                	lw	s3,12(sp)
    3a48:	6105                	addi	sp,sp,32
    3a4a:	8082                	ret
    3a4c:	5458                	lw	a4,44(s0)
    3a4e:	d77d                	beqz	a4,3a3c <__sflush_r+0x24>
    3a50:	0004a903          	lw	s2,0(s1)
    3a54:	01379693          	slli	a3,a5,0x13
    3a58:	0004a023          	sw	zero,0(s1)
    3a5c:	0606dc63          	bgez	a3,3ad4 <__sflush_r+0xbc>
    3a60:	4870                	lw	a2,84(s0)
    3a62:	245e                	lhu	a5,12(s0)
    3a64:	8b91                	andi	a5,a5,4
    3a66:	c799                	beqz	a5,3a74 <__sflush_r+0x5c>
    3a68:	405c                	lw	a5,4(s0)
    3a6a:	8e1d                	sub	a2,a2,a5
    3a6c:	585c                	lw	a5,52(s0)
    3a6e:	c399                	beqz	a5,3a74 <__sflush_r+0x5c>
    3a70:	403c                	lw	a5,64(s0)
    3a72:	8e1d                	sub	a2,a2,a5
    3a74:	545c                	lw	a5,44(s0)
    3a76:	500c                	lw	a1,32(s0)
    3a78:	4681                	li	a3,0
    3a7a:	8526                	mv	a0,s1
    3a7c:	9782                	jalr	a5
    3a7e:	57fd                	li	a5,-1
    3a80:	245a                	lhu	a4,12(s0)
    3a82:	00f51d63          	bne	a0,a5,3a9c <__sflush_r+0x84>
    3a86:	4094                	lw	a3,0(s1)
    3a88:	47f5                	li	a5,29
    3a8a:	06d7e963          	bltu	a5,a3,3afc <__sflush_r+0xe4>
    3a8e:	204007b7          	lui	a5,0x20400
    3a92:	0785                	addi	a5,a5,1
    3a94:	00d7d7b3          	srl	a5,a5,a3
    3a98:	8b85                	andi	a5,a5,1
    3a9a:	c3ad                	beqz	a5,3afc <__sflush_r+0xe4>
    3a9c:	481c                	lw	a5,16(s0)
    3a9e:	00042223          	sw	zero,4(s0)
    3aa2:	c01c                	sw	a5,0(s0)
    3aa4:	01371793          	slli	a5,a4,0x13
    3aa8:	0007d863          	bgez	a5,3ab8 <__sflush_r+0xa0>
    3aac:	57fd                	li	a5,-1
    3aae:	00f51463          	bne	a0,a5,3ab6 <__sflush_r+0x9e>
    3ab2:	409c                	lw	a5,0(s1)
    3ab4:	e391                	bnez	a5,3ab8 <__sflush_r+0xa0>
    3ab6:	c868                	sw	a0,84(s0)
    3ab8:	584c                	lw	a1,52(s0)
    3aba:	0124a023          	sw	s2,0(s1)
    3abe:	ddbd                	beqz	a1,3a3c <__sflush_r+0x24>
    3ac0:	04440793          	addi	a5,s0,68
    3ac4:	00f58563          	beq	a1,a5,3ace <__sflush_r+0xb6>
    3ac8:	8526                	mv	a0,s1
    3aca:	3e7000ef          	jal	ra,46b0 <_free_r>
    3ace:	02042a23          	sw	zero,52(s0)
    3ad2:	b7ad                	j	3a3c <__sflush_r+0x24>
    3ad4:	500c                	lw	a1,32(s0)
    3ad6:	4601                	li	a2,0
    3ad8:	4685                	li	a3,1
    3ada:	8526                	mv	a0,s1
    3adc:	9702                	jalr	a4
    3ade:	57fd                	li	a5,-1
    3ae0:	862a                	mv	a2,a0
    3ae2:	f8f510e3          	bne	a0,a5,3a62 <__sflush_r+0x4a>
    3ae6:	409c                	lw	a5,0(s1)
    3ae8:	dfad                	beqz	a5,3a62 <__sflush_r+0x4a>
    3aea:	4775                	li	a4,29
    3aec:	00e78563          	beq	a5,a4,3af6 <__sflush_r+0xde>
    3af0:	4759                	li	a4,22
    3af2:	04e79363          	bne	a5,a4,3b38 <__sflush_r+0x120>
    3af6:	0124a023          	sw	s2,0(s1)
    3afa:	b789                	j	3a3c <__sflush_r+0x24>
    3afc:	04076713          	ori	a4,a4,64
    3b00:	a45a                	sh	a4,12(s0)
    3b02:	557d                	li	a0,-1
    3b04:	bf2d                	j	3a3e <__sflush_r+0x26>
    3b06:	0105a983          	lw	s3,16(a1) # 7ff00010 <_eusrstack+0x5fee0010>
    3b0a:	f20989e3          	beqz	s3,3a3c <__sflush_r+0x24>
    3b0e:	0005a903          	lw	s2,0(a1)
    3b12:	8b8d                	andi	a5,a5,3
    3b14:	0135a023          	sw	s3,0(a1)
    3b18:	41390933          	sub	s2,s2,s3
    3b1c:	4701                	li	a4,0
    3b1e:	e391                	bnez	a5,3b22 <__sflush_r+0x10a>
    3b20:	49d8                	lw	a4,20(a1)
    3b22:	c418                	sw	a4,8(s0)
    3b24:	f1205ce3          	blez	s2,3a3c <__sflush_r+0x24>
    3b28:	541c                	lw	a5,40(s0)
    3b2a:	500c                	lw	a1,32(s0)
    3b2c:	86ca                	mv	a3,s2
    3b2e:	864e                	mv	a2,s3
    3b30:	8526                	mv	a0,s1
    3b32:	9782                	jalr	a5
    3b34:	00a04763          	bgtz	a0,3b42 <__sflush_r+0x12a>
    3b38:	245e                	lhu	a5,12(s0)
    3b3a:	0407e793          	ori	a5,a5,64
    3b3e:	a45e                	sh	a5,12(s0)
    3b40:	b7c9                	j	3b02 <__sflush_r+0xea>
    3b42:	99aa                	add	s3,s3,a0
    3b44:	40a90933          	sub	s2,s2,a0
    3b48:	bff1                	j	3b24 <__sflush_r+0x10c>

00003b4a <_fflush_r>:
    3b4a:	499c                	lw	a5,16(a1)
    3b4c:	cfb9                	beqz	a5,3baa <_fflush_r+0x60>
    3b4e:	1101                	addi	sp,sp,-32
    3b50:	cc22                	sw	s0,24(sp)
    3b52:	ce06                	sw	ra,28(sp)
    3b54:	842a                	mv	s0,a0
    3b56:	c511                	beqz	a0,3b62 <_fflush_r+0x18>
    3b58:	4d1c                	lw	a5,24(a0)
    3b5a:	e781                	bnez	a5,3b62 <_fflush_r+0x18>
    3b5c:	c62e                	sw	a1,12(sp)
    3b5e:	2221                	jal	3c66 <__sinit>
    3b60:	45b2                	lw	a1,12(sp)
    3b62:	00003797          	auipc	a5,0x3
    3b66:	28e78793          	addi	a5,a5,654 # 6df0 <__sf_fake_stdin>
    3b6a:	00f59b63          	bne	a1,a5,3b80 <_fflush_r+0x36>
    3b6e:	404c                	lw	a1,4(s0)
    3b70:	00c59783          	lh	a5,12(a1)
    3b74:	c795                	beqz	a5,3ba0 <_fflush_r+0x56>
    3b76:	8522                	mv	a0,s0
    3b78:	4462                	lw	s0,24(sp)
    3b7a:	40f2                	lw	ra,28(sp)
    3b7c:	6105                	addi	sp,sp,32
    3b7e:	bd69                	j	3a18 <__sflush_r>
    3b80:	00003797          	auipc	a5,0x3
    3b84:	29078793          	addi	a5,a5,656 # 6e10 <__sf_fake_stdout>
    3b88:	00f59463          	bne	a1,a5,3b90 <_fflush_r+0x46>
    3b8c:	440c                	lw	a1,8(s0)
    3b8e:	b7cd                	j	3b70 <_fflush_r+0x26>
    3b90:	00003797          	auipc	a5,0x3
    3b94:	24078793          	addi	a5,a5,576 # 6dd0 <__sf_fake_stderr>
    3b98:	fcf59ce3          	bne	a1,a5,3b70 <_fflush_r+0x26>
    3b9c:	444c                	lw	a1,12(s0)
    3b9e:	bfc9                	j	3b70 <_fflush_r+0x26>
    3ba0:	40f2                	lw	ra,28(sp)
    3ba2:	4462                	lw	s0,24(sp)
    3ba4:	4501                	li	a0,0
    3ba6:	6105                	addi	sp,sp,32
    3ba8:	8082                	ret
    3baa:	4501                	li	a0,0
    3bac:	8082                	ret

00003bae <std>:
    3bae:	1141                	addi	sp,sp,-16
    3bb0:	c422                	sw	s0,8(sp)
    3bb2:	c606                	sw	ra,12(sp)
    3bb4:	842a                	mv	s0,a0
    3bb6:	a54e                	sh	a1,12(a0)
    3bb8:	a572                	sh	a2,14(a0)
    3bba:	00052023          	sw	zero,0(a0)
    3bbe:	00052223          	sw	zero,4(a0)
    3bc2:	00052423          	sw	zero,8(a0)
    3bc6:	06052223          	sw	zero,100(a0)
    3bca:	00052823          	sw	zero,16(a0)
    3bce:	00052a23          	sw	zero,20(a0)
    3bd2:	00052c23          	sw	zero,24(a0)
    3bd6:	4621                	li	a2,8
    3bd8:	4581                	li	a1,0
    3bda:	05c50513          	addi	a0,a0,92
    3bde:	e22fc0ef          	jal	ra,200 <memset>
    3be2:	00001797          	auipc	a5,0x1
    3be6:	f6478793          	addi	a5,a5,-156 # 4b46 <__sread>
    3bea:	d05c                	sw	a5,36(s0)
    3bec:	00001797          	auipc	a5,0x1
    3bf0:	f8678793          	addi	a5,a5,-122 # 4b72 <__swrite>
    3bf4:	d41c                	sw	a5,40(s0)
    3bf6:	00001797          	auipc	a5,0x1
    3bfa:	fc478793          	addi	a5,a5,-60 # 4bba <__sseek>
    3bfe:	d45c                	sw	a5,44(s0)
    3c00:	00001797          	auipc	a5,0x1
    3c04:	fea78793          	addi	a5,a5,-22 # 4bea <__sclose>
    3c08:	d000                	sw	s0,32(s0)
    3c0a:	d81c                	sw	a5,48(s0)
    3c0c:	40b2                	lw	ra,12(sp)
    3c0e:	4422                	lw	s0,8(sp)
    3c10:	0141                	addi	sp,sp,16
    3c12:	8082                	ret

00003c14 <_cleanup_r>:
    3c14:	00000597          	auipc	a1,0x0
    3c18:	f3658593          	addi	a1,a1,-202 # 3b4a <_fflush_r>
    3c1c:	a2b1                	j	3d68 <_fwalk_reent>

00003c1e <__sfmoreglue>:
    3c1e:	1141                	addi	sp,sp,-16
    3c20:	c226                	sw	s1,4(sp)
    3c22:	06800613          	li	a2,104
    3c26:	fff58493          	addi	s1,a1,-1
    3c2a:	02c484b3          	mul	s1,s1,a2
    3c2e:	c04a                	sw	s2,0(sp)
    3c30:	892e                	mv	s2,a1
    3c32:	c422                	sw	s0,8(sp)
    3c34:	c606                	sw	ra,12(sp)
    3c36:	07448593          	addi	a1,s1,116
    3c3a:	31b000ef          	jal	ra,4754 <_malloc_r>
    3c3e:	842a                	mv	s0,a0
    3c40:	cd01                	beqz	a0,3c58 <__sfmoreglue+0x3a>
    3c42:	00052023          	sw	zero,0(a0)
    3c46:	01252223          	sw	s2,4(a0)
    3c4a:	0531                	addi	a0,a0,12
    3c4c:	c408                	sw	a0,8(s0)
    3c4e:	06848613          	addi	a2,s1,104
    3c52:	4581                	li	a1,0
    3c54:	dacfc0ef          	jal	ra,200 <memset>
    3c58:	8522                	mv	a0,s0
    3c5a:	40b2                	lw	ra,12(sp)
    3c5c:	4422                	lw	s0,8(sp)
    3c5e:	4492                	lw	s1,4(sp)
    3c60:	4902                	lw	s2,0(sp)
    3c62:	0141                	addi	sp,sp,16
    3c64:	8082                	ret

00003c66 <__sinit>:
    3c66:	4d1c                	lw	a5,24(a0)
    3c68:	e3ad                	bnez	a5,3cca <__sinit+0x64>
    3c6a:	1141                	addi	sp,sp,-16
    3c6c:	c606                	sw	ra,12(sp)
    3c6e:	c422                	sw	s0,8(sp)
    3c70:	00000797          	auipc	a5,0x0
    3c74:	fa478793          	addi	a5,a5,-92 # 3c14 <_cleanup_r>
    3c78:	d51c                	sw	a5,40(a0)
    3c7a:	81818793          	addi	a5,gp,-2024 # 200001f8 <_global_impure_ptr>
    3c7e:	439c                	lw	a5,0(a5)
    3c80:	04052423          	sw	zero,72(a0)
    3c84:	04052623          	sw	zero,76(a0)
    3c88:	04052823          	sw	zero,80(a0)
    3c8c:	00f51463          	bne	a0,a5,3c94 <__sinit+0x2e>
    3c90:	4785                	li	a5,1
    3c92:	cd1c                	sw	a5,24(a0)
    3c94:	842a                	mv	s0,a0
    3c96:	281d                	jal	3ccc <__sfp>
    3c98:	c048                	sw	a0,4(s0)
    3c9a:	8522                	mv	a0,s0
    3c9c:	2805                	jal	3ccc <__sfp>
    3c9e:	c408                	sw	a0,8(s0)
    3ca0:	8522                	mv	a0,s0
    3ca2:	202d                	jal	3ccc <__sfp>
    3ca4:	c448                	sw	a0,12(s0)
    3ca6:	4048                	lw	a0,4(s0)
    3ca8:	4601                	li	a2,0
    3caa:	4591                	li	a1,4
    3cac:	3709                	jal	3bae <std>
    3cae:	4408                	lw	a0,8(s0)
    3cb0:	4605                	li	a2,1
    3cb2:	45a5                	li	a1,9
    3cb4:	3ded                	jal	3bae <std>
    3cb6:	4448                	lw	a0,12(s0)
    3cb8:	4609                	li	a2,2
    3cba:	45c9                	li	a1,18
    3cbc:	3dcd                	jal	3bae <std>
    3cbe:	4785                	li	a5,1
    3cc0:	cc1c                	sw	a5,24(s0)
    3cc2:	40b2                	lw	ra,12(sp)
    3cc4:	4422                	lw	s0,8(sp)
    3cc6:	0141                	addi	sp,sp,16
    3cc8:	8082                	ret
    3cca:	8082                	ret

00003ccc <__sfp>:
    3ccc:	1141                	addi	sp,sp,-16
    3cce:	81818793          	addi	a5,gp,-2024 # 200001f8 <_global_impure_ptr>
    3cd2:	c226                	sw	s1,4(sp)
    3cd4:	4384                	lw	s1,0(a5)
    3cd6:	c04a                	sw	s2,0(sp)
    3cd8:	c606                	sw	ra,12(sp)
    3cda:	4c9c                	lw	a5,24(s1)
    3cdc:	c422                	sw	s0,8(sp)
    3cde:	892a                	mv	s2,a0
    3ce0:	e399                	bnez	a5,3ce6 <__sfp+0x1a>
    3ce2:	8526                	mv	a0,s1
    3ce4:	3749                	jal	3c66 <__sinit>
    3ce6:	04848493          	addi	s1,s1,72
    3cea:	4480                	lw	s0,8(s1)
    3cec:	40dc                	lw	a5,4(s1)
    3cee:	17fd                	addi	a5,a5,-1
    3cf0:	0007d663          	bgez	a5,3cfc <__sfp+0x30>
    3cf4:	409c                	lw	a5,0(s1)
    3cf6:	cfb9                	beqz	a5,3d54 <__sfp+0x88>
    3cf8:	4084                	lw	s1,0(s1)
    3cfa:	bfc5                	j	3cea <__sfp+0x1e>
    3cfc:	00c41703          	lh	a4,12(s0)
    3d00:	e739                	bnez	a4,3d4e <__sfp+0x82>
    3d02:	77c1                	lui	a5,0xffff0
    3d04:	0785                	addi	a5,a5,1
    3d06:	06042223          	sw	zero,100(s0)
    3d0a:	00042023          	sw	zero,0(s0)
    3d0e:	00042223          	sw	zero,4(s0)
    3d12:	00042423          	sw	zero,8(s0)
    3d16:	c45c                	sw	a5,12(s0)
    3d18:	00042823          	sw	zero,16(s0)
    3d1c:	00042a23          	sw	zero,20(s0)
    3d20:	00042c23          	sw	zero,24(s0)
    3d24:	4621                	li	a2,8
    3d26:	4581                	li	a1,0
    3d28:	05c40513          	addi	a0,s0,92
    3d2c:	cd4fc0ef          	jal	ra,200 <memset>
    3d30:	02042a23          	sw	zero,52(s0)
    3d34:	02042c23          	sw	zero,56(s0)
    3d38:	04042423          	sw	zero,72(s0)
    3d3c:	04042623          	sw	zero,76(s0)
    3d40:	8522                	mv	a0,s0
    3d42:	40b2                	lw	ra,12(sp)
    3d44:	4422                	lw	s0,8(sp)
    3d46:	4492                	lw	s1,4(sp)
    3d48:	4902                	lw	s2,0(sp)
    3d4a:	0141                	addi	sp,sp,16
    3d4c:	8082                	ret
    3d4e:	06840413          	addi	s0,s0,104
    3d52:	bf71                	j	3cee <__sfp+0x22>
    3d54:	4591                	li	a1,4
    3d56:	854a                	mv	a0,s2
    3d58:	35d9                	jal	3c1e <__sfmoreglue>
    3d5a:	c088                	sw	a0,0(s1)
    3d5c:	fd51                	bnez	a0,3cf8 <__sfp+0x2c>
    3d5e:	47b1                	li	a5,12
    3d60:	00f92023          	sw	a5,0(s2)
    3d64:	4401                	li	s0,0
    3d66:	bfe9                	j	3d40 <__sfp+0x74>

00003d68 <_fwalk_reent>:
    3d68:	7179                	addi	sp,sp,-48
    3d6a:	d422                	sw	s0,40(sp)
    3d6c:	d04a                	sw	s2,32(sp)
    3d6e:	cc52                	sw	s4,24(sp)
    3d70:	ca56                	sw	s5,20(sp)
    3d72:	c85a                	sw	s6,16(sp)
    3d74:	c65e                	sw	s7,12(sp)
    3d76:	d606                	sw	ra,44(sp)
    3d78:	d226                	sw	s1,36(sp)
    3d7a:	ce4e                	sw	s3,28(sp)
    3d7c:	8a2a                	mv	s4,a0
    3d7e:	8aae                	mv	s5,a1
    3d80:	04850413          	addi	s0,a0,72
    3d84:	4901                	li	s2,0
    3d86:	4b05                	li	s6,1
    3d88:	5bfd                	li	s7,-1
    3d8a:	ec09                	bnez	s0,3da4 <_fwalk_reent+0x3c>
    3d8c:	50b2                	lw	ra,44(sp)
    3d8e:	5422                	lw	s0,40(sp)
    3d90:	854a                	mv	a0,s2
    3d92:	5492                	lw	s1,36(sp)
    3d94:	5902                	lw	s2,32(sp)
    3d96:	49f2                	lw	s3,28(sp)
    3d98:	4a62                	lw	s4,24(sp)
    3d9a:	4ad2                	lw	s5,20(sp)
    3d9c:	4b42                	lw	s6,16(sp)
    3d9e:	4bb2                	lw	s7,12(sp)
    3da0:	6145                	addi	sp,sp,48
    3da2:	8082                	ret
    3da4:	4404                	lw	s1,8(s0)
    3da6:	00442983          	lw	s3,4(s0)
    3daa:	19fd                	addi	s3,s3,-1
    3dac:	0009d463          	bgez	s3,3db4 <_fwalk_reent+0x4c>
    3db0:	4000                	lw	s0,0(s0)
    3db2:	bfe1                	j	3d8a <_fwalk_reent+0x22>
    3db4:	24de                	lhu	a5,12(s1)
    3db6:	00fb7b63          	bgeu	s6,a5,3dcc <_fwalk_reent+0x64>
    3dba:	00e49783          	lh	a5,14(s1)
    3dbe:	01778763          	beq	a5,s7,3dcc <_fwalk_reent+0x64>
    3dc2:	85a6                	mv	a1,s1
    3dc4:	8552                	mv	a0,s4
    3dc6:	9a82                	jalr	s5
    3dc8:	00a96933          	or	s2,s2,a0
    3dcc:	06848493          	addi	s1,s1,104
    3dd0:	bfe9                	j	3daa <_fwalk_reent+0x42>

00003dd2 <_localeconv_r>:
    3dd2:	81418793          	addi	a5,gp,-2028 # 200001f4 <_impure_ptr>
    3dd6:	439c                	lw	a5,0(a5)
    3dd8:	5388                	lw	a0,32(a5)
    3dda:	e509                	bnez	a0,3de4 <_localeconv_r+0x12>
    3ddc:	1fffc517          	auipc	a0,0x1fffc
    3de0:	29450513          	addi	a0,a0,660 # 20000070 <__global_locale>
    3de4:	0f050513          	addi	a0,a0,240
    3de8:	8082                	ret

00003dea <__swhatbuf_r>:
    3dea:	7119                	addi	sp,sp,-128
    3dec:	daa6                	sw	s1,116(sp)
    3dee:	84ae                	mv	s1,a1
    3df0:	00e59583          	lh	a1,14(a1)
    3df4:	dca2                	sw	s0,120(sp)
    3df6:	de86                	sw	ra,124(sp)
    3df8:	8432                	mv	s0,a2
    3dfa:	0005db63          	bgez	a1,3e10 <__swhatbuf_r+0x26>
    3dfe:	24de                	lhu	a5,12(s1)
    3e00:	0006a023          	sw	zero,0(a3)
    3e04:	0807f793          	andi	a5,a5,128
    3e08:	e785                	bnez	a5,3e30 <__swhatbuf_r+0x46>
    3e0a:	40000793          	li	a5,1024
    3e0e:	a01d                	j	3e34 <__swhatbuf_r+0x4a>
    3e10:	0830                	addi	a2,sp,24
    3e12:	c636                	sw	a3,12(sp)
    3e14:	645000ef          	jal	ra,4c58 <_fstat_r>
    3e18:	46b2                	lw	a3,12(sp)
    3e1a:	fe0542e3          	bltz	a0,3dfe <__swhatbuf_r+0x14>
    3e1e:	4772                	lw	a4,28(sp)
    3e20:	67bd                	lui	a5,0xf
    3e22:	8ff9                	and	a5,a5,a4
    3e24:	7779                	lui	a4,0xffffe
    3e26:	97ba                	add	a5,a5,a4
    3e28:	0017b793          	seqz	a5,a5
    3e2c:	c29c                	sw	a5,0(a3)
    3e2e:	bff1                	j	3e0a <__swhatbuf_r+0x20>
    3e30:	04000793          	li	a5,64
    3e34:	c01c                	sw	a5,0(s0)
    3e36:	50f6                	lw	ra,124(sp)
    3e38:	5466                	lw	s0,120(sp)
    3e3a:	54d6                	lw	s1,116(sp)
    3e3c:	4501                	li	a0,0
    3e3e:	6109                	addi	sp,sp,128
    3e40:	8082                	ret

00003e42 <__smakebuf_r>:
    3e42:	25de                	lhu	a5,12(a1)
    3e44:	1101                	addi	sp,sp,-32
    3e46:	cc22                	sw	s0,24(sp)
    3e48:	ce06                	sw	ra,28(sp)
    3e4a:	ca26                	sw	s1,20(sp)
    3e4c:	c84a                	sw	s2,16(sp)
    3e4e:	8b89                	andi	a5,a5,2
    3e50:	842e                	mv	s0,a1
    3e52:	cf89                	beqz	a5,3e6c <__smakebuf_r+0x2a>
    3e54:	04740793          	addi	a5,s0,71
    3e58:	c01c                	sw	a5,0(s0)
    3e5a:	c81c                	sw	a5,16(s0)
    3e5c:	4785                	li	a5,1
    3e5e:	c85c                	sw	a5,20(s0)
    3e60:	40f2                	lw	ra,28(sp)
    3e62:	4462                	lw	s0,24(sp)
    3e64:	44d2                	lw	s1,20(sp)
    3e66:	4942                	lw	s2,16(sp)
    3e68:	6105                	addi	sp,sp,32
    3e6a:	8082                	ret
    3e6c:	0074                	addi	a3,sp,12
    3e6e:	0030                	addi	a2,sp,8
    3e70:	84aa                	mv	s1,a0
    3e72:	3fa5                	jal	3dea <__swhatbuf_r>
    3e74:	45a2                	lw	a1,8(sp)
    3e76:	892a                	mv	s2,a0
    3e78:	8526                	mv	a0,s1
    3e7a:	0db000ef          	jal	ra,4754 <_malloc_r>
    3e7e:	e919                	bnez	a0,3e94 <__smakebuf_r+0x52>
    3e80:	00c41783          	lh	a5,12(s0)
    3e84:	2007f713          	andi	a4,a5,512
    3e88:	ff61                	bnez	a4,3e60 <__smakebuf_r+0x1e>
    3e8a:	9bf1                	andi	a5,a5,-4
    3e8c:	0027e793          	ori	a5,a5,2
    3e90:	a45e                	sh	a5,12(s0)
    3e92:	b7c9                	j	3e54 <__smakebuf_r+0x12>
    3e94:	00000797          	auipc	a5,0x0
    3e98:	d8078793          	addi	a5,a5,-640 # 3c14 <_cleanup_r>
    3e9c:	d49c                	sw	a5,40(s1)
    3e9e:	245e                	lhu	a5,12(s0)
    3ea0:	c008                	sw	a0,0(s0)
    3ea2:	c808                	sw	a0,16(s0)
    3ea4:	0807e793          	ori	a5,a5,128
    3ea8:	a45e                	sh	a5,12(s0)
    3eaa:	47a2                	lw	a5,8(sp)
    3eac:	c85c                	sw	a5,20(s0)
    3eae:	47b2                	lw	a5,12(sp)
    3eb0:	cf81                	beqz	a5,3ec8 <__smakebuf_r+0x86>
    3eb2:	00e41583          	lh	a1,14(s0)
    3eb6:	8526                	mv	a0,s1
    3eb8:	5d5000ef          	jal	ra,4c8c <_isatty_r>
    3ebc:	c511                	beqz	a0,3ec8 <__smakebuf_r+0x86>
    3ebe:	245e                	lhu	a5,12(s0)
    3ec0:	9bf1                	andi	a5,a5,-4
    3ec2:	0017e793          	ori	a5,a5,1
    3ec6:	a45e                	sh	a5,12(s0)
    3ec8:	245e                	lhu	a5,12(s0)
    3eca:	00f96933          	or	s2,s2,a5
    3ece:	01241623          	sh	s2,12(s0)
    3ed2:	b779                	j	3e60 <__smakebuf_r+0x1e>

00003ed4 <malloc>:
    3ed4:	81418793          	addi	a5,gp,-2028 # 200001f4 <_impure_ptr>
    3ed8:	85aa                	mv	a1,a0
    3eda:	4388                	lw	a0,0(a5)
    3edc:	0790006f          	j	4754 <_malloc_r>

00003ee0 <memchr>:
    3ee0:	0ff5f593          	andi	a1,a1,255
    3ee4:	962a                	add	a2,a2,a0
    3ee6:	00c51463          	bne	a0,a2,3eee <memchr+0xe>
    3eea:	4501                	li	a0,0
    3eec:	8082                	ret
    3eee:	211c                	lbu	a5,0(a0)
    3ef0:	feb78ee3          	beq	a5,a1,3eec <memchr+0xc>
    3ef4:	0505                	addi	a0,a0,1
    3ef6:	bfc5                	j	3ee6 <memchr+0x6>

00003ef8 <memcpy>:
    3ef8:	00a5c7b3          	xor	a5,a1,a0
    3efc:	8b8d                	andi	a5,a5,3
    3efe:	00c50733          	add	a4,a0,a2
    3f02:	e781                	bnez	a5,3f0a <memcpy+0x12>
    3f04:	478d                	li	a5,3
    3f06:	00c7ed63          	bltu	a5,a2,3f20 <memcpy+0x28>
    3f0a:	87aa                	mv	a5,a0
    3f0c:	08e57e63          	bgeu	a0,a4,3fa8 <memcpy+0xb0>
    3f10:	2194                	lbu	a3,0(a1)
    3f12:	0785                	addi	a5,a5,1
    3f14:	0585                	addi	a1,a1,1
    3f16:	fed78fa3          	sb	a3,-1(a5)
    3f1a:	fee7ebe3          	bltu	a5,a4,3f10 <memcpy+0x18>
    3f1e:	8082                	ret
    3f20:	00357693          	andi	a3,a0,3
    3f24:	87aa                	mv	a5,a0
    3f26:	ca89                	beqz	a3,3f38 <memcpy+0x40>
    3f28:	2194                	lbu	a3,0(a1)
    3f2a:	0785                	addi	a5,a5,1
    3f2c:	0585                	addi	a1,a1,1
    3f2e:	fed78fa3          	sb	a3,-1(a5)
    3f32:	0037f693          	andi	a3,a5,3
    3f36:	bfc5                	j	3f26 <memcpy+0x2e>
    3f38:	ffc77693          	andi	a3,a4,-4
    3f3c:	fe068613          	addi	a2,a3,-32
    3f40:	06c7f063          	bgeu	a5,a2,3fa0 <memcpy+0xa8>
    3f44:	0005a383          	lw	t2,0(a1)
    3f48:	0045a283          	lw	t0,4(a1)
    3f4c:	0085af83          	lw	t6,8(a1)
    3f50:	00c5af03          	lw	t5,12(a1)
    3f54:	0105ae83          	lw	t4,16(a1)
    3f58:	0145ae03          	lw	t3,20(a1)
    3f5c:	0185a303          	lw	t1,24(a1)
    3f60:	01c5a883          	lw	a7,28(a1)
    3f64:	02458593          	addi	a1,a1,36
    3f68:	0077a023          	sw	t2,0(a5)
    3f6c:	ffc5a803          	lw	a6,-4(a1)
    3f70:	0057a223          	sw	t0,4(a5)
    3f74:	01f7a423          	sw	t6,8(a5)
    3f78:	01e7a623          	sw	t5,12(a5)
    3f7c:	01d7a823          	sw	t4,16(a5)
    3f80:	01c7aa23          	sw	t3,20(a5)
    3f84:	0067ac23          	sw	t1,24(a5)
    3f88:	0117ae23          	sw	a7,28(a5)
    3f8c:	02478793          	addi	a5,a5,36
    3f90:	ff07ae23          	sw	a6,-4(a5)
    3f94:	b775                	j	3f40 <memcpy+0x48>
    3f96:	4190                	lw	a2,0(a1)
    3f98:	0791                	addi	a5,a5,4
    3f9a:	0591                	addi	a1,a1,4
    3f9c:	fec7ae23          	sw	a2,-4(a5)
    3fa0:	fed7ebe3          	bltu	a5,a3,3f96 <memcpy+0x9e>
    3fa4:	f6e7e6e3          	bltu	a5,a4,3f10 <memcpy+0x18>
    3fa8:	8082                	ret

00003faa <_Balloc>:
    3faa:	515c                	lw	a5,36(a0)
    3fac:	1141                	addi	sp,sp,-16
    3fae:	c422                	sw	s0,8(sp)
    3fb0:	c04a                	sw	s2,0(sp)
    3fb2:	c606                	sw	ra,12(sp)
    3fb4:	c226                	sw	s1,4(sp)
    3fb6:	842a                	mv	s0,a0
    3fb8:	892e                	mv	s2,a1
    3fba:	ef81                	bnez	a5,3fd2 <_Balloc+0x28>
    3fbc:	4541                	li	a0,16
    3fbe:	3f19                	jal	3ed4 <malloc>
    3fc0:	d048                	sw	a0,36(s0)
    3fc2:	00052223          	sw	zero,4(a0)
    3fc6:	00052423          	sw	zero,8(a0)
    3fca:	00052023          	sw	zero,0(a0)
    3fce:	00052623          	sw	zero,12(a0)
    3fd2:	5044                	lw	s1,36(s0)
    3fd4:	44dc                	lw	a5,12(s1)
    3fd6:	c795                	beqz	a5,4002 <_Balloc+0x58>
    3fd8:	5058                	lw	a4,36(s0)
    3fda:	00291793          	slli	a5,s2,0x2
    3fde:	4758                	lw	a4,12(a4)
    3fe0:	97ba                	add	a5,a5,a4
    3fe2:	4388                	lw	a0,0(a5)
    3fe4:	ed1d                	bnez	a0,4022 <_Balloc+0x78>
    3fe6:	4485                	li	s1,1
    3fe8:	012494b3          	sll	s1,s1,s2
    3fec:	00548613          	addi	a2,s1,5
    3ff0:	060a                	slli	a2,a2,0x2
    3ff2:	4585                	li	a1,1
    3ff4:	8522                	mv	a0,s0
    3ff6:	2d51                	jal	468a <_calloc_r>
    3ff8:	cd11                	beqz	a0,4014 <_Balloc+0x6a>
    3ffa:	01252223          	sw	s2,4(a0)
    3ffe:	c504                	sw	s1,8(a0)
    4000:	a01d                	j	4026 <_Balloc+0x7c>
    4002:	02100613          	li	a2,33
    4006:	4591                	li	a1,4
    4008:	8522                	mv	a0,s0
    400a:	2541                	jal	468a <_calloc_r>
    400c:	505c                	lw	a5,36(s0)
    400e:	c4c8                	sw	a0,12(s1)
    4010:	47dc                	lw	a5,12(a5)
    4012:	f3f9                	bnez	a5,3fd8 <_Balloc+0x2e>
    4014:	4501                	li	a0,0
    4016:	40b2                	lw	ra,12(sp)
    4018:	4422                	lw	s0,8(sp)
    401a:	4492                	lw	s1,4(sp)
    401c:	4902                	lw	s2,0(sp)
    401e:	0141                	addi	sp,sp,16
    4020:	8082                	ret
    4022:	4118                	lw	a4,0(a0)
    4024:	c398                	sw	a4,0(a5)
    4026:	00052823          	sw	zero,16(a0)
    402a:	00052623          	sw	zero,12(a0)
    402e:	b7e5                	j	4016 <_Balloc+0x6c>

00004030 <_Bfree>:
    4030:	515c                	lw	a5,36(a0)
    4032:	1101                	addi	sp,sp,-32
    4034:	cc22                	sw	s0,24(sp)
    4036:	ce06                	sw	ra,28(sp)
    4038:	842a                	mv	s0,a0
    403a:	ef91                	bnez	a5,4056 <_Bfree+0x26>
    403c:	4541                	li	a0,16
    403e:	c62e                	sw	a1,12(sp)
    4040:	3d51                	jal	3ed4 <malloc>
    4042:	45b2                	lw	a1,12(sp)
    4044:	d048                	sw	a0,36(s0)
    4046:	00052223          	sw	zero,4(a0)
    404a:	00052423          	sw	zero,8(a0)
    404e:	00052023          	sw	zero,0(a0)
    4052:	00052623          	sw	zero,12(a0)
    4056:	c991                	beqz	a1,406a <_Bfree+0x3a>
    4058:	5054                	lw	a3,36(s0)
    405a:	41dc                	lw	a5,4(a1)
    405c:	00279713          	slli	a4,a5,0x2
    4060:	46dc                	lw	a5,12(a3)
    4062:	97ba                	add	a5,a5,a4
    4064:	4398                	lw	a4,0(a5)
    4066:	c198                	sw	a4,0(a1)
    4068:	c38c                	sw	a1,0(a5)
    406a:	40f2                	lw	ra,28(sp)
    406c:	4462                	lw	s0,24(sp)
    406e:	6105                	addi	sp,sp,32
    4070:	8082                	ret

00004072 <__multadd>:
    4072:	7179                	addi	sp,sp,-48
    4074:	ce4e                	sw	s3,28(sp)
    4076:	89aa                	mv	s3,a0
    4078:	6541                	lui	a0,0x10
    407a:	d422                	sw	s0,40(sp)
    407c:	d226                	sw	s1,36(sp)
    407e:	842e                	mv	s0,a1
    4080:	4984                	lw	s1,16(a1)
    4082:	d606                	sw	ra,44(sp)
    4084:	d04a                	sw	s2,32(sp)
    4086:	05d1                	addi	a1,a1,20
    4088:	4801                	li	a6,0
    408a:	157d                	addi	a0,a0,-1
    408c:	419c                	lw	a5,0(a1)
    408e:	0591                	addi	a1,a1,4
    4090:	0805                	addi	a6,a6,1
    4092:	00a7f733          	and	a4,a5,a0
    4096:	02c70733          	mul	a4,a4,a2
    409a:	83c1                	srli	a5,a5,0x10
    409c:	02c787b3          	mul	a5,a5,a2
    40a0:	9736                	add	a4,a4,a3
    40a2:	01075693          	srli	a3,a4,0x10
    40a6:	8f69                	and	a4,a4,a0
    40a8:	97b6                	add	a5,a5,a3
    40aa:	0107d693          	srli	a3,a5,0x10
    40ae:	07c2                	slli	a5,a5,0x10
    40b0:	97ba                	add	a5,a5,a4
    40b2:	fef5ae23          	sw	a5,-4(a1)
    40b6:	fc984be3          	blt	a6,s1,408c <__multadd+0x1a>
    40ba:	ce8d                	beqz	a3,40f4 <__multadd+0x82>
    40bc:	441c                	lw	a5,8(s0)
    40be:	02f4c463          	blt	s1,a5,40e6 <__multadd+0x74>
    40c2:	404c                	lw	a1,4(s0)
    40c4:	854e                	mv	a0,s3
    40c6:	c636                	sw	a3,12(sp)
    40c8:	0585                	addi	a1,a1,1
    40ca:	35c5                	jal	3faa <_Balloc>
    40cc:	4810                	lw	a2,16(s0)
    40ce:	00c40593          	addi	a1,s0,12
    40d2:	892a                	mv	s2,a0
    40d4:	0609                	addi	a2,a2,2
    40d6:	060a                	slli	a2,a2,0x2
    40d8:	0531                	addi	a0,a0,12
    40da:	3d39                	jal	3ef8 <memcpy>
    40dc:	85a2                	mv	a1,s0
    40de:	854e                	mv	a0,s3
    40e0:	3f81                	jal	4030 <_Bfree>
    40e2:	46b2                	lw	a3,12(sp)
    40e4:	844a                	mv	s0,s2
    40e6:	00448793          	addi	a5,s1,4
    40ea:	078a                	slli	a5,a5,0x2
    40ec:	97a2                	add	a5,a5,s0
    40ee:	c3d4                	sw	a3,4(a5)
    40f0:	0485                	addi	s1,s1,1
    40f2:	c804                	sw	s1,16(s0)
    40f4:	8522                	mv	a0,s0
    40f6:	50b2                	lw	ra,44(sp)
    40f8:	5422                	lw	s0,40(sp)
    40fa:	5492                	lw	s1,36(sp)
    40fc:	5902                	lw	s2,32(sp)
    40fe:	49f2                	lw	s3,28(sp)
    4100:	6145                	addi	sp,sp,48
    4102:	8082                	ret

00004104 <__hi0bits>:
    4104:	7741                	lui	a4,0xffff0
    4106:	8f69                	and	a4,a4,a0
    4108:	87aa                	mv	a5,a0
    410a:	4501                	li	a0,0
    410c:	e319                	bnez	a4,4112 <__hi0bits+0xe>
    410e:	07c2                	slli	a5,a5,0x10
    4110:	4541                	li	a0,16
    4112:	ff000737          	lui	a4,0xff000
    4116:	8f7d                	and	a4,a4,a5
    4118:	e319                	bnez	a4,411e <__hi0bits+0x1a>
    411a:	0521                	addi	a0,a0,8
    411c:	07a2                	slli	a5,a5,0x8
    411e:	f0000737          	lui	a4,0xf0000
    4122:	8f7d                	and	a4,a4,a5
    4124:	e319                	bnez	a4,412a <__hi0bits+0x26>
    4126:	0511                	addi	a0,a0,4
    4128:	0792                	slli	a5,a5,0x4
    412a:	c0000737          	lui	a4,0xc0000
    412e:	8f7d                	and	a4,a4,a5
    4130:	e319                	bnez	a4,4136 <__hi0bits+0x32>
    4132:	0509                	addi	a0,a0,2
    4134:	078a                	slli	a5,a5,0x2
    4136:	0007c963          	bltz	a5,4148 <__hi0bits+0x44>
    413a:	00179713          	slli	a4,a5,0x1
    413e:	0505                	addi	a0,a0,1
    4140:	00074463          	bltz	a4,4148 <__hi0bits+0x44>
    4144:	02000513          	li	a0,32
    4148:	8082                	ret

0000414a <__lo0bits>:
    414a:	411c                	lw	a5,0(a0)
    414c:	0077f713          	andi	a4,a5,7
    4150:	c30d                	beqz	a4,4172 <__lo0bits+0x28>
    4152:	0017f693          	andi	a3,a5,1
    4156:	4701                	li	a4,0
    4158:	e699                	bnez	a3,4166 <__lo0bits+0x1c>
    415a:	0027f713          	andi	a4,a5,2
    415e:	c711                	beqz	a4,416a <__lo0bits+0x20>
    4160:	8385                	srli	a5,a5,0x1
    4162:	c11c                	sw	a5,0(a0)
    4164:	4705                	li	a4,1
    4166:	853a                	mv	a0,a4
    4168:	8082                	ret
    416a:	8389                	srli	a5,a5,0x2
    416c:	c11c                	sw	a5,0(a0)
    416e:	4709                	li	a4,2
    4170:	bfdd                	j	4166 <__lo0bits+0x1c>
    4172:	01079693          	slli	a3,a5,0x10
    4176:	82c1                	srli	a3,a3,0x10
    4178:	4701                	li	a4,0
    417a:	e299                	bnez	a3,4180 <__lo0bits+0x36>
    417c:	83c1                	srli	a5,a5,0x10
    417e:	4741                	li	a4,16
    4180:	0ff7f693          	andi	a3,a5,255
    4184:	e299                	bnez	a3,418a <__lo0bits+0x40>
    4186:	0721                	addi	a4,a4,8
    4188:	83a1                	srli	a5,a5,0x8
    418a:	00f7f693          	andi	a3,a5,15
    418e:	e299                	bnez	a3,4194 <__lo0bits+0x4a>
    4190:	0711                	addi	a4,a4,4
    4192:	8391                	srli	a5,a5,0x4
    4194:	0037f693          	andi	a3,a5,3
    4198:	e299                	bnez	a3,419e <__lo0bits+0x54>
    419a:	0709                	addi	a4,a4,2
    419c:	8389                	srli	a5,a5,0x2
    419e:	0017f693          	andi	a3,a5,1
    41a2:	e681                	bnez	a3,41aa <__lo0bits+0x60>
    41a4:	8385                	srli	a5,a5,0x1
    41a6:	0705                	addi	a4,a4,1
    41a8:	c399                	beqz	a5,41ae <__lo0bits+0x64>
    41aa:	c11c                	sw	a5,0(a0)
    41ac:	bf6d                	j	4166 <__lo0bits+0x1c>
    41ae:	02000713          	li	a4,32
    41b2:	bf55                	j	4166 <__lo0bits+0x1c>

000041b4 <__i2b>:
    41b4:	1141                	addi	sp,sp,-16
    41b6:	c422                	sw	s0,8(sp)
    41b8:	842e                	mv	s0,a1
    41ba:	4585                	li	a1,1
    41bc:	c606                	sw	ra,12(sp)
    41be:	33f5                	jal	3faa <_Balloc>
    41c0:	c940                	sw	s0,20(a0)
    41c2:	40b2                	lw	ra,12(sp)
    41c4:	4422                	lw	s0,8(sp)
    41c6:	4705                	li	a4,1
    41c8:	c918                	sw	a4,16(a0)
    41ca:	0141                	addi	sp,sp,16
    41cc:	8082                	ret

000041ce <__multiply>:
    41ce:	4998                	lw	a4,16(a1)
    41d0:	4a1c                	lw	a5,16(a2)
    41d2:	7179                	addi	sp,sp,-48
    41d4:	d226                	sw	s1,36(sp)
    41d6:	d606                	sw	ra,44(sp)
    41d8:	d422                	sw	s0,40(sp)
    41da:	d04a                	sw	s2,32(sp)
    41dc:	ce4e                	sw	s3,28(sp)
    41de:	84ae                	mv	s1,a1
    41e0:	00f75463          	bge	a4,a5,41e8 <__multiply+0x1a>
    41e4:	84b2                	mv	s1,a2
    41e6:	862e                	mv	a2,a1
    41e8:	0104a983          	lw	s3,16(s1)
    41ec:	01062903          	lw	s2,16(a2) # 10010 <_data_lma+0x8e3c>
    41f0:	449c                	lw	a5,8(s1)
    41f2:	40cc                	lw	a1,4(s1)
    41f4:	01298433          	add	s0,s3,s2
    41f8:	0087d363          	bge	a5,s0,41fe <__multiply+0x30>
    41fc:	0585                	addi	a1,a1,1
    41fe:	c632                	sw	a2,12(sp)
    4200:	336d                	jal	3faa <_Balloc>
    4202:	4632                	lw	a2,12(sp)
    4204:	01450813          	addi	a6,a0,20 # 10014 <_data_lma+0x8e40>
    4208:	00241313          	slli	t1,s0,0x2
    420c:	9342                	add	t1,t1,a6
    420e:	87c2                	mv	a5,a6
    4210:	0267ed63          	bltu	a5,t1,424a <__multiply+0x7c>
    4214:	01448593          	addi	a1,s1,20
    4218:	00299893          	slli	a7,s3,0x2
    421c:	0651                	addi	a2,a2,20
    421e:	00291e13          	slli	t3,s2,0x2
    4222:	66c1                	lui	a3,0x10
    4224:	98ae                	add	a7,a7,a1
    4226:	9e32                	add	t3,t3,a2
    4228:	16fd                	addi	a3,a3,-1
    422a:	03c66463          	bltu	a2,t3,4252 <__multiply+0x84>
    422e:	00805663          	blez	s0,423a <__multiply+0x6c>
    4232:	1371                	addi	t1,t1,-4
    4234:	00032783          	lw	a5,0(t1)
    4238:	cbf1                	beqz	a5,430c <__multiply+0x13e>
    423a:	c900                	sw	s0,16(a0)
    423c:	50b2                	lw	ra,44(sp)
    423e:	5422                	lw	s0,40(sp)
    4240:	5492                	lw	s1,36(sp)
    4242:	5902                	lw	s2,32(sp)
    4244:	49f2                	lw	s3,28(sp)
    4246:	6145                	addi	sp,sp,48
    4248:	8082                	ret
    424a:	0007a023          	sw	zero,0(a5)
    424e:	0791                	addi	a5,a5,4
    4250:	b7c1                	j	4210 <__multiply+0x42>
    4252:	00062f83          	lw	t6,0(a2)
    4256:	00dfffb3          	and	t6,t6,a3
    425a:	040f8a63          	beqz	t6,42ae <__multiply+0xe0>
    425e:	8f42                	mv	t5,a6
    4260:	82ae                	mv	t0,a1
    4262:	4481                	li	s1,0
    4264:	0002a703          	lw	a4,0(t0)
    4268:	000f2383          	lw	t2,0(t5)
    426c:	0f11                	addi	t5,t5,4
    426e:	00d77eb3          	and	t4,a4,a3
    4272:	03fe8eb3          	mul	t4,t4,t6
    4276:	00d3f7b3          	and	a5,t2,a3
    427a:	0103d393          	srli	t2,t2,0x10
    427e:	0291                	addi	t0,t0,4
    4280:	9ebe                	add	t4,t4,a5
    4282:	01075793          	srli	a5,a4,0x10
    4286:	03f787b3          	mul	a5,a5,t6
    428a:	9ea6                	add	t4,t4,s1
    428c:	010ed713          	srli	a4,t4,0x10
    4290:	00defeb3          	and	t4,t4,a3
    4294:	979e                	add	a5,a5,t2
    4296:	97ba                	add	a5,a5,a4
    4298:	0107d493          	srli	s1,a5,0x10
    429c:	07c2                	slli	a5,a5,0x10
    429e:	01d7e7b3          	or	a5,a5,t4
    42a2:	feff2e23          	sw	a5,-4(t5)
    42a6:	fb12efe3          	bltu	t0,a7,4264 <__multiply+0x96>
    42aa:	009f2023          	sw	s1,0(t5)
    42ae:	00265283          	lhu	t0,2(a2)
    42b2:	04028a63          	beqz	t0,4306 <__multiply+0x138>
    42b6:	00082783          	lw	a5,0(a6)
    42ba:	8ec2                	mv	t4,a6
    42bc:	8f2e                	mv	t5,a1
    42be:	4f81                	li	t6,0
    42c0:	000f2703          	lw	a4,0(t5)
    42c4:	002ed383          	lhu	t2,2(t4)
    42c8:	8ff5                	and	a5,a5,a3
    42ca:	8f75                	and	a4,a4,a3
    42cc:	02570733          	mul	a4,a4,t0
    42d0:	0e91                	addi	t4,t4,4
    42d2:	0f11                	addi	t5,t5,4
    42d4:	971e                	add	a4,a4,t2
    42d6:	977e                	add	a4,a4,t6
    42d8:	01071f93          	slli	t6,a4,0x10
    42dc:	00ffe7b3          	or	a5,t6,a5
    42e0:	fefeae23          	sw	a5,-4(t4)
    42e4:	ffef5783          	lhu	a5,-2(t5)
    42e8:	000eaf83          	lw	t6,0(t4)
    42ec:	8341                	srli	a4,a4,0x10
    42ee:	025787b3          	mul	a5,a5,t0
    42f2:	00dfffb3          	and	t6,t6,a3
    42f6:	97fe                	add	a5,a5,t6
    42f8:	97ba                	add	a5,a5,a4
    42fa:	0107df93          	srli	t6,a5,0x10
    42fe:	fd1f61e3          	bltu	t5,a7,42c0 <__multiply+0xf2>
    4302:	00fea023          	sw	a5,0(t4)
    4306:	0611                	addi	a2,a2,4
    4308:	0811                	addi	a6,a6,4
    430a:	b705                	j	422a <__multiply+0x5c>
    430c:	147d                	addi	s0,s0,-1
    430e:	b705                	j	422e <__multiply+0x60>

00004310 <__pow5mult>:
    4310:	1101                	addi	sp,sp,-32
    4312:	ca26                	sw	s1,20(sp)
    4314:	c84a                	sw	s2,16(sp)
    4316:	c64e                	sw	s3,12(sp)
    4318:	ce06                	sw	ra,28(sp)
    431a:	cc22                	sw	s0,24(sp)
    431c:	c452                	sw	s4,8(sp)
    431e:	00367793          	andi	a5,a2,3
    4322:	892a                	mv	s2,a0
    4324:	84b2                	mv	s1,a2
    4326:	89ae                	mv	s3,a1
    4328:	cf81                	beqz	a5,4340 <__pow5mult+0x30>
    432a:	17fd                	addi	a5,a5,-1
    432c:	00003717          	auipc	a4,0x3
    4330:	bf470713          	addi	a4,a4,-1036 # 6f20 <p05.3319>
    4334:	078a                	slli	a5,a5,0x2
    4336:	97ba                	add	a5,a5,a4
    4338:	4390                	lw	a2,0(a5)
    433a:	4681                	li	a3,0
    433c:	3b1d                	jal	4072 <__multadd>
    433e:	89aa                	mv	s3,a0
    4340:	8489                	srai	s1,s1,0x2
    4342:	c8ad                	beqz	s1,43b4 <__pow5mult+0xa4>
    4344:	02492783          	lw	a5,36(s2)
    4348:	ef91                	bnez	a5,4364 <__pow5mult+0x54>
    434a:	4541                	li	a0,16
    434c:	b89ff0ef          	jal	ra,3ed4 <malloc>
    4350:	02a92223          	sw	a0,36(s2)
    4354:	00052223          	sw	zero,4(a0)
    4358:	00052423          	sw	zero,8(a0)
    435c:	00052023          	sw	zero,0(a0)
    4360:	00052623          	sw	zero,12(a0)
    4364:	02492a03          	lw	s4,36(s2)
    4368:	008a2403          	lw	s0,8(s4)
    436c:	e811                	bnez	s0,4380 <__pow5mult+0x70>
    436e:	27100593          	li	a1,625
    4372:	854a                	mv	a0,s2
    4374:	3581                	jal	41b4 <__i2b>
    4376:	00aa2423          	sw	a0,8(s4)
    437a:	842a                	mv	s0,a0
    437c:	00052023          	sw	zero,0(a0)
    4380:	0014f793          	andi	a5,s1,1
    4384:	cb99                	beqz	a5,439a <__pow5mult+0x8a>
    4386:	85ce                	mv	a1,s3
    4388:	8622                	mv	a2,s0
    438a:	854a                	mv	a0,s2
    438c:	3589                	jal	41ce <__multiply>
    438e:	8a2a                	mv	s4,a0
    4390:	85ce                	mv	a1,s3
    4392:	854a                	mv	a0,s2
    4394:	c9dff0ef          	jal	ra,4030 <_Bfree>
    4398:	89d2                	mv	s3,s4
    439a:	8485                	srai	s1,s1,0x1
    439c:	cc81                	beqz	s1,43b4 <__pow5mult+0xa4>
    439e:	4008                	lw	a0,0(s0)
    43a0:	e901                	bnez	a0,43b0 <__pow5mult+0xa0>
    43a2:	8622                	mv	a2,s0
    43a4:	85a2                	mv	a1,s0
    43a6:	854a                	mv	a0,s2
    43a8:	351d                	jal	41ce <__multiply>
    43aa:	c008                	sw	a0,0(s0)
    43ac:	00052023          	sw	zero,0(a0)
    43b0:	842a                	mv	s0,a0
    43b2:	b7f9                	j	4380 <__pow5mult+0x70>
    43b4:	40f2                	lw	ra,28(sp)
    43b6:	4462                	lw	s0,24(sp)
    43b8:	854e                	mv	a0,s3
    43ba:	44d2                	lw	s1,20(sp)
    43bc:	4942                	lw	s2,16(sp)
    43be:	49b2                	lw	s3,12(sp)
    43c0:	4a22                	lw	s4,8(sp)
    43c2:	6105                	addi	sp,sp,32
    43c4:	8082                	ret

000043c6 <__lshift>:
    43c6:	7179                	addi	sp,sp,-48
    43c8:	d226                	sw	s1,36(sp)
    43ca:	84ae                	mv	s1,a1
    43cc:	ce4e                	sw	s3,28(sp)
    43ce:	0104a983          	lw	s3,16(s1)
    43d2:	d422                	sw	s0,40(sp)
    43d4:	41cc                	lw	a1,4(a1)
    43d6:	40565413          	srai	s0,a2,0x5
    43da:	449c                	lw	a5,8(s1)
    43dc:	99a2                	add	s3,s3,s0
    43de:	d04a                	sw	s2,32(sp)
    43e0:	ca56                	sw	s5,20(sp)
    43e2:	d606                	sw	ra,44(sp)
    43e4:	cc52                	sw	s4,24(sp)
    43e6:	8aaa                	mv	s5,a0
    43e8:	00198913          	addi	s2,s3,1
    43ec:	0927c463          	blt	a5,s2,4474 <__lshift+0xae>
    43f0:	8556                	mv	a0,s5
    43f2:	c632                	sw	a2,12(sp)
    43f4:	bb7ff0ef          	jal	ra,3faa <_Balloc>
    43f8:	4632                	lw	a2,12(sp)
    43fa:	01450793          	addi	a5,a0,20
    43fe:	8a2a                	mv	s4,a0
    4400:	86be                	mv	a3,a5
    4402:	4701                	li	a4,0
    4404:	0691                	addi	a3,a3,4
    4406:	06874a63          	blt	a4,s0,447a <__lshift+0xb4>
    440a:	00045363          	bgez	s0,4410 <__lshift+0x4a>
    440e:	4401                	li	s0,0
    4410:	4894                	lw	a3,16(s1)
    4412:	040a                	slli	s0,s0,0x2
    4414:	00878733          	add	a4,a5,s0
    4418:	068a                	slli	a3,a3,0x2
    441a:	01448793          	addi	a5,s1,20
    441e:	8a7d                	andi	a2,a2,31
    4420:	96be                	add	a3,a3,a5
    4422:	c225                	beqz	a2,4482 <__lshift+0xbc>
    4424:	02000813          	li	a6,32
    4428:	40c80833          	sub	a6,a6,a2
    442c:	4581                	li	a1,0
    442e:	4388                	lw	a0,0(a5)
    4430:	0711                	addi	a4,a4,4
    4432:	0791                	addi	a5,a5,4
    4434:	00c51533          	sll	a0,a0,a2
    4438:	8dc9                	or	a1,a1,a0
    443a:	feb72e23          	sw	a1,-4(a4)
    443e:	ffc7a583          	lw	a1,-4(a5)
    4442:	0105d5b3          	srl	a1,a1,a6
    4446:	fed7e4e3          	bltu	a5,a3,442e <__lshift+0x68>
    444a:	c30c                	sw	a1,0(a4)
    444c:	c199                	beqz	a1,4452 <__lshift+0x8c>
    444e:	00298913          	addi	s2,s3,2
    4452:	197d                	addi	s2,s2,-1
    4454:	012a2823          	sw	s2,16(s4)
    4458:	8556                	mv	a0,s5
    445a:	85a6                	mv	a1,s1
    445c:	bd5ff0ef          	jal	ra,4030 <_Bfree>
    4460:	50b2                	lw	ra,44(sp)
    4462:	5422                	lw	s0,40(sp)
    4464:	8552                	mv	a0,s4
    4466:	5492                	lw	s1,36(sp)
    4468:	5902                	lw	s2,32(sp)
    446a:	49f2                	lw	s3,28(sp)
    446c:	4a62                	lw	s4,24(sp)
    446e:	4ad2                	lw	s5,20(sp)
    4470:	6145                	addi	sp,sp,48
    4472:	8082                	ret
    4474:	0585                	addi	a1,a1,1
    4476:	0786                	slli	a5,a5,0x1
    4478:	bf95                	j	43ec <__lshift+0x26>
    447a:	fe06ae23          	sw	zero,-4(a3) # fffc <_data_lma+0x8e28>
    447e:	0705                	addi	a4,a4,1
    4480:	b751                	j	4404 <__lshift+0x3e>
    4482:	0791                	addi	a5,a5,4
    4484:	ffc7a603          	lw	a2,-4(a5)
    4488:	0711                	addi	a4,a4,4
    448a:	fec72e23          	sw	a2,-4(a4)
    448e:	fed7eae3          	bltu	a5,a3,4482 <__lshift+0xbc>
    4492:	b7c1                	j	4452 <__lshift+0x8c>

00004494 <__mcmp>:
    4494:	491c                	lw	a5,16(a0)
    4496:	4998                	lw	a4,16(a1)
    4498:	8f99                	sub	a5,a5,a4
    449a:	e38d                	bnez	a5,44bc <__mcmp+0x28>
    449c:	070a                	slli	a4,a4,0x2
    449e:	0551                	addi	a0,a0,20
    44a0:	05d1                	addi	a1,a1,20
    44a2:	00e506b3          	add	a3,a0,a4
    44a6:	95ba                	add	a1,a1,a4
    44a8:	16f1                	addi	a3,a3,-4
    44aa:	15f1                	addi	a1,a1,-4
    44ac:	4290                	lw	a2,0(a3)
    44ae:	4198                	lw	a4,0(a1)
    44b0:	00e60863          	beq	a2,a4,44c0 <__mcmp+0x2c>
    44b4:	57fd                	li	a5,-1
    44b6:	00e66363          	bltu	a2,a4,44bc <__mcmp+0x28>
    44ba:	4785                	li	a5,1
    44bc:	853e                	mv	a0,a5
    44be:	8082                	ret
    44c0:	fed564e3          	bltu	a0,a3,44a8 <__mcmp+0x14>
    44c4:	bfe5                	j	44bc <__mcmp+0x28>

000044c6 <__mdiff>:
    44c6:	1101                	addi	sp,sp,-32
    44c8:	ca26                	sw	s1,20(sp)
    44ca:	84ae                	mv	s1,a1
    44cc:	c64e                	sw	s3,12(sp)
    44ce:	85b2                	mv	a1,a2
    44d0:	89aa                	mv	s3,a0
    44d2:	8526                	mv	a0,s1
    44d4:	cc22                	sw	s0,24(sp)
    44d6:	ce06                	sw	ra,28(sp)
    44d8:	c84a                	sw	s2,16(sp)
    44da:	8432                	mv	s0,a2
    44dc:	3f65                	jal	4494 <__mcmp>
    44de:	e105                	bnez	a0,44fe <__mdiff+0x38>
    44e0:	4581                	li	a1,0
    44e2:	854e                	mv	a0,s3
    44e4:	ac7ff0ef          	jal	ra,3faa <_Balloc>
    44e8:	4785                	li	a5,1
    44ea:	c91c                	sw	a5,16(a0)
    44ec:	00052a23          	sw	zero,20(a0)
    44f0:	40f2                	lw	ra,28(sp)
    44f2:	4462                	lw	s0,24(sp)
    44f4:	44d2                	lw	s1,20(sp)
    44f6:	4942                	lw	s2,16(sp)
    44f8:	49b2                	lw	s3,12(sp)
    44fa:	6105                	addi	sp,sp,32
    44fc:	8082                	ret
    44fe:	4905                	li	s2,1
    4500:	00054663          	bltz	a0,450c <__mdiff+0x46>
    4504:	87a2                	mv	a5,s0
    4506:	4901                	li	s2,0
    4508:	8426                	mv	s0,s1
    450a:	84be                	mv	s1,a5
    450c:	404c                	lw	a1,4(s0)
    450e:	854e                	mv	a0,s3
    4510:	a9bff0ef          	jal	ra,3faa <_Balloc>
    4514:	01042303          	lw	t1,16(s0)
    4518:	0104a883          	lw	a7,16(s1)
    451c:	01440613          	addi	a2,s0,20
    4520:	00231e13          	slli	t3,t1,0x2
    4524:	01448813          	addi	a6,s1,20
    4528:	088a                	slli	a7,a7,0x2
    452a:	6ec1                	lui	t4,0x10
    452c:	01252623          	sw	s2,12(a0)
    4530:	9e32                	add	t3,t3,a2
    4532:	98c2                	add	a7,a7,a6
    4534:	01450693          	addi	a3,a0,20
    4538:	4f01                	li	t5,0
    453a:	1efd                	addi	t4,t4,-1
    453c:	4218                	lw	a4,0(a2)
    453e:	00082f83          	lw	t6,0(a6)
    4542:	0691                	addi	a3,a3,4
    4544:	01d775b3          	and	a1,a4,t4
    4548:	01dff7b3          	and	a5,t6,t4
    454c:	95fa                	add	a1,a1,t5
    454e:	8d9d                	sub	a1,a1,a5
    4550:	010fdf93          	srli	t6,t6,0x10
    4554:	01075793          	srli	a5,a4,0x10
    4558:	41f787b3          	sub	a5,a5,t6
    455c:	4105d713          	srai	a4,a1,0x10
    4560:	97ba                	add	a5,a5,a4
    4562:	4107df13          	srai	t5,a5,0x10
    4566:	01d5f5b3          	and	a1,a1,t4
    456a:	07c2                	slli	a5,a5,0x10
    456c:	8fcd                	or	a5,a5,a1
    456e:	0811                	addi	a6,a6,4
    4570:	fef6ae23          	sw	a5,-4(a3)
    4574:	0611                	addi	a2,a2,4
    4576:	fd1863e3          	bltu	a6,a7,453c <__mdiff+0x76>
    457a:	65c1                	lui	a1,0x10
    457c:	15fd                	addi	a1,a1,-1
    457e:	01c66863          	bltu	a2,t3,458e <__mdiff+0xc8>
    4582:	16f1                	addi	a3,a3,-4
    4584:	429c                	lw	a5,0(a3)
    4586:	c795                	beqz	a5,45b2 <__mdiff+0xec>
    4588:	00652823          	sw	t1,16(a0)
    458c:	b795                	j	44f0 <__mdiff+0x2a>
    458e:	421c                	lw	a5,0(a2)
    4590:	0691                	addi	a3,a3,4
    4592:	0611                	addi	a2,a2,4
    4594:	00b7f733          	and	a4,a5,a1
    4598:	977a                	add	a4,a4,t5
    459a:	41075813          	srai	a6,a4,0x10
    459e:	83c1                	srli	a5,a5,0x10
    45a0:	97c2                	add	a5,a5,a6
    45a2:	4107df13          	srai	t5,a5,0x10
    45a6:	8f6d                	and	a4,a4,a1
    45a8:	07c2                	slli	a5,a5,0x10
    45aa:	8fd9                	or	a5,a5,a4
    45ac:	fef6ae23          	sw	a5,-4(a3)
    45b0:	b7f9                	j	457e <__mdiff+0xb8>
    45b2:	137d                	addi	t1,t1,-1
    45b4:	b7f9                	j	4582 <__mdiff+0xbc>

000045b6 <__d2b>:
    45b6:	7179                	addi	sp,sp,-48
    45b8:	d422                	sw	s0,40(sp)
    45ba:	842e                	mv	s0,a1
    45bc:	4585                	li	a1,1
    45be:	d226                	sw	s1,36(sp)
    45c0:	d04a                	sw	s2,32(sp)
    45c2:	84b2                	mv	s1,a2
    45c4:	ce4e                	sw	s3,28(sp)
    45c6:	cc52                	sw	s4,24(sp)
    45c8:	893a                	mv	s2,a4
    45ca:	d606                	sw	ra,44(sp)
    45cc:	8a36                	mv	s4,a3
    45ce:	9ddff0ef          	jal	ra,3faa <_Balloc>
    45d2:	00100737          	lui	a4,0x100
    45d6:	fff70793          	addi	a5,a4,-1 # fffff <_data_lma+0xf8e2b>
    45da:	8fe5                	and	a5,a5,s1
    45dc:	80d1                	srli	s1,s1,0x14
    45de:	7ff4f493          	andi	s1,s1,2047
    45e2:	89aa                	mv	s3,a0
    45e4:	e0b5                	bnez	s1,4648 <__d2b+0x92>
    45e6:	c63e                	sw	a5,12(sp)
    45e8:	c42d                	beqz	s0,4652 <__d2b+0x9c>
    45ea:	0028                	addi	a0,sp,8
    45ec:	c422                	sw	s0,8(sp)
    45ee:	b5dff0ef          	jal	ra,414a <__lo0bits>
    45f2:	46a2                	lw	a3,8(sp)
    45f4:	cd21                	beqz	a0,464c <__d2b+0x96>
    45f6:	4732                	lw	a4,12(sp)
    45f8:	02000793          	li	a5,32
    45fc:	8f89                	sub	a5,a5,a0
    45fe:	00f717b3          	sll	a5,a4,a5
    4602:	8fd5                	or	a5,a5,a3
    4604:	00a75733          	srl	a4,a4,a0
    4608:	00f9aa23          	sw	a5,20(s3)
    460c:	c63a                	sw	a4,12(sp)
    460e:	4432                	lw	s0,12(sp)
    4610:	0089ac23          	sw	s0,24(s3)
    4614:	00803433          	snez	s0,s0
    4618:	0405                	addi	s0,s0,1
    461a:	0089a823          	sw	s0,16(s3)
    461e:	c4b9                	beqz	s1,466c <__d2b+0xb6>
    4620:	bcd48493          	addi	s1,s1,-1075
    4624:	94aa                	add	s1,s1,a0
    4626:	03500793          	li	a5,53
    462a:	009a2023          	sw	s1,0(s4)
    462e:	40a78533          	sub	a0,a5,a0
    4632:	00a92023          	sw	a0,0(s2)
    4636:	50b2                	lw	ra,44(sp)
    4638:	5422                	lw	s0,40(sp)
    463a:	854e                	mv	a0,s3
    463c:	5492                	lw	s1,36(sp)
    463e:	5902                	lw	s2,32(sp)
    4640:	49f2                	lw	s3,28(sp)
    4642:	4a62                	lw	s4,24(sp)
    4644:	6145                	addi	sp,sp,48
    4646:	8082                	ret
    4648:	8fd9                	or	a5,a5,a4
    464a:	bf71                	j	45e6 <__d2b+0x30>
    464c:	00d9aa23          	sw	a3,20(s3)
    4650:	bf7d                	j	460e <__d2b+0x58>
    4652:	0068                	addi	a0,sp,12
    4654:	af7ff0ef          	jal	ra,414a <__lo0bits>
    4658:	47b2                	lw	a5,12(sp)
    465a:	02050513          	addi	a0,a0,32
    465e:	4405                	li	s0,1
    4660:	00f9aa23          	sw	a5,20(s3)
    4664:	4785                	li	a5,1
    4666:	00f9a823          	sw	a5,16(s3)
    466a:	bf55                	j	461e <__d2b+0x68>
    466c:	00241793          	slli	a5,s0,0x2
    4670:	bce50513          	addi	a0,a0,-1074
    4674:	97ce                	add	a5,a5,s3
    4676:	00aa2023          	sw	a0,0(s4)
    467a:	4b88                	lw	a0,16(a5)
    467c:	0416                	slli	s0,s0,0x5
    467e:	a87ff0ef          	jal	ra,4104 <__hi0bits>
    4682:	8c09                	sub	s0,s0,a0
    4684:	00892023          	sw	s0,0(s2)
    4688:	b77d                	j	4636 <__d2b+0x80>

0000468a <_calloc_r>:
    468a:	02c58633          	mul	a2,a1,a2
    468e:	1101                	addi	sp,sp,-32
    4690:	cc22                	sw	s0,24(sp)
    4692:	ce06                	sw	ra,28(sp)
    4694:	85b2                	mv	a1,a2
    4696:	c632                	sw	a2,12(sp)
    4698:	2875                	jal	4754 <_malloc_r>
    469a:	842a                	mv	s0,a0
    469c:	c509                	beqz	a0,46a6 <_calloc_r+0x1c>
    469e:	4632                	lw	a2,12(sp)
    46a0:	4581                	li	a1,0
    46a2:	b5ffb0ef          	jal	ra,200 <memset>
    46a6:	8522                	mv	a0,s0
    46a8:	40f2                	lw	ra,28(sp)
    46aa:	4462                	lw	s0,24(sp)
    46ac:	6105                	addi	sp,sp,32
    46ae:	8082                	ret

000046b0 <_free_r>:
    46b0:	c1cd                	beqz	a1,4752 <_free_r+0xa2>
    46b2:	ffc5a783          	lw	a5,-4(a1) # fffc <_data_lma+0x8e28>
    46b6:	1141                	addi	sp,sp,-16
    46b8:	c422                	sw	s0,8(sp)
    46ba:	c606                	sw	ra,12(sp)
    46bc:	c226                	sw	s1,4(sp)
    46be:	ffc58413          	addi	s0,a1,-4
    46c2:	0007d363          	bgez	a5,46c8 <_free_r+0x18>
    46c6:	943e                	add	s0,s0,a5
    46c8:	84aa                	mv	s1,a0
    46ca:	2db1                	jal	4d26 <__malloc_lock>
    46cc:	82c18793          	addi	a5,gp,-2004 # 2000020c <__malloc_free_list>
    46d0:	439c                	lw	a5,0(a5)
    46d2:	eb99                	bnez	a5,46e8 <_free_r+0x38>
    46d4:	00042223          	sw	zero,4(s0)
    46d8:	8281a623          	sw	s0,-2004(gp) # 2000020c <__malloc_free_list>
    46dc:	4422                	lw	s0,8(sp)
    46de:	40b2                	lw	ra,12(sp)
    46e0:	8526                	mv	a0,s1
    46e2:	4492                	lw	s1,4(sp)
    46e4:	0141                	addi	sp,sp,16
    46e6:	a589                	j	4d28 <__malloc_unlock>
    46e8:	00f47e63          	bgeu	s0,a5,4704 <_free_r+0x54>
    46ec:	4014                	lw	a3,0(s0)
    46ee:	00d40733          	add	a4,s0,a3
    46f2:	00e79663          	bne	a5,a4,46fe <_free_r+0x4e>
    46f6:	4398                	lw	a4,0(a5)
    46f8:	43dc                	lw	a5,4(a5)
    46fa:	9736                	add	a4,a4,a3
    46fc:	c018                	sw	a4,0(s0)
    46fe:	c05c                	sw	a5,4(s0)
    4700:	bfe1                	j	46d8 <_free_r+0x28>
    4702:	87ba                	mv	a5,a4
    4704:	43d8                	lw	a4,4(a5)
    4706:	c319                	beqz	a4,470c <_free_r+0x5c>
    4708:	fee47de3          	bgeu	s0,a4,4702 <_free_r+0x52>
    470c:	4394                	lw	a3,0(a5)
    470e:	00d78633          	add	a2,a5,a3
    4712:	00861f63          	bne	a2,s0,4730 <_free_r+0x80>
    4716:	4010                	lw	a2,0(s0)
    4718:	96b2                	add	a3,a3,a2
    471a:	c394                	sw	a3,0(a5)
    471c:	00d78633          	add	a2,a5,a3
    4720:	fac71ee3          	bne	a4,a2,46dc <_free_r+0x2c>
    4724:	4310                	lw	a2,0(a4)
    4726:	4358                	lw	a4,4(a4)
    4728:	96b2                	add	a3,a3,a2
    472a:	c394                	sw	a3,0(a5)
    472c:	c3d8                	sw	a4,4(a5)
    472e:	b77d                	j	46dc <_free_r+0x2c>
    4730:	00c47563          	bgeu	s0,a2,473a <_free_r+0x8a>
    4734:	47b1                	li	a5,12
    4736:	c09c                	sw	a5,0(s1)
    4738:	b755                	j	46dc <_free_r+0x2c>
    473a:	4010                	lw	a2,0(s0)
    473c:	00c406b3          	add	a3,s0,a2
    4740:	00d71663          	bne	a4,a3,474c <_free_r+0x9c>
    4744:	4314                	lw	a3,0(a4)
    4746:	4358                	lw	a4,4(a4)
    4748:	96b2                	add	a3,a3,a2
    474a:	c014                	sw	a3,0(s0)
    474c:	c058                	sw	a4,4(s0)
    474e:	c3c0                	sw	s0,4(a5)
    4750:	b771                	j	46dc <_free_r+0x2c>
    4752:	8082                	ret

00004754 <_malloc_r>:
    4754:	1101                	addi	sp,sp,-32
    4756:	ca26                	sw	s1,20(sp)
    4758:	00358493          	addi	s1,a1,3
    475c:	98f1                	andi	s1,s1,-4
    475e:	ce06                	sw	ra,28(sp)
    4760:	cc22                	sw	s0,24(sp)
    4762:	c84a                	sw	s2,16(sp)
    4764:	c64e                	sw	s3,12(sp)
    4766:	04a1                	addi	s1,s1,8
    4768:	47b1                	li	a5,12
    476a:	04f4f163          	bgeu	s1,a5,47ac <_malloc_r+0x58>
    476e:	44b1                	li	s1,12
    4770:	04b4e063          	bltu	s1,a1,47b0 <_malloc_r+0x5c>
    4774:	892a                	mv	s2,a0
    4776:	2b45                	jal	4d26 <__malloc_lock>
    4778:	82c18793          	addi	a5,gp,-2004 # 2000020c <__malloc_free_list>
    477c:	4398                	lw	a4,0(a5)
    477e:	843a                	mv	s0,a4
    4780:	e031                	bnez	s0,47c4 <_malloc_r+0x70>
    4782:	83018793          	addi	a5,gp,-2000 # 20000210 <__malloc_sbrk_start>
    4786:	439c                	lw	a5,0(a5)
    4788:	e791                	bnez	a5,4794 <_malloc_r+0x40>
    478a:	4581                	li	a1,0
    478c:	854a                	mv	a0,s2
    478e:	2659                	jal	4b14 <_sbrk_r>
    4790:	82a1a823          	sw	a0,-2000(gp) # 20000210 <__malloc_sbrk_start>
    4794:	85a6                	mv	a1,s1
    4796:	854a                	mv	a0,s2
    4798:	2eb5                	jal	4b14 <_sbrk_r>
    479a:	59fd                	li	s3,-1
    479c:	07351763          	bne	a0,s3,480a <_malloc_r+0xb6>
    47a0:	47b1                	li	a5,12
    47a2:	00f92023          	sw	a5,0(s2)
    47a6:	854a                	mv	a0,s2
    47a8:	2341                	jal	4d28 <__malloc_unlock>
    47aa:	a029                	j	47b4 <_malloc_r+0x60>
    47ac:	fc04d2e3          	bgez	s1,4770 <_malloc_r+0x1c>
    47b0:	47b1                	li	a5,12
    47b2:	c11c                	sw	a5,0(a0)
    47b4:	4501                	li	a0,0
    47b6:	40f2                	lw	ra,28(sp)
    47b8:	4462                	lw	s0,24(sp)
    47ba:	44d2                	lw	s1,20(sp)
    47bc:	4942                	lw	s2,16(sp)
    47be:	49b2                	lw	s3,12(sp)
    47c0:	6105                	addi	sp,sp,32
    47c2:	8082                	ret
    47c4:	401c                	lw	a5,0(s0)
    47c6:	8f85                	sub	a5,a5,s1
    47c8:	0207ce63          	bltz	a5,4804 <_malloc_r+0xb0>
    47cc:	46ad                	li	a3,11
    47ce:	00f6f663          	bgeu	a3,a5,47da <_malloc_r+0x86>
    47d2:	c01c                	sw	a5,0(s0)
    47d4:	943e                	add	s0,s0,a5
    47d6:	c004                	sw	s1,0(s0)
    47d8:	a031                	j	47e4 <_malloc_r+0x90>
    47da:	405c                	lw	a5,4(s0)
    47dc:	02871263          	bne	a4,s0,4800 <_malloc_r+0xac>
    47e0:	82f1a623          	sw	a5,-2004(gp) # 2000020c <__malloc_free_list>
    47e4:	854a                	mv	a0,s2
    47e6:	2389                	jal	4d28 <__malloc_unlock>
    47e8:	00b40513          	addi	a0,s0,11
    47ec:	00440793          	addi	a5,s0,4
    47f0:	9961                	andi	a0,a0,-8
    47f2:	40f50733          	sub	a4,a0,a5
    47f6:	d361                	beqz	a4,47b6 <_malloc_r+0x62>
    47f8:	943a                	add	s0,s0,a4
    47fa:	8f89                	sub	a5,a5,a0
    47fc:	c01c                	sw	a5,0(s0)
    47fe:	bf65                	j	47b6 <_malloc_r+0x62>
    4800:	c35c                	sw	a5,4(a4)
    4802:	b7cd                	j	47e4 <_malloc_r+0x90>
    4804:	8722                	mv	a4,s0
    4806:	4040                	lw	s0,4(s0)
    4808:	bfa5                	j	4780 <_malloc_r+0x2c>
    480a:	00350413          	addi	s0,a0,3
    480e:	9871                	andi	s0,s0,-4
    4810:	fc8503e3          	beq	a0,s0,47d6 <_malloc_r+0x82>
    4814:	40a405b3          	sub	a1,s0,a0
    4818:	854a                	mv	a0,s2
    481a:	2ced                	jal	4b14 <_sbrk_r>
    481c:	fb351de3          	bne	a0,s3,47d6 <_malloc_r+0x82>
    4820:	b741                	j	47a0 <_malloc_r+0x4c>

00004822 <__sfputc_r>:
    4822:	461c                	lw	a5,8(a2)
    4824:	17fd                	addi	a5,a5,-1
    4826:	c61c                	sw	a5,8(a2)
    4828:	0007da63          	bgez	a5,483c <__sfputc_r+0x1a>
    482c:	4e18                	lw	a4,24(a2)
    482e:	00e7c563          	blt	a5,a4,4838 <__sfputc_r+0x16>
    4832:	47a9                	li	a5,10
    4834:	00f59463          	bne	a1,a5,483c <__sfputc_r+0x1a>
    4838:	accfe06f          	j	2b04 <__swbuf_r>
    483c:	421c                	lw	a5,0(a2)
    483e:	852e                	mv	a0,a1
    4840:	00178713          	addi	a4,a5,1
    4844:	c218                	sw	a4,0(a2)
    4846:	a38c                	sb	a1,0(a5)
    4848:	8082                	ret

0000484a <__sfputs_r>:
    484a:	1101                	addi	sp,sp,-32
    484c:	cc22                	sw	s0,24(sp)
    484e:	ca26                	sw	s1,20(sp)
    4850:	c84a                	sw	s2,16(sp)
    4852:	c64e                	sw	s3,12(sp)
    4854:	c452                	sw	s4,8(sp)
    4856:	ce06                	sw	ra,28(sp)
    4858:	892a                	mv	s2,a0
    485a:	89ae                	mv	s3,a1
    485c:	8432                	mv	s0,a2
    485e:	00d604b3          	add	s1,a2,a3
    4862:	5a7d                	li	s4,-1
    4864:	00941463          	bne	s0,s1,486c <__sfputs_r+0x22>
    4868:	4501                	li	a0,0
    486a:	a801                	j	487a <__sfputs_r+0x30>
    486c:	200c                	lbu	a1,0(s0)
    486e:	864e                	mv	a2,s3
    4870:	854a                	mv	a0,s2
    4872:	3f45                	jal	4822 <__sfputc_r>
    4874:	0405                	addi	s0,s0,1
    4876:	ff4517e3          	bne	a0,s4,4864 <__sfputs_r+0x1a>
    487a:	40f2                	lw	ra,28(sp)
    487c:	4462                	lw	s0,24(sp)
    487e:	44d2                	lw	s1,20(sp)
    4880:	4942                	lw	s2,16(sp)
    4882:	49b2                	lw	s3,12(sp)
    4884:	4a22                	lw	s4,8(sp)
    4886:	6105                	addi	sp,sp,32
    4888:	8082                	ret

0000488a <_vfiprintf_r>:
    488a:	7135                	addi	sp,sp,-160
    488c:	cd22                	sw	s0,152(sp)
    488e:	cb26                	sw	s1,148(sp)
    4890:	c94a                	sw	s2,144(sp)
    4892:	c74e                	sw	s3,140(sp)
    4894:	cf06                	sw	ra,156(sp)
    4896:	c552                	sw	s4,136(sp)
    4898:	c356                	sw	s5,132(sp)
    489a:	c15a                	sw	s6,128(sp)
    489c:	dede                	sw	s7,124(sp)
    489e:	dce2                	sw	s8,120(sp)
    48a0:	dae6                	sw	s9,116(sp)
    48a2:	89aa                	mv	s3,a0
    48a4:	84ae                	mv	s1,a1
    48a6:	8932                	mv	s2,a2
    48a8:	8436                	mv	s0,a3
    48aa:	c509                	beqz	a0,48b4 <_vfiprintf_r+0x2a>
    48ac:	4d1c                	lw	a5,24(a0)
    48ae:	e399                	bnez	a5,48b4 <_vfiprintf_r+0x2a>
    48b0:	bb6ff0ef          	jal	ra,3c66 <__sinit>
    48b4:	00002797          	auipc	a5,0x2
    48b8:	53c78793          	addi	a5,a5,1340 # 6df0 <__sf_fake_stdin>
    48bc:	0cf49863          	bne	s1,a5,498c <_vfiprintf_r+0x102>
    48c0:	0049a483          	lw	s1,4(s3)
    48c4:	24de                	lhu	a5,12(s1)
    48c6:	8ba1                	andi	a5,a5,8
    48c8:	c7e5                	beqz	a5,49b0 <_vfiprintf_r+0x126>
    48ca:	489c                	lw	a5,16(s1)
    48cc:	c3f5                	beqz	a5,49b0 <_vfiprintf_r+0x126>
    48ce:	02000793          	li	a5,32
    48d2:	02f104a3          	sb	a5,41(sp)
    48d6:	03000793          	li	a5,48
    48da:	d202                	sw	zero,36(sp)
    48dc:	02f10523          	sb	a5,42(sp)
    48e0:	c622                	sw	s0,12(sp)
    48e2:	02500b93          	li	s7,37
    48e6:	00002a97          	auipc	s5,0x2
    48ea:	646a8a93          	addi	s5,s5,1606 # 6f2c <p05.3319+0xc>
    48ee:	4c05                	li	s8,1
    48f0:	4b29                	li	s6,10
    48f2:	844a                	mv	s0,s2
    48f4:	201c                	lbu	a5,0(s0)
    48f6:	c399                	beqz	a5,48fc <_vfiprintf_r+0x72>
    48f8:	0d779f63          	bne	a5,s7,49d6 <_vfiprintf_r+0x14c>
    48fc:	41240cb3          	sub	s9,s0,s2
    4900:	000c8d63          	beqz	s9,491a <_vfiprintf_r+0x90>
    4904:	86e6                	mv	a3,s9
    4906:	864a                	mv	a2,s2
    4908:	85a6                	mv	a1,s1
    490a:	854e                	mv	a0,s3
    490c:	3f3d                	jal	484a <__sfputs_r>
    490e:	57fd                	li	a5,-1
    4910:	1ef50063          	beq	a0,a5,4af0 <_vfiprintf_r+0x266>
    4914:	5692                	lw	a3,36(sp)
    4916:	96e6                	add	a3,a3,s9
    4918:	d236                	sw	a3,36(sp)
    491a:	201c                	lbu	a5,0(s0)
    491c:	1c078a63          	beqz	a5,4af0 <_vfiprintf_r+0x266>
    4920:	57fd                	li	a5,-1
    4922:	00140913          	addi	s2,s0,1
    4926:	c802                	sw	zero,16(sp)
    4928:	ce02                	sw	zero,28(sp)
    492a:	ca3e                	sw	a5,20(sp)
    492c:	cc02                	sw	zero,24(sp)
    492e:	040109a3          	sb	zero,83(sp)
    4932:	d482                	sw	zero,104(sp)
    4934:	00094583          	lbu	a1,0(s2)
    4938:	4615                	li	a2,5
    493a:	8556                	mv	a0,s5
    493c:	da4ff0ef          	jal	ra,3ee0 <memchr>
    4940:	00190413          	addi	s0,s2,1
    4944:	47c2                	lw	a5,16(sp)
    4946:	e951                	bnez	a0,49da <_vfiprintf_r+0x150>
    4948:	0107f713          	andi	a4,a5,16
    494c:	c709                	beqz	a4,4956 <_vfiprintf_r+0xcc>
    494e:	02000713          	li	a4,32
    4952:	04e109a3          	sb	a4,83(sp)
    4956:	0087f713          	andi	a4,a5,8
    495a:	c709                	beqz	a4,4964 <_vfiprintf_r+0xda>
    495c:	02b00713          	li	a4,43
    4960:	04e109a3          	sb	a4,83(sp)
    4964:	00094683          	lbu	a3,0(s2)
    4968:	02a00713          	li	a4,42
    496c:	06e68f63          	beq	a3,a4,49ea <_vfiprintf_r+0x160>
    4970:	47f2                	lw	a5,28(sp)
    4972:	844a                	mv	s0,s2
    4974:	4681                	li	a3,0
    4976:	4625                	li	a2,9
    4978:	2018                	lbu	a4,0(s0)
    497a:	00140593          	addi	a1,s0,1
    497e:	fd070713          	addi	a4,a4,-48
    4982:	0ae67763          	bgeu	a2,a4,4a30 <_vfiprintf_r+0x1a6>
    4986:	cab5                	beqz	a3,49fa <_vfiprintf_r+0x170>
    4988:	ce3e                	sw	a5,28(sp)
    498a:	a885                	j	49fa <_vfiprintf_r+0x170>
    498c:	00002797          	auipc	a5,0x2
    4990:	48478793          	addi	a5,a5,1156 # 6e10 <__sf_fake_stdout>
    4994:	00f49563          	bne	s1,a5,499e <_vfiprintf_r+0x114>
    4998:	0089a483          	lw	s1,8(s3)
    499c:	b725                	j	48c4 <_vfiprintf_r+0x3a>
    499e:	00002797          	auipc	a5,0x2
    49a2:	43278793          	addi	a5,a5,1074 # 6dd0 <__sf_fake_stderr>
    49a6:	f0f49fe3          	bne	s1,a5,48c4 <_vfiprintf_r+0x3a>
    49aa:	00c9a483          	lw	s1,12(s3)
    49ae:	bf19                	j	48c4 <_vfiprintf_r+0x3a>
    49b0:	85a6                	mv	a1,s1
    49b2:	854e                	mv	a0,s3
    49b4:	a12fe0ef          	jal	ra,2bc6 <__swsetup_r>
    49b8:	d919                	beqz	a0,48ce <_vfiprintf_r+0x44>
    49ba:	557d                	li	a0,-1
    49bc:	40fa                	lw	ra,156(sp)
    49be:	446a                	lw	s0,152(sp)
    49c0:	44da                	lw	s1,148(sp)
    49c2:	494a                	lw	s2,144(sp)
    49c4:	49ba                	lw	s3,140(sp)
    49c6:	4a2a                	lw	s4,136(sp)
    49c8:	4a9a                	lw	s5,132(sp)
    49ca:	4b0a                	lw	s6,128(sp)
    49cc:	5bf6                	lw	s7,124(sp)
    49ce:	5c66                	lw	s8,120(sp)
    49d0:	5cd6                	lw	s9,116(sp)
    49d2:	610d                	addi	sp,sp,160
    49d4:	8082                	ret
    49d6:	0405                	addi	s0,s0,1
    49d8:	bf31                	j	48f4 <_vfiprintf_r+0x6a>
    49da:	41550533          	sub	a0,a0,s5
    49de:	00ac1533          	sll	a0,s8,a0
    49e2:	8fc9                	or	a5,a5,a0
    49e4:	c83e                	sw	a5,16(sp)
    49e6:	8922                	mv	s2,s0
    49e8:	b7b1                	j	4934 <_vfiprintf_r+0xaa>
    49ea:	4732                	lw	a4,12(sp)
    49ec:	00470693          	addi	a3,a4,4
    49f0:	4318                	lw	a4,0(a4)
    49f2:	c636                	sw	a3,12(sp)
    49f4:	02074763          	bltz	a4,4a22 <_vfiprintf_r+0x198>
    49f8:	ce3a                	sw	a4,28(sp)
    49fa:	2018                	lbu	a4,0(s0)
    49fc:	02e00793          	li	a5,46
    4a00:	04f71d63          	bne	a4,a5,4a5a <_vfiprintf_r+0x1d0>
    4a04:	3018                	lbu	a4,1(s0)
    4a06:	02a00793          	li	a5,42
    4a0a:	02f71b63          	bne	a4,a5,4a40 <_vfiprintf_r+0x1b6>
    4a0e:	47b2                	lw	a5,12(sp)
    4a10:	0409                	addi	s0,s0,2
    4a12:	00478713          	addi	a4,a5,4
    4a16:	439c                	lw	a5,0(a5)
    4a18:	c63a                	sw	a4,12(sp)
    4a1a:	0207c163          	bltz	a5,4a3c <_vfiprintf_r+0x1b2>
    4a1e:	ca3e                	sw	a5,20(sp)
    4a20:	a82d                	j	4a5a <_vfiprintf_r+0x1d0>
    4a22:	40e00733          	neg	a4,a4
    4a26:	0027e793          	ori	a5,a5,2
    4a2a:	ce3a                	sw	a4,28(sp)
    4a2c:	c83e                	sw	a5,16(sp)
    4a2e:	b7f1                	j	49fa <_vfiprintf_r+0x170>
    4a30:	036787b3          	mul	a5,a5,s6
    4a34:	4685                	li	a3,1
    4a36:	842e                	mv	s0,a1
    4a38:	97ba                	add	a5,a5,a4
    4a3a:	bf3d                	j	4978 <_vfiprintf_r+0xee>
    4a3c:	57fd                	li	a5,-1
    4a3e:	b7c5                	j	4a1e <_vfiprintf_r+0x194>
    4a40:	0405                	addi	s0,s0,1
    4a42:	ca02                	sw	zero,20(sp)
    4a44:	4681                	li	a3,0
    4a46:	4781                	li	a5,0
    4a48:	4625                	li	a2,9
    4a4a:	2018                	lbu	a4,0(s0)
    4a4c:	00140593          	addi	a1,s0,1
    4a50:	fd070713          	addi	a4,a4,-48
    4a54:	06e67663          	bgeu	a2,a4,4ac0 <_vfiprintf_r+0x236>
    4a58:	f2f9                	bnez	a3,4a1e <_vfiprintf_r+0x194>
    4a5a:	200c                	lbu	a1,0(s0)
    4a5c:	460d                	li	a2,3
    4a5e:	00002517          	auipc	a0,0x2
    4a62:	4d650513          	addi	a0,a0,1238 # 6f34 <p05.3319+0x14>
    4a66:	c7aff0ef          	jal	ra,3ee0 <memchr>
    4a6a:	cd11                	beqz	a0,4a86 <_vfiprintf_r+0x1fc>
    4a6c:	00002797          	auipc	a5,0x2
    4a70:	4c878793          	addi	a5,a5,1224 # 6f34 <p05.3319+0x14>
    4a74:	8d1d                	sub	a0,a0,a5
    4a76:	04000793          	li	a5,64
    4a7a:	00a797b3          	sll	a5,a5,a0
    4a7e:	4542                	lw	a0,16(sp)
    4a80:	0405                	addi	s0,s0,1
    4a82:	8d5d                	or	a0,a0,a5
    4a84:	c82a                	sw	a0,16(sp)
    4a86:	200c                	lbu	a1,0(s0)
    4a88:	4619                	li	a2,6
    4a8a:	00002517          	auipc	a0,0x2
    4a8e:	4ae50513          	addi	a0,a0,1198 # 6f38 <p05.3319+0x18>
    4a92:	00140913          	addi	s2,s0,1
    4a96:	02b10423          	sb	a1,40(sp)
    4a9a:	c46ff0ef          	jal	ra,3ee0 <memchr>
    4a9e:	c125                	beqz	a0,4afe <_vfiprintf_r+0x274>
    4aa0:	ffffd797          	auipc	a5,0xffffd
    4aa4:	6c078793          	addi	a5,a5,1728 # 2160 <_printf_float>
    4aa8:	e795                	bnez	a5,4ad4 <_vfiprintf_r+0x24a>
    4aaa:	4742                	lw	a4,16(sp)
    4aac:	47b2                	lw	a5,12(sp)
    4aae:	10077713          	andi	a4,a4,256
    4ab2:	cf09                	beqz	a4,4acc <_vfiprintf_r+0x242>
    4ab4:	0791                	addi	a5,a5,4
    4ab6:	c63e                	sw	a5,12(sp)
    4ab8:	5792                	lw	a5,36(sp)
    4aba:	97d2                	add	a5,a5,s4
    4abc:	d23e                	sw	a5,36(sp)
    4abe:	bd15                	j	48f2 <_vfiprintf_r+0x68>
    4ac0:	036787b3          	mul	a5,a5,s6
    4ac4:	4685                	li	a3,1
    4ac6:	842e                	mv	s0,a1
    4ac8:	97ba                	add	a5,a5,a4
    4aca:	b741                	j	4a4a <_vfiprintf_r+0x1c0>
    4acc:	079d                	addi	a5,a5,7
    4ace:	9be1                	andi	a5,a5,-8
    4ad0:	07a1                	addi	a5,a5,8
    4ad2:	b7d5                	j	4ab6 <_vfiprintf_r+0x22c>
    4ad4:	0078                	addi	a4,sp,12
    4ad6:	00000697          	auipc	a3,0x0
    4ada:	d7468693          	addi	a3,a3,-652 # 484a <__sfputs_r>
    4ade:	8626                	mv	a2,s1
    4ae0:	080c                	addi	a1,sp,16
    4ae2:	854e                	mv	a0,s3
    4ae4:	e7cfd0ef          	jal	ra,2160 <_printf_float>
    4ae8:	57fd                	li	a5,-1
    4aea:	8a2a                	mv	s4,a0
    4aec:	fcf516e3          	bne	a0,a5,4ab8 <_vfiprintf_r+0x22e>
    4af0:	24de                	lhu	a5,12(s1)
    4af2:	0407f793          	andi	a5,a5,64
    4af6:	ec0792e3          	bnez	a5,49ba <_vfiprintf_r+0x130>
    4afa:	5512                	lw	a0,36(sp)
    4afc:	b5c1                	j	49bc <_vfiprintf_r+0x132>
    4afe:	0078                	addi	a4,sp,12
    4b00:	00000697          	auipc	a3,0x0
    4b04:	d4a68693          	addi	a3,a3,-694 # 484a <__sfputs_r>
    4b08:	8626                	mv	a2,s1
    4b0a:	080c                	addi	a1,sp,16
    4b0c:	854e                	mv	a0,s3
    4b0e:	c1ffd0ef          	jal	ra,272c <_printf_i>
    4b12:	bfd9                	j	4ae8 <_vfiprintf_r+0x25e>

00004b14 <_sbrk_r>:
    4b14:	1141                	addi	sp,sp,-16
    4b16:	c422                	sw	s0,8(sp)
    4b18:	842a                	mv	s0,a0
    4b1a:	852e                	mv	a0,a1
    4b1c:	20008797          	auipc	a5,0x20008
    4b20:	b407a823          	sw	zero,-1200(a5) # 2000c66c <errno>
    4b24:	c606                	sw	ra,12(sp)
    4b26:	c94fd0ef          	jal	ra,1fba <_sbrk>
    4b2a:	57fd                	li	a5,-1
    4b2c:	00f51963          	bne	a0,a5,4b3e <_sbrk_r+0x2a>
    4b30:	20008797          	auipc	a5,0x20008
    4b34:	b3c78793          	addi	a5,a5,-1220 # 2000c66c <errno>
    4b38:	439c                	lw	a5,0(a5)
    4b3a:	c391                	beqz	a5,4b3e <_sbrk_r+0x2a>
    4b3c:	c01c                	sw	a5,0(s0)
    4b3e:	40b2                	lw	ra,12(sp)
    4b40:	4422                	lw	s0,8(sp)
    4b42:	0141                	addi	sp,sp,16
    4b44:	8082                	ret

00004b46 <__sread>:
    4b46:	1141                	addi	sp,sp,-16
    4b48:	c422                	sw	s0,8(sp)
    4b4a:	842e                	mv	s0,a1
    4b4c:	00e59583          	lh	a1,14(a1)
    4b50:	c606                	sw	ra,12(sp)
    4b52:	2ae1                	jal	4d2a <_read_r>
    4b54:	00054963          	bltz	a0,4b66 <__sread+0x20>
    4b58:	487c                	lw	a5,84(s0)
    4b5a:	97aa                	add	a5,a5,a0
    4b5c:	c87c                	sw	a5,84(s0)
    4b5e:	40b2                	lw	ra,12(sp)
    4b60:	4422                	lw	s0,8(sp)
    4b62:	0141                	addi	sp,sp,16
    4b64:	8082                	ret
    4b66:	245e                	lhu	a5,12(s0)
    4b68:	777d                	lui	a4,0xfffff
    4b6a:	177d                	addi	a4,a4,-1
    4b6c:	8ff9                	and	a5,a5,a4
    4b6e:	a45e                	sh	a5,12(s0)
    4b70:	b7fd                	j	4b5e <__sread+0x18>

00004b72 <__swrite>:
    4b72:	25de                	lhu	a5,12(a1)
    4b74:	1101                	addi	sp,sp,-32
    4b76:	cc22                	sw	s0,24(sp)
    4b78:	ca26                	sw	s1,20(sp)
    4b7a:	c84a                	sw	s2,16(sp)
    4b7c:	c64e                	sw	s3,12(sp)
    4b7e:	ce06                	sw	ra,28(sp)
    4b80:	1007f793          	andi	a5,a5,256
    4b84:	84aa                	mv	s1,a0
    4b86:	842e                	mv	s0,a1
    4b88:	8932                	mv	s2,a2
    4b8a:	89b6                	mv	s3,a3
    4b8c:	c791                	beqz	a5,4b98 <__swrite+0x26>
    4b8e:	00e59583          	lh	a1,14(a1)
    4b92:	4689                	li	a3,2
    4b94:	4601                	li	a2,0
    4b96:	2225                	jal	4cbe <_lseek_r>
    4b98:	245e                	lhu	a5,12(s0)
    4b9a:	777d                	lui	a4,0xfffff
    4b9c:	177d                	addi	a4,a4,-1
    4b9e:	8ff9                	and	a5,a5,a4
    4ba0:	a45e                	sh	a5,12(s0)
    4ba2:	00e41583          	lh	a1,14(s0)
    4ba6:	4462                	lw	s0,24(sp)
    4ba8:	40f2                	lw	ra,28(sp)
    4baa:	86ce                	mv	a3,s3
    4bac:	864a                	mv	a2,s2
    4bae:	49b2                	lw	s3,12(sp)
    4bb0:	4942                	lw	s2,16(sp)
    4bb2:	8526                	mv	a0,s1
    4bb4:	44d2                	lw	s1,20(sp)
    4bb6:	6105                	addi	sp,sp,32
    4bb8:	a825                	j	4bf0 <_write_r>

00004bba <__sseek>:
    4bba:	1141                	addi	sp,sp,-16
    4bbc:	c422                	sw	s0,8(sp)
    4bbe:	842e                	mv	s0,a1
    4bc0:	00e59583          	lh	a1,14(a1)
    4bc4:	c606                	sw	ra,12(sp)
    4bc6:	28e5                	jal	4cbe <_lseek_r>
    4bc8:	57fd                	li	a5,-1
    4bca:	245a                	lhu	a4,12(s0)
    4bcc:	00f51a63          	bne	a0,a5,4be0 <__sseek+0x26>
    4bd0:	77fd                	lui	a5,0xfffff
    4bd2:	17fd                	addi	a5,a5,-1
    4bd4:	8ff9                	and	a5,a5,a4
    4bd6:	a45e                	sh	a5,12(s0)
    4bd8:	40b2                	lw	ra,12(sp)
    4bda:	4422                	lw	s0,8(sp)
    4bdc:	0141                	addi	sp,sp,16
    4bde:	8082                	ret
    4be0:	6785                	lui	a5,0x1
    4be2:	8fd9                	or	a5,a5,a4
    4be4:	a45e                	sh	a5,12(s0)
    4be6:	c868                	sw	a0,84(s0)
    4be8:	bfc5                	j	4bd8 <__sseek+0x1e>

00004bea <__sclose>:
    4bea:	00e59583          	lh	a1,14(a1)
    4bee:	a825                	j	4c26 <_close_r>

00004bf0 <_write_r>:
    4bf0:	1141                	addi	sp,sp,-16
    4bf2:	c422                	sw	s0,8(sp)
    4bf4:	842a                	mv	s0,a0
    4bf6:	852e                	mv	a0,a1
    4bf8:	85b2                	mv	a1,a2
    4bfa:	8636                	mv	a2,a3
    4bfc:	20008797          	auipc	a5,0x20008
    4c00:	a607a823          	sw	zero,-1424(a5) # 2000c66c <errno>
    4c04:	c606                	sw	ra,12(sp)
    4c06:	b68fd0ef          	jal	ra,1f6e <_write>
    4c0a:	57fd                	li	a5,-1
    4c0c:	00f51963          	bne	a0,a5,4c1e <_write_r+0x2e>
    4c10:	20008797          	auipc	a5,0x20008
    4c14:	a5c78793          	addi	a5,a5,-1444 # 2000c66c <errno>
    4c18:	439c                	lw	a5,0(a5)
    4c1a:	c391                	beqz	a5,4c1e <_write_r+0x2e>
    4c1c:	c01c                	sw	a5,0(s0)
    4c1e:	40b2                	lw	ra,12(sp)
    4c20:	4422                	lw	s0,8(sp)
    4c22:	0141                	addi	sp,sp,16
    4c24:	8082                	ret

00004c26 <_close_r>:
    4c26:	1141                	addi	sp,sp,-16
    4c28:	c422                	sw	s0,8(sp)
    4c2a:	842a                	mv	s0,a0
    4c2c:	852e                	mv	a0,a1
    4c2e:	20008797          	auipc	a5,0x20008
    4c32:	a207af23          	sw	zero,-1474(a5) # 2000c66c <errno>
    4c36:	c606                	sw	ra,12(sp)
    4c38:	7f3010ef          	jal	ra,6c2a <_close>
    4c3c:	57fd                	li	a5,-1
    4c3e:	00f51963          	bne	a0,a5,4c50 <_close_r+0x2a>
    4c42:	20008797          	auipc	a5,0x20008
    4c46:	a2a78793          	addi	a5,a5,-1494 # 2000c66c <errno>
    4c4a:	439c                	lw	a5,0(a5)
    4c4c:	c391                	beqz	a5,4c50 <_close_r+0x2a>
    4c4e:	c01c                	sw	a5,0(s0)
    4c50:	40b2                	lw	ra,12(sp)
    4c52:	4422                	lw	s0,8(sp)
    4c54:	0141                	addi	sp,sp,16
    4c56:	8082                	ret

00004c58 <_fstat_r>:
    4c58:	1141                	addi	sp,sp,-16
    4c5a:	c422                	sw	s0,8(sp)
    4c5c:	842a                	mv	s0,a0
    4c5e:	852e                	mv	a0,a1
    4c60:	85b2                	mv	a1,a2
    4c62:	20008797          	auipc	a5,0x20008
    4c66:	a007a523          	sw	zero,-1526(a5) # 2000c66c <errno>
    4c6a:	c606                	sw	ra,12(sp)
    4c6c:	7cf010ef          	jal	ra,6c3a <_fstat>
    4c70:	57fd                	li	a5,-1
    4c72:	00f51963          	bne	a0,a5,4c84 <_fstat_r+0x2c>
    4c76:	20008797          	auipc	a5,0x20008
    4c7a:	9f678793          	addi	a5,a5,-1546 # 2000c66c <errno>
    4c7e:	439c                	lw	a5,0(a5)
    4c80:	c391                	beqz	a5,4c84 <_fstat_r+0x2c>
    4c82:	c01c                	sw	a5,0(s0)
    4c84:	40b2                	lw	ra,12(sp)
    4c86:	4422                	lw	s0,8(sp)
    4c88:	0141                	addi	sp,sp,16
    4c8a:	8082                	ret

00004c8c <_isatty_r>:
    4c8c:	1141                	addi	sp,sp,-16
    4c8e:	c422                	sw	s0,8(sp)
    4c90:	842a                	mv	s0,a0
    4c92:	852e                	mv	a0,a1
    4c94:	20008797          	auipc	a5,0x20008
    4c98:	9c07ac23          	sw	zero,-1576(a5) # 2000c66c <errno>
    4c9c:	c606                	sw	ra,12(sp)
    4c9e:	7ad010ef          	jal	ra,6c4a <_isatty>
    4ca2:	57fd                	li	a5,-1
    4ca4:	00f51963          	bne	a0,a5,4cb6 <_isatty_r+0x2a>
    4ca8:	20008797          	auipc	a5,0x20008
    4cac:	9c478793          	addi	a5,a5,-1596 # 2000c66c <errno>
    4cb0:	439c                	lw	a5,0(a5)
    4cb2:	c391                	beqz	a5,4cb6 <_isatty_r+0x2a>
    4cb4:	c01c                	sw	a5,0(s0)
    4cb6:	40b2                	lw	ra,12(sp)
    4cb8:	4422                	lw	s0,8(sp)
    4cba:	0141                	addi	sp,sp,16
    4cbc:	8082                	ret

00004cbe <_lseek_r>:
    4cbe:	1141                	addi	sp,sp,-16
    4cc0:	c422                	sw	s0,8(sp)
    4cc2:	842a                	mv	s0,a0
    4cc4:	852e                	mv	a0,a1
    4cc6:	85b2                	mv	a1,a2
    4cc8:	8636                	mv	a2,a3
    4cca:	20008797          	auipc	a5,0x20008
    4cce:	9a07a123          	sw	zero,-1630(a5) # 2000c66c <errno>
    4cd2:	c606                	sw	ra,12(sp)
    4cd4:	787010ef          	jal	ra,6c5a <_lseek>
    4cd8:	57fd                	li	a5,-1
    4cda:	00f51963          	bne	a0,a5,4cec <_lseek_r+0x2e>
    4cde:	20008797          	auipc	a5,0x20008
    4ce2:	98e78793          	addi	a5,a5,-1650 # 2000c66c <errno>
    4ce6:	439c                	lw	a5,0(a5)
    4ce8:	c391                	beqz	a5,4cec <_lseek_r+0x2e>
    4cea:	c01c                	sw	a5,0(s0)
    4cec:	40b2                	lw	ra,12(sp)
    4cee:	4422                	lw	s0,8(sp)
    4cf0:	0141                	addi	sp,sp,16
    4cf2:	8082                	ret

00004cf4 <__ascii_mbtowc>:
    4cf4:	ed91                	bnez	a1,4d10 <__ascii_mbtowc+0x1c>
    4cf6:	1141                	addi	sp,sp,-16
    4cf8:	006c                	addi	a1,sp,12
    4cfa:	4501                	li	a0,0
    4cfc:	ca01                	beqz	a2,4d0c <__ascii_mbtowc+0x18>
    4cfe:	5579                	li	a0,-2
    4d00:	c691                	beqz	a3,4d0c <__ascii_mbtowc+0x18>
    4d02:	221c                	lbu	a5,0(a2)
    4d04:	c19c                	sw	a5,0(a1)
    4d06:	2208                	lbu	a0,0(a2)
    4d08:	00a03533          	snez	a0,a0
    4d0c:	0141                	addi	sp,sp,16
    4d0e:	8082                	ret
    4d10:	4501                	li	a0,0
    4d12:	ca09                	beqz	a2,4d24 <__ascii_mbtowc+0x30>
    4d14:	5579                	li	a0,-2
    4d16:	c699                	beqz	a3,4d24 <__ascii_mbtowc+0x30>
    4d18:	221c                	lbu	a5,0(a2)
    4d1a:	c19c                	sw	a5,0(a1)
    4d1c:	2208                	lbu	a0,0(a2)
    4d1e:	00a03533          	snez	a0,a0
    4d22:	8082                	ret
    4d24:	8082                	ret

00004d26 <__malloc_lock>:
    4d26:	8082                	ret

00004d28 <__malloc_unlock>:
    4d28:	8082                	ret

00004d2a <_read_r>:
    4d2a:	1141                	addi	sp,sp,-16
    4d2c:	c422                	sw	s0,8(sp)
    4d2e:	842a                	mv	s0,a0
    4d30:	852e                	mv	a0,a1
    4d32:	85b2                	mv	a1,a2
    4d34:	8636                	mv	a2,a3
    4d36:	20008797          	auipc	a5,0x20008
    4d3a:	9207ab23          	sw	zero,-1738(a5) # 2000c66c <errno>
    4d3e:	c606                	sw	ra,12(sp)
    4d40:	72b010ef          	jal	ra,6c6a <_read>
    4d44:	57fd                	li	a5,-1
    4d46:	00f51963          	bne	a0,a5,4d58 <_read_r+0x2e>
    4d4a:	20008797          	auipc	a5,0x20008
    4d4e:	92278793          	addi	a5,a5,-1758 # 2000c66c <errno>
    4d52:	439c                	lw	a5,0(a5)
    4d54:	c391                	beqz	a5,4d58 <_read_r+0x2e>
    4d56:	c01c                	sw	a5,0(s0)
    4d58:	40b2                	lw	ra,12(sp)
    4d5a:	4422                	lw	s0,8(sp)
    4d5c:	0141                	addi	sp,sp,16
    4d5e:	8082                	ret

00004d60 <__ascii_wctomb>:
    4d60:	cd89                	beqz	a1,4d7a <__ascii_wctomb+0x1a>
    4d62:	0ff00793          	li	a5,255
    4d66:	00c7f763          	bgeu	a5,a2,4d74 <__ascii_wctomb+0x14>
    4d6a:	08a00793          	li	a5,138
    4d6e:	c11c                	sw	a5,0(a0)
    4d70:	557d                	li	a0,-1
    4d72:	8082                	ret
    4d74:	a190                	sb	a2,0(a1)
    4d76:	4505                	li	a0,1
    4d78:	8082                	ret
    4d7a:	4501                	li	a0,0
    4d7c:	8082                	ret

00004d7e <__adddf3>:
    4d7e:	00100837          	lui	a6,0x100
    4d82:	1101                	addi	sp,sp,-32
    4d84:	187d                	addi	a6,a6,-1
    4d86:	00b87733          	and	a4,a6,a1
    4d8a:	ca26                	sw	s1,20(sp)
    4d8c:	00d87833          	and	a6,a6,a3
    4d90:	0145d493          	srli	s1,a1,0x14
    4d94:	0146d313          	srli	t1,a3,0x14
    4d98:	00371e13          	slli	t3,a4,0x3
    4d9c:	c64e                	sw	s3,12(sp)
    4d9e:	01d55713          	srli	a4,a0,0x1d
    4da2:	080e                	slli	a6,a6,0x3
    4da4:	01d65793          	srli	a5,a2,0x1d
    4da8:	7ff4f493          	andi	s1,s1,2047
    4dac:	7ff37313          	andi	t1,t1,2047
    4db0:	ce06                	sw	ra,28(sp)
    4db2:	cc22                	sw	s0,24(sp)
    4db4:	c84a                	sw	s2,16(sp)
    4db6:	01f5d993          	srli	s3,a1,0x1f
    4dba:	01f6de93          	srli	t4,a3,0x1f
    4dbe:	01c76733          	or	a4,a4,t3
    4dc2:	00351f13          	slli	t5,a0,0x3
    4dc6:	0107e833          	or	a6,a5,a6
    4dca:	00361f93          	slli	t6,a2,0x3
    4dce:	40648e33          	sub	t3,s1,t1
    4dd2:	19d98063          	beq	s3,t4,4f52 <__adddf3+0x1d4>
    4dd6:	13c05663          	blez	t3,4f02 <__adddf3+0x184>
    4dda:	1c030463          	beqz	t1,4fa2 <__adddf3+0x224>
    4dde:	008006b7          	lui	a3,0x800
    4de2:	7ff00793          	li	a5,2047
    4de6:	00d86833          	or	a6,a6,a3
    4dea:	36f48f63          	beq	s1,a5,5168 <__adddf3+0x3ea>
    4dee:	03800793          	li	a5,56
    4df2:	35c7c063          	blt	a5,t3,5132 <__adddf3+0x3b4>
    4df6:	47fd                	li	a5,31
    4df8:	47c7cd63          	blt	a5,t3,5272 <__adddf3+0x4f4>
    4dfc:	02000513          	li	a0,32
    4e00:	41c50533          	sub	a0,a0,t3
    4e04:	01cfd7b3          	srl	a5,t6,t3
    4e08:	00a816b3          	sll	a3,a6,a0
    4e0c:	00af9933          	sll	s2,t6,a0
    4e10:	8edd                	or	a3,a3,a5
    4e12:	01203933          	snez	s2,s2
    4e16:	01c857b3          	srl	a5,a6,t3
    4e1a:	0126e933          	or	s2,a3,s2
    4e1e:	8f1d                	sub	a4,a4,a5
    4e20:	412f0933          	sub	s2,t5,s2
    4e24:	012f37b3          	sltu	a5,t5,s2
    4e28:	40f70633          	sub	a2,a4,a5
    4e2c:	00861793          	slli	a5,a2,0x8
    4e30:	2407d463          	bgez	a5,5078 <__adddf3+0x2fa>
    4e34:	00800737          	lui	a4,0x800
    4e38:	177d                	addi	a4,a4,-1
    4e3a:	00e67433          	and	s0,a2,a4
    4e3e:	2c040c63          	beqz	s0,5116 <__adddf3+0x398>
    4e42:	8522                	mv	a0,s0
    4e44:	579010ef          	jal	ra,6bbc <__clzsi2>
    4e48:	ff850713          	addi	a4,a0,-8
    4e4c:	02000793          	li	a5,32
    4e50:	8f99                	sub	a5,a5,a4
    4e52:	00f957b3          	srl	a5,s2,a5
    4e56:	00e41633          	sll	a2,s0,a4
    4e5a:	8fd1                	or	a5,a5,a2
    4e5c:	00e91933          	sll	s2,s2,a4
    4e60:	2a974163          	blt	a4,s1,5102 <__adddf3+0x384>
    4e64:	40970533          	sub	a0,a4,s1
    4e68:	00150613          	addi	a2,a0,1
    4e6c:	477d                	li	a4,31
    4e6e:	38c74d63          	blt	a4,a2,5208 <__adddf3+0x48a>
    4e72:	02000713          	li	a4,32
    4e76:	8f11                	sub	a4,a4,a2
    4e78:	00c956b3          	srl	a3,s2,a2
    4e7c:	00e91933          	sll	s2,s2,a4
    4e80:	00e79733          	sll	a4,a5,a4
    4e84:	8f55                	or	a4,a4,a3
    4e86:	01203933          	snez	s2,s2
    4e8a:	01276933          	or	s2,a4,s2
    4e8e:	00c7d633          	srl	a2,a5,a2
    4e92:	4481                	li	s1,0
    4e94:	00797793          	andi	a5,s2,7
    4e98:	cf81                	beqz	a5,4eb0 <__adddf3+0x132>
    4e9a:	00f97713          	andi	a4,s2,15
    4e9e:	4791                	li	a5,4
    4ea0:	00f70863          	beq	a4,a5,4eb0 <__adddf3+0x132>
    4ea4:	00490713          	addi	a4,s2,4
    4ea8:	01273933          	sltu	s2,a4,s2
    4eac:	964a                	add	a2,a2,s2
    4eae:	893a                	mv	s2,a4
    4eb0:	00861793          	slli	a5,a2,0x8
    4eb4:	1c07d663          	bgez	a5,5080 <__adddf3+0x302>
    4eb8:	00148513          	addi	a0,s1,1
    4ebc:	7ff00793          	li	a5,2047
    4ec0:	85ce                	mv	a1,s3
    4ec2:	20f50463          	beq	a0,a5,50ca <__adddf3+0x34c>
    4ec6:	ff8007b7          	lui	a5,0xff800
    4eca:	17fd                	addi	a5,a5,-1
    4ecc:	8ff1                	and	a5,a5,a2
    4ece:	01d79893          	slli	a7,a5,0x1d
    4ed2:	00395913          	srli	s2,s2,0x3
    4ed6:	07a6                	slli	a5,a5,0x9
    4ed8:	0128e8b3          	or	a7,a7,s2
    4edc:	83b1                	srli	a5,a5,0xc
    4ede:	7ff57513          	andi	a0,a0,2047
    4ee2:	00c79693          	slli	a3,a5,0xc
    4ee6:	0552                	slli	a0,a0,0x14
    4ee8:	40f2                	lw	ra,28(sp)
    4eea:	4462                	lw	s0,24(sp)
    4eec:	82b1                	srli	a3,a3,0xc
    4eee:	05fe                	slli	a1,a1,0x1f
    4ef0:	8ec9                	or	a3,a3,a0
    4ef2:	8ecd                	or	a3,a3,a1
    4ef4:	44d2                	lw	s1,20(sp)
    4ef6:	4942                	lw	s2,16(sp)
    4ef8:	49b2                	lw	s3,12(sp)
    4efa:	8546                	mv	a0,a7
    4efc:	85b6                	mv	a1,a3
    4efe:	6105                	addi	sp,sp,32
    4f00:	8082                	ret
    4f02:	0a0e1e63          	bnez	t3,4fbe <__adddf3+0x240>
    4f06:	00148313          	addi	t1,s1,1
    4f0a:	7fe37313          	andi	t1,t1,2046
    4f0e:	22031763          	bnez	t1,513c <__adddf3+0x3be>
    4f12:	01e767b3          	or	a5,a4,t5
    4f16:	01f868b3          	or	a7,a6,t6
    4f1a:	1a049d63          	bnez	s1,50d4 <__adddf3+0x356>
    4f1e:	40078763          	beqz	a5,532c <__adddf3+0x5ae>
    4f22:	44088663          	beqz	a7,536e <__adddf3+0x5f0>
    4f26:	41ff0933          	sub	s2,t5,t6
    4f2a:	410707b3          	sub	a5,a4,a6
    4f2e:	012f3633          	sltu	a2,t5,s2
    4f32:	40c78633          	sub	a2,a5,a2
    4f36:	00861793          	slli	a5,a2,0x8
    4f3a:	4c07d663          	bgez	a5,5406 <__adddf3+0x688>
    4f3e:	41ef8933          	sub	s2,t6,t5
    4f42:	40e807b3          	sub	a5,a6,a4
    4f46:	012fb633          	sltu	a2,t6,s2
    4f4a:	40c78633          	sub	a2,a5,a2
    4f4e:	89f6                	mv	s3,t4
    4f50:	b791                	j	4e94 <__adddf3+0x116>
    4f52:	0fc05063          	blez	t3,5032 <__adddf3+0x2b4>
    4f56:	0c030063          	beqz	t1,5016 <__adddf3+0x298>
    4f5a:	008006b7          	lui	a3,0x800
    4f5e:	7ff00793          	li	a5,2047
    4f62:	00d86833          	or	a6,a6,a3
    4f66:	3af48a63          	beq	s1,a5,531a <__adddf3+0x59c>
    4f6a:	03800793          	li	a5,56
    4f6e:	13c7cb63          	blt	a5,t3,50a4 <__adddf3+0x326>
    4f72:	47fd                	li	a5,31
    4f74:	35c7df63          	bge	a5,t3,52d2 <__adddf3+0x554>
    4f78:	fe0e0913          	addi	s2,t3,-32
    4f7c:	02000793          	li	a5,32
    4f80:	012856b3          	srl	a3,a6,s2
    4f84:	00fe0a63          	beq	t3,a5,4f98 <__adddf3+0x21a>
    4f88:	04000913          	li	s2,64
    4f8c:	41c90933          	sub	s2,s2,t3
    4f90:	01281933          	sll	s2,a6,s2
    4f94:	012fefb3          	or	t6,t6,s2
    4f98:	01f03933          	snez	s2,t6
    4f9c:	00d96933          	or	s2,s2,a3
    4fa0:	a231                	j	50ac <__adddf3+0x32e>
    4fa2:	01f867b3          	or	a5,a6,t6
    4fa6:	1c078a63          	beqz	a5,517a <__adddf3+0x3fc>
    4faa:	fffe0793          	addi	a5,t3,-1
    4fae:	38078c63          	beqz	a5,5346 <__adddf3+0x5c8>
    4fb2:	7ff00693          	li	a3,2047
    4fb6:	1ade0963          	beq	t3,a3,5168 <__adddf3+0x3ea>
    4fba:	8e3e                	mv	t3,a5
    4fbc:	bd0d                	j	4dee <__adddf3+0x70>
    4fbe:	409305b3          	sub	a1,t1,s1
    4fc2:	22049163          	bnez	s1,51e4 <__adddf3+0x466>
    4fc6:	01e767b3          	or	a5,a4,t5
    4fca:	32078763          	beqz	a5,52f8 <__adddf3+0x57a>
    4fce:	fff58793          	addi	a5,a1,-1
    4fd2:	44078163          	beqz	a5,5414 <__adddf3+0x696>
    4fd6:	7ff00693          	li	a3,2047
    4fda:	20d58c63          	beq	a1,a3,51f2 <__adddf3+0x474>
    4fde:	85be                	mv	a1,a5
    4fe0:	03800793          	li	a5,56
    4fe4:	2ab7cc63          	blt	a5,a1,529c <__adddf3+0x51e>
    4fe8:	47fd                	li	a5,31
    4fea:	3cb7cf63          	blt	a5,a1,53c8 <__adddf3+0x64a>
    4fee:	02000793          	li	a5,32
    4ff2:	8f8d                	sub	a5,a5,a1
    4ff4:	00f71933          	sll	s2,a4,a5
    4ff8:	00bf56b3          	srl	a3,t5,a1
    4ffc:	00ff17b3          	sll	a5,t5,a5
    5000:	00d96933          	or	s2,s2,a3
    5004:	00f037b3          	snez	a5,a5
    5008:	00b75733          	srl	a4,a4,a1
    500c:	00f96933          	or	s2,s2,a5
    5010:	40e80833          	sub	a6,a6,a4
    5014:	ac41                	j	52a4 <__adddf3+0x526>
    5016:	01f867b3          	or	a5,a6,t6
    501a:	34078063          	beqz	a5,535a <__adddf3+0x5dc>
    501e:	fffe0793          	addi	a5,t3,-1
    5022:	20078a63          	beqz	a5,5236 <__adddf3+0x4b8>
    5026:	7ff00693          	li	a3,2047
    502a:	2ede0863          	beq	t3,a3,531a <__adddf3+0x59c>
    502e:	8e3e                	mv	t3,a5
    5030:	bf2d                	j	4f6a <__adddf3+0x1ec>
    5032:	140e1e63          	bnez	t3,518e <__adddf3+0x410>
    5036:	00148693          	addi	a3,s1,1
    503a:	7fe6f793          	andi	a5,a3,2046
    503e:	34079163          	bnez	a5,5380 <__adddf3+0x602>
    5042:	01e767b3          	or	a5,a4,t5
    5046:	2c049563          	bnez	s1,5310 <__adddf3+0x592>
    504a:	3e078063          	beqz	a5,542a <__adddf3+0x6ac>
    504e:	01f867b3          	or	a5,a6,t6
    5052:	30078e63          	beqz	a5,536e <__adddf3+0x5f0>
    5056:	01ff0933          	add	s2,t5,t6
    505a:	010707b3          	add	a5,a4,a6
    505e:	01e93f33          	sltu	t5,s2,t5
    5062:	01e78633          	add	a2,a5,t5
    5066:	00861793          	slli	a5,a2,0x8
    506a:	0007d763          	bgez	a5,5078 <__adddf3+0x2fa>
    506e:	ff8007b7          	lui	a5,0xff800
    5072:	17fd                	addi	a5,a5,-1
    5074:	8e7d                	and	a2,a2,a5
    5076:	4485                	li	s1,1
    5078:	00797793          	andi	a5,s2,7
    507c:	e0079fe3          	bnez	a5,4e9a <__adddf3+0x11c>
    5080:	01d61793          	slli	a5,a2,0x1d
    5084:	00395893          	srli	a7,s2,0x3
    5088:	00f8e8b3          	or	a7,a7,a5
    508c:	00365793          	srli	a5,a2,0x3
    5090:	7ff00713          	li	a4,2047
    5094:	04e48d63          	beq	s1,a4,50ee <__adddf3+0x370>
    5098:	07b2                	slli	a5,a5,0xc
    509a:	83b1                	srli	a5,a5,0xc
    509c:	7ff4f513          	andi	a0,s1,2047
    50a0:	85ce                	mv	a1,s3
    50a2:	b581                	j	4ee2 <__adddf3+0x164>
    50a4:	01f86933          	or	s2,a6,t6
    50a8:	01203933          	snez	s2,s2
    50ac:	997a                	add	s2,s2,t5
    50ae:	01e937b3          	sltu	a5,s2,t5
    50b2:	00e78633          	add	a2,a5,a4
    50b6:	00861793          	slli	a5,a2,0x8
    50ba:	fa07dfe3          	bgez	a5,5078 <__adddf3+0x2fa>
    50be:	0485                	addi	s1,s1,1
    50c0:	7ff00793          	li	a5,2047
    50c4:	18f49663          	bne	s1,a5,5250 <__adddf3+0x4d2>
    50c8:	85ce                	mv	a1,s3
    50ca:	7ff00513          	li	a0,2047
    50ce:	4781                	li	a5,0
    50d0:	4881                	li	a7,0
    50d2:	bd01                	j	4ee2 <__adddf3+0x164>
    50d4:	ebc1                	bnez	a5,5164 <__adddf3+0x3e6>
    50d6:	3a088463          	beqz	a7,547e <__adddf3+0x700>
    50da:	00361693          	slli	a3,a2,0x3
    50de:	01d81793          	slli	a5,a6,0x1d
    50e2:	828d                	srli	a3,a3,0x3
    50e4:	00d7e8b3          	or	a7,a5,a3
    50e8:	89f6                	mv	s3,t4
    50ea:	00385793          	srli	a5,a6,0x3
    50ee:	00f8e7b3          	or	a5,a7,a5
    50f2:	dbf9                	beqz	a5,50c8 <__adddf3+0x34a>
    50f4:	4581                	li	a1,0
    50f6:	7ff00513          	li	a0,2047
    50fa:	000807b7          	lui	a5,0x80
    50fe:	4881                	li	a7,0
    5100:	b3cd                	j	4ee2 <__adddf3+0x164>
    5102:	ff800637          	lui	a2,0xff800
    5106:	167d                	addi	a2,a2,-1
    5108:	8e7d                	and	a2,a2,a5
    510a:	00797793          	andi	a5,s2,7
    510e:	8c99                	sub	s1,s1,a4
    5110:	d80795e3          	bnez	a5,4e9a <__adddf3+0x11c>
    5114:	b7b5                	j	5080 <__adddf3+0x302>
    5116:	854a                	mv	a0,s2
    5118:	2a5010ef          	jal	ra,6bbc <__clzsi2>
    511c:	01850713          	addi	a4,a0,24
    5120:	47fd                	li	a5,31
    5122:	d2e7d5e3          	bge	a5,a4,4e4c <__adddf3+0xce>
    5126:	ff850613          	addi	a2,a0,-8
    512a:	00c917b3          	sll	a5,s2,a2
    512e:	4901                	li	s2,0
    5130:	bb05                	j	4e60 <__adddf3+0xe2>
    5132:	01f86933          	or	s2,a6,t6
    5136:	01203933          	snez	s2,s2
    513a:	b1dd                	j	4e20 <__adddf3+0xa2>
    513c:	41ff0933          	sub	s2,t5,t6
    5140:	41070633          	sub	a2,a4,a6
    5144:	012f3433          	sltu	s0,t5,s2
    5148:	40860433          	sub	s0,a2,s0
    514c:	00841793          	slli	a5,s0,0x8
    5150:	2407cd63          	bltz	a5,53aa <__adddf3+0x62c>
    5154:	008968b3          	or	a7,s2,s0
    5158:	ce0893e3          	bnez	a7,4e3e <__adddf3+0xc0>
    515c:	4781                	li	a5,0
    515e:	4981                	li	s3,0
    5160:	4481                	li	s1,0
    5162:	bf1d                	j	5098 <__adddf3+0x31a>
    5164:	f80898e3          	bnez	a7,50f4 <__adddf3+0x376>
    5168:	050e                	slli	a0,a0,0x3
    516a:	01d71793          	slli	a5,a4,0x1d
    516e:	810d                	srli	a0,a0,0x3
    5170:	00a7e8b3          	or	a7,a5,a0
    5174:	00375793          	srli	a5,a4,0x3
    5178:	bf9d                	j	50ee <__adddf3+0x370>
    517a:	050e                	slli	a0,a0,0x3
    517c:	01d71793          	slli	a5,a4,0x1d
    5180:	810d                	srli	a0,a0,0x3
    5182:	00a7e8b3          	or	a7,a5,a0
    5186:	84f2                	mv	s1,t3
    5188:	00375793          	srli	a5,a4,0x3
    518c:	b711                	j	5090 <__adddf3+0x312>
    518e:	40930533          	sub	a0,t1,s1
    5192:	12048263          	beqz	s1,52b6 <__adddf3+0x538>
    5196:	008006b7          	lui	a3,0x800
    519a:	7ff00793          	li	a5,2047
    519e:	8f55                	or	a4,a4,a3
    51a0:	2ef30d63          	beq	t1,a5,549a <__adddf3+0x71c>
    51a4:	03800793          	li	a5,56
    51a8:	20a7cb63          	blt	a5,a0,53be <__adddf3+0x640>
    51ac:	47fd                	li	a5,31
    51ae:	2aa7c363          	blt	a5,a0,5454 <__adddf3+0x6d6>
    51b2:	02000793          	li	a5,32
    51b6:	8f89                	sub	a5,a5,a0
    51b8:	00f71933          	sll	s2,a4,a5
    51bc:	00af56b3          	srl	a3,t5,a0
    51c0:	00ff17b3          	sll	a5,t5,a5
    51c4:	00d96933          	or	s2,s2,a3
    51c8:	00f037b3          	snez	a5,a5
    51cc:	00a75733          	srl	a4,a4,a0
    51d0:	00f96933          	or	s2,s2,a5
    51d4:	983a                	add	a6,a6,a4
    51d6:	997e                	add	s2,s2,t6
    51d8:	01f937b3          	sltu	a5,s2,t6
    51dc:	01078633          	add	a2,a5,a6
    51e0:	849a                	mv	s1,t1
    51e2:	bdd1                	j	50b6 <__adddf3+0x338>
    51e4:	008006b7          	lui	a3,0x800
    51e8:	7ff00793          	li	a5,2047
    51ec:	8f55                	or	a4,a4,a3
    51ee:	def319e3          	bne	t1,a5,4fe0 <__adddf3+0x262>
    51f2:	00361793          	slli	a5,a2,0x3
    51f6:	838d                	srli	a5,a5,0x3
    51f8:	01d81893          	slli	a7,a6,0x1d
    51fc:	0117e8b3          	or	a7,a5,a7
    5200:	89f6                	mv	s3,t4
    5202:	00385793          	srli	a5,a6,0x3
    5206:	b5e5                	j	50ee <__adddf3+0x370>
    5208:	fe150713          	addi	a4,a0,-31
    520c:	02000693          	li	a3,32
    5210:	00e7d733          	srl	a4,a5,a4
    5214:	00d60a63          	beq	a2,a3,5228 <__adddf3+0x4aa>
    5218:	04000693          	li	a3,64
    521c:	40c68633          	sub	a2,a3,a2
    5220:	00c79633          	sll	a2,a5,a2
    5224:	00c96933          	or	s2,s2,a2
    5228:	01203933          	snez	s2,s2
    522c:	00e96933          	or	s2,s2,a4
    5230:	4601                	li	a2,0
    5232:	4481                	li	s1,0
    5234:	b591                	j	5078 <__adddf3+0x2fa>
    5236:	01ff0933          	add	s2,t5,t6
    523a:	010707b3          	add	a5,a4,a6
    523e:	01e93633          	sltu	a2,s2,t5
    5242:	963e                	add	a2,a2,a5
    5244:	00861793          	slli	a5,a2,0x8
    5248:	4485                	li	s1,1
    524a:	e207d7e3          	bgez	a5,5078 <__adddf3+0x2fa>
    524e:	4489                	li	s1,2
    5250:	ff8007b7          	lui	a5,0xff800
    5254:	17fd                	addi	a5,a5,-1
    5256:	8ff1                	and	a5,a5,a2
    5258:	00195713          	srli	a4,s2,0x1
    525c:	00197913          	andi	s2,s2,1
    5260:	01276933          	or	s2,a4,s2
    5264:	01f79893          	slli	a7,a5,0x1f
    5268:	0128e933          	or	s2,a7,s2
    526c:	0017d613          	srli	a2,a5,0x1
    5270:	b115                	j	4e94 <__adddf3+0x116>
    5272:	fe0e0913          	addi	s2,t3,-32
    5276:	02000793          	li	a5,32
    527a:	012856b3          	srl	a3,a6,s2
    527e:	00fe0a63          	beq	t3,a5,5292 <__adddf3+0x514>
    5282:	04000913          	li	s2,64
    5286:	41c90933          	sub	s2,s2,t3
    528a:	01281933          	sll	s2,a6,s2
    528e:	012fefb3          	or	t6,t6,s2
    5292:	01f03933          	snez	s2,t6
    5296:	00d96933          	or	s2,s2,a3
    529a:	b659                	j	4e20 <__adddf3+0xa2>
    529c:	01e76933          	or	s2,a4,t5
    52a0:	01203933          	snez	s2,s2
    52a4:	412f8933          	sub	s2,t6,s2
    52a8:	012fb7b3          	sltu	a5,t6,s2
    52ac:	40f80633          	sub	a2,a6,a5
    52b0:	849a                	mv	s1,t1
    52b2:	89f6                	mv	s3,t4
    52b4:	bea5                	j	4e2c <__adddf3+0xae>
    52b6:	01e767b3          	or	a5,a4,t5
    52ba:	18078263          	beqz	a5,543e <__adddf3+0x6c0>
    52be:	fff50793          	addi	a5,a0,-1
    52c2:	1c078463          	beqz	a5,548a <__adddf3+0x70c>
    52c6:	7ff00693          	li	a3,2047
    52ca:	12d50463          	beq	a0,a3,53f2 <__adddf3+0x674>
    52ce:	853e                	mv	a0,a5
    52d0:	bdd1                	j	51a4 <__adddf3+0x426>
    52d2:	02000793          	li	a5,32
    52d6:	41c787b3          	sub	a5,a5,t3
    52da:	00f816b3          	sll	a3,a6,a5
    52de:	00ff9933          	sll	s2,t6,a5
    52e2:	01cfd633          	srl	a2,t6,t3
    52e6:	8ed1                	or	a3,a3,a2
    52e8:	01203933          	snez	s2,s2
    52ec:	01c857b3          	srl	a5,a6,t3
    52f0:	0126e933          	or	s2,a3,s2
    52f4:	973e                	add	a4,a4,a5
    52f6:	bb5d                	j	50ac <__adddf3+0x32e>
    52f8:	00361793          	slli	a5,a2,0x3
    52fc:	838d                	srli	a5,a5,0x3
    52fe:	01d81893          	slli	a7,a6,0x1d
    5302:	0117e8b3          	or	a7,a5,a7
    5306:	84ae                	mv	s1,a1
    5308:	00385793          	srli	a5,a6,0x3
    530c:	89f6                	mv	s3,t4
    530e:	b349                	j	5090 <__adddf3+0x312>
    5310:	c3ed                	beqz	a5,53f2 <__adddf3+0x674>
    5312:	01f86933          	or	s2,a6,t6
    5316:	dc091fe3          	bnez	s2,50f4 <__adddf3+0x376>
    531a:	050e                	slli	a0,a0,0x3
    531c:	01d71793          	slli	a5,a4,0x1d
    5320:	810d                	srli	a0,a0,0x3
    5322:	00f568b3          	or	a7,a0,a5
    5326:	00375793          	srli	a5,a4,0x3
    532a:	b3d1                	j	50ee <__adddf3+0x370>
    532c:	0e088163          	beqz	a7,540e <__adddf3+0x690>
    5330:	00361693          	slli	a3,a2,0x3
    5334:	01d81793          	slli	a5,a6,0x1d
    5338:	828d                	srli	a3,a3,0x3
    533a:	00d7e8b3          	or	a7,a5,a3
    533e:	89f6                	mv	s3,t4
    5340:	00385793          	srli	a5,a6,0x3
    5344:	bb91                	j	5098 <__adddf3+0x31a>
    5346:	41ff0933          	sub	s2,t5,t6
    534a:	410707b3          	sub	a5,a4,a6
    534e:	012f3f33          	sltu	t5,t5,s2
    5352:	41e78633          	sub	a2,a5,t5
    5356:	4485                	li	s1,1
    5358:	bcd1                	j	4e2c <__adddf3+0xae>
    535a:	050e                	slli	a0,a0,0x3
    535c:	01d71793          	slli	a5,a4,0x1d
    5360:	810d                	srli	a0,a0,0x3
    5362:	00f568b3          	or	a7,a0,a5
    5366:	84f2                	mv	s1,t3
    5368:	00375793          	srli	a5,a4,0x3
    536c:	b315                	j	5090 <__adddf3+0x312>
    536e:	050e                	slli	a0,a0,0x3
    5370:	01d71793          	slli	a5,a4,0x1d
    5374:	810d                	srli	a0,a0,0x3
    5376:	00a7e8b3          	or	a7,a5,a0
    537a:	00375793          	srli	a5,a4,0x3
    537e:	bb29                	j	5098 <__adddf3+0x31a>
    5380:	7ff00793          	li	a5,2047
    5384:	d4f682e3          	beq	a3,a5,50c8 <__adddf3+0x34a>
    5388:	01ff0933          	add	s2,t5,t6
    538c:	01e93633          	sltu	a2,s2,t5
    5390:	010707b3          	add	a5,a4,a6
    5394:	97b2                	add	a5,a5,a2
    5396:	01f79893          	slli	a7,a5,0x1f
    539a:	00195913          	srli	s2,s2,0x1
    539e:	0128e933          	or	s2,a7,s2
    53a2:	0017d613          	srli	a2,a5,0x1
    53a6:	84b6                	mv	s1,a3
    53a8:	b9c1                	j	5078 <__adddf3+0x2fa>
    53aa:	41ef8933          	sub	s2,t6,t5
    53ae:	40e80733          	sub	a4,a6,a4
    53b2:	012fb633          	sltu	a2,t6,s2
    53b6:	40c70433          	sub	s0,a4,a2
    53ba:	89f6                	mv	s3,t4
    53bc:	b449                	j	4e3e <__adddf3+0xc0>
    53be:	01e76933          	or	s2,a4,t5
    53c2:	01203933          	snez	s2,s2
    53c6:	bd01                	j	51d6 <__adddf3+0x458>
    53c8:	fe058793          	addi	a5,a1,-32
    53cc:	02000693          	li	a3,32
    53d0:	00f757b3          	srl	a5,a4,a5
    53d4:	00d58a63          	beq	a1,a3,53e8 <__adddf3+0x66a>
    53d8:	04000693          	li	a3,64
    53dc:	40b685b3          	sub	a1,a3,a1
    53e0:	00b71733          	sll	a4,a4,a1
    53e4:	00ef6f33          	or	t5,t5,a4
    53e8:	01e03933          	snez	s2,t5
    53ec:	00f96933          	or	s2,s2,a5
    53f0:	bd55                	j	52a4 <__adddf3+0x526>
    53f2:	00361793          	slli	a5,a2,0x3
    53f6:	838d                	srli	a5,a5,0x3
    53f8:	01d81893          	slli	a7,a6,0x1d
    53fc:	0117e8b3          	or	a7,a5,a7
    5400:	00385793          	srli	a5,a6,0x3
    5404:	b1ed                	j	50ee <__adddf3+0x370>
    5406:	00c968b3          	or	a7,s2,a2
    540a:	c60897e3          	bnez	a7,5078 <__adddf3+0x2fa>
    540e:	4781                	li	a5,0
    5410:	4981                	li	s3,0
    5412:	b159                	j	5098 <__adddf3+0x31a>
    5414:	41ef8933          	sub	s2,t6,t5
    5418:	40e807b3          	sub	a5,a6,a4
    541c:	012fb633          	sltu	a2,t6,s2
    5420:	40c78633          	sub	a2,a5,a2
    5424:	89f6                	mv	s3,t4
    5426:	4485                	li	s1,1
    5428:	b411                	j	4e2c <__adddf3+0xae>
    542a:	00361693          	slli	a3,a2,0x3
    542e:	01d81793          	slli	a5,a6,0x1d
    5432:	828d                	srli	a3,a3,0x3
    5434:	00d7e8b3          	or	a7,a5,a3
    5438:	00385793          	srli	a5,a6,0x3
    543c:	b9b1                	j	5098 <__adddf3+0x31a>
    543e:	00361693          	slli	a3,a2,0x3
    5442:	01d81793          	slli	a5,a6,0x1d
    5446:	828d                	srli	a3,a3,0x3
    5448:	00d7e8b3          	or	a7,a5,a3
    544c:	84aa                	mv	s1,a0
    544e:	00385793          	srli	a5,a6,0x3
    5452:	b93d                	j	5090 <__adddf3+0x312>
    5454:	fe050793          	addi	a5,a0,-32
    5458:	02000693          	li	a3,32
    545c:	00f757b3          	srl	a5,a4,a5
    5460:	00d50a63          	beq	a0,a3,5474 <__adddf3+0x6f6>
    5464:	04000693          	li	a3,64
    5468:	40a68533          	sub	a0,a3,a0
    546c:	00a71733          	sll	a4,a4,a0
    5470:	00ef6f33          	or	t5,t5,a4
    5474:	01e03933          	snez	s2,t5
    5478:	00f96933          	or	s2,s2,a5
    547c:	bba9                	j	51d6 <__adddf3+0x458>
    547e:	4581                	li	a1,0
    5480:	7ff00513          	li	a0,2047
    5484:	000807b7          	lui	a5,0x80
    5488:	bca9                	j	4ee2 <__adddf3+0x164>
    548a:	01ff0933          	add	s2,t5,t6
    548e:	010707b3          	add	a5,a4,a6
    5492:	01f93633          	sltu	a2,s2,t6
    5496:	963e                	add	a2,a2,a5
    5498:	b375                	j	5244 <__adddf3+0x4c6>
    549a:	00361693          	slli	a3,a2,0x3
    549e:	01d81793          	slli	a5,a6,0x1d
    54a2:	828d                	srli	a3,a3,0x3
    54a4:	00d7e8b3          	or	a7,a5,a3
    54a8:	00385793          	srli	a5,a6,0x3
    54ac:	b189                	j	50ee <__adddf3+0x370>

000054ae <__divdf3>:
    54ae:	7139                	addi	sp,sp,-64
    54b0:	0145d793          	srli	a5,a1,0x14
    54b4:	dc22                	sw	s0,56(sp)
    54b6:	d84a                	sw	s2,48(sp)
    54b8:	d256                	sw	s5,36(sp)
    54ba:	892a                	mv	s2,a0
    54bc:	00c59413          	slli	s0,a1,0xc
    54c0:	de06                	sw	ra,60(sp)
    54c2:	da26                	sw	s1,52(sp)
    54c4:	d64e                	sw	s3,44(sp)
    54c6:	d452                	sw	s4,40(sp)
    54c8:	d05a                	sw	s6,32(sp)
    54ca:	ce5e                	sw	s7,28(sp)
    54cc:	7ff7f513          	andi	a0,a5,2047
    54d0:	8031                	srli	s0,s0,0xc
    54d2:	01f5da93          	srli	s5,a1,0x1f
    54d6:	10050b63          	beqz	a0,55ec <__divdf3+0x13e>
    54da:	7ff00793          	li	a5,2047
    54de:	14f50b63          	beq	a0,a5,5634 <__divdf3+0x186>
    54e2:	01d95a13          	srli	s4,s2,0x1d
    54e6:	040e                	slli	s0,s0,0x3
    54e8:	008a6433          	or	s0,s4,s0
    54ec:	00800a37          	lui	s4,0x800
    54f0:	01446a33          	or	s4,s0,s4
    54f4:	00391b13          	slli	s6,s2,0x3
    54f8:	c0150493          	addi	s1,a0,-1023
    54fc:	4401                	li	s0,0
    54fe:	4b81                	li	s7,0
    5500:	0146d813          	srli	a6,a3,0x14
    5504:	00c69913          	slli	s2,a3,0xc
    5508:	7ff87813          	andi	a6,a6,2047
    550c:	88b2                	mv	a7,a2
    550e:	00c95913          	srli	s2,s2,0xc
    5512:	01f6d993          	srli	s3,a3,0x1f
    5516:	08080e63          	beqz	a6,55b2 <__divdf3+0x104>
    551a:	7ff00793          	li	a5,2047
    551e:	04f80063          	beq	a6,a5,555e <__divdf3+0xb0>
    5522:	01d65713          	srli	a4,a2,0x1d
    5526:	090e                	slli	s2,s2,0x3
    5528:	01276933          	or	s2,a4,s2
    552c:	c0180813          	addi	a6,a6,-1023 # ffc01 <_data_lma+0xf8a2d>
    5530:	008007b7          	lui	a5,0x800
    5534:	00f96733          	or	a4,s2,a5
    5538:	00361893          	slli	a7,a2,0x3
    553c:	410484b3          	sub	s1,s1,a6
    5540:	4581                	li	a1,0
    5542:	47bd                	li	a5,15
    5544:	013ac833          	xor	a6,s5,s3
    5548:	1a87e463          	bltu	a5,s0,56f0 <__divdf3+0x242>
    554c:	00002797          	auipc	a5,0x2
    5550:	b0878793          	addi	a5,a5,-1272 # 7054 <_ctype_+0x104>
    5554:	040a                	slli	s0,s0,0x2
    5556:	943e                	add	s0,s0,a5
    5558:	4010                	lw	a2,0(s0)
    555a:	963e                	add	a2,a2,a5
    555c:	8602                	jr	a2
    555e:	00c96733          	or	a4,s2,a2
    5562:	80148493          	addi	s1,s1,-2047
    5566:	10071263          	bnez	a4,566a <__divdf3+0x1bc>
    556a:	00246413          	ori	s0,s0,2
    556e:	4881                	li	a7,0
    5570:	4589                	li	a1,2
    5572:	bfc1                	j	5542 <__divdf3+0x94>
    5574:	7ff00613          	li	a2,2047
    5578:	4781                	li	a5,0
    557a:	4701                	li	a4,0
    557c:	07b2                	slli	a5,a5,0xc
    557e:	50f2                	lw	ra,60(sp)
    5580:	5462                	lw	s0,56(sp)
    5582:	0652                	slli	a2,a2,0x14
    5584:	83b1                	srli	a5,a5,0xc
    5586:	087e                	slli	a6,a6,0x1f
    5588:	8fd1                	or	a5,a5,a2
    558a:	0107e7b3          	or	a5,a5,a6
    558e:	54d2                	lw	s1,52(sp)
    5590:	5942                	lw	s2,48(sp)
    5592:	59b2                	lw	s3,44(sp)
    5594:	5a22                	lw	s4,40(sp)
    5596:	5a92                	lw	s5,36(sp)
    5598:	5b02                	lw	s6,32(sp)
    559a:	4bf2                	lw	s7,28(sp)
    559c:	853a                	mv	a0,a4
    559e:	85be                	mv	a1,a5
    55a0:	6121                	addi	sp,sp,64
    55a2:	8082                	ret
    55a4:	4801                	li	a6,0
    55a6:	7ff00613          	li	a2,2047
    55aa:	000807b7          	lui	a5,0x80
    55ae:	4701                	li	a4,0
    55b0:	b7f1                	j	557c <__divdf3+0xce>
    55b2:	00c96733          	or	a4,s2,a2
    55b6:	c74d                	beqz	a4,5660 <__divdf3+0x1b2>
    55b8:	30090863          	beqz	s2,58c8 <__divdf3+0x41a>
    55bc:	854a                	mv	a0,s2
    55be:	c432                	sw	a2,8(sp)
    55c0:	5fc010ef          	jal	ra,6bbc <__clzsi2>
    55c4:	4622                	lw	a2,8(sp)
    55c6:	ff550713          	addi	a4,a0,-11
    55ca:	47f5                	li	a5,29
    55cc:	ff850693          	addi	a3,a0,-8
    55d0:	8f99                	sub	a5,a5,a4
    55d2:	00d91933          	sll	s2,s2,a3
    55d6:	00f657b3          	srl	a5,a2,a5
    55da:	0127e733          	or	a4,a5,s2
    55de:	00d618b3          	sll	a7,a2,a3
    55e2:	9526                	add	a0,a0,s1
    55e4:	3f350493          	addi	s1,a0,1011
    55e8:	4581                	li	a1,0
    55ea:	bfa1                	j	5542 <__divdf3+0x94>
    55ec:	01246a33          	or	s4,s0,s2
    55f0:	060a0363          	beqz	s4,5656 <__divdf3+0x1a8>
    55f4:	c636                	sw	a3,12(sp)
    55f6:	c432                	sw	a2,8(sp)
    55f8:	2a040663          	beqz	s0,58a4 <__divdf3+0x3f6>
    55fc:	8522                	mv	a0,s0
    55fe:	5be010ef          	jal	ra,6bbc <__clzsi2>
    5602:	4622                	lw	a2,8(sp)
    5604:	46b2                	lw	a3,12(sp)
    5606:	84aa                	mv	s1,a0
    5608:	ff550713          	addi	a4,a0,-11
    560c:	4a75                	li	s4,29
    560e:	ff848b13          	addi	s6,s1,-8
    5612:	40ea0a33          	sub	s4,s4,a4
    5616:	01641433          	sll	s0,s0,s6
    561a:	01495a33          	srl	s4,s2,s4
    561e:	008a6a33          	or	s4,s4,s0
    5622:	01691b33          	sll	s6,s2,s6
    5626:	c0d00513          	li	a0,-1011
    562a:	409504b3          	sub	s1,a0,s1
    562e:	4401                	li	s0,0
    5630:	4b81                	li	s7,0
    5632:	b5f9                	j	5500 <__divdf3+0x52>
    5634:	01246a33          	or	s4,s0,s2
    5638:	000a1863          	bnez	s4,5648 <__divdf3+0x19a>
    563c:	4421                	li	s0,8
    563e:	4b01                	li	s6,0
    5640:	7ff00493          	li	s1,2047
    5644:	4b89                	li	s7,2
    5646:	bd6d                	j	5500 <__divdf3+0x52>
    5648:	8a22                	mv	s4,s0
    564a:	8b4a                	mv	s6,s2
    564c:	4431                	li	s0,12
    564e:	7ff00493          	li	s1,2047
    5652:	4b8d                	li	s7,3
    5654:	b575                	j	5500 <__divdf3+0x52>
    5656:	4411                	li	s0,4
    5658:	4b01                	li	s6,0
    565a:	4481                	li	s1,0
    565c:	4b85                	li	s7,1
    565e:	b54d                	j	5500 <__divdf3+0x52>
    5660:	00146413          	ori	s0,s0,1
    5664:	4881                	li	a7,0
    5666:	4585                	li	a1,1
    5668:	bde9                	j	5542 <__divdf3+0x94>
    566a:	00346413          	ori	s0,s0,3
    566e:	874a                	mv	a4,s2
    5670:	458d                	li	a1,3
    5672:	bdc1                	j	5542 <__divdf3+0x94>
    5674:	2e050a63          	beqz	a0,5968 <__divdf3+0x4ba>
    5678:	4785                	li	a5,1
    567a:	8f89                	sub	a5,a5,a0
    567c:	03800693          	li	a3,56
    5680:	32f6dd63          	bge	a3,a5,59ba <__divdf3+0x50c>
    5684:	4601                	li	a2,0
    5686:	4781                	li	a5,0
    5688:	4701                	li	a4,0
    568a:	bdcd                	j	557c <__divdf3+0xce>
    568c:	86ce                	mv	a3,s3
    568e:	4789                	li	a5,2
    5690:	3af58d63          	beq	a1,a5,5a4a <__divdf3+0x59c>
    5694:	478d                	li	a5,3
    5696:	f0f587e3          	beq	a1,a5,55a4 <__divdf3+0xf6>
    569a:	4785                	li	a5,1
    569c:	8836                	mv	a6,a3
    569e:	fef583e3          	beq	a1,a5,5684 <__divdf3+0x1d6>
    56a2:	3ff48513          	addi	a0,s1,1023
    56a6:	fca057e3          	blez	a0,5674 <__divdf3+0x1c6>
    56aa:	0078f793          	andi	a5,a7,7
    56ae:	28079663          	bnez	a5,593a <__divdf3+0x48c>
    56b2:	0038d693          	srli	a3,a7,0x3
    56b6:	00771793          	slli	a5,a4,0x7
    56ba:	0007d863          	bgez	a5,56ca <__divdf3+0x21c>
    56be:	ff0007b7          	lui	a5,0xff000
    56c2:	17fd                	addi	a5,a5,-1
    56c4:	8f7d                	and	a4,a4,a5
    56c6:	40048513          	addi	a0,s1,1024
    56ca:	7fe00793          	li	a5,2046
    56ce:	eaa7c3e3          	blt	a5,a0,5574 <__divdf3+0xc6>
    56d2:	01d71613          	slli	a2,a4,0x1d
    56d6:	00971793          	slli	a5,a4,0x9
    56da:	83b1                	srli	a5,a5,0xc
    56dc:	00d66733          	or	a4,a2,a3
    56e0:	7ff57613          	andi	a2,a0,2047
    56e4:	bd61                	j	557c <__divdf3+0xce>
    56e6:	86d6                	mv	a3,s5
    56e8:	8752                	mv	a4,s4
    56ea:	88da                	mv	a7,s6
    56ec:	85de                	mv	a1,s7
    56ee:	b745                	j	568e <__divdf3+0x1e0>
    56f0:	23476163          	bltu	a4,s4,5912 <__divdf3+0x464>
    56f4:	20ea0d63          	beq	s4,a4,590e <__divdf3+0x460>
    56f8:	86da                	mv	a3,s6
    56fa:	14fd                	addi	s1,s1,-1
    56fc:	8452                	mv	s0,s4
    56fe:	4b01                	li	s6,0
    5700:	00871793          	slli	a5,a4,0x8
    5704:	0188d313          	srli	t1,a7,0x18
    5708:	00f36333          	or	t1,t1,a5
    570c:	01035e93          	srli	t4,t1,0x10
    5710:	03d457b3          	divu	a5,s0,t4
    5714:	01031f13          	slli	t5,t1,0x10
    5718:	010f5f13          	srli	t5,t5,0x10
    571c:	0106d593          	srli	a1,a3,0x10
    5720:	00889e13          	slli	t3,a7,0x8
    5724:	03d47433          	remu	s0,s0,t4
    5728:	02ff0733          	mul	a4,t5,a5
    572c:	0442                	slli	s0,s0,0x10
    572e:	8dc1                	or	a1,a1,s0
    5730:	00e5fb63          	bgeu	a1,a4,5746 <__divdf3+0x298>
    5734:	959a                	add	a1,a1,t1
    5736:	fff78613          	addi	a2,a5,-1 # feffffff <_eusrstack+0xdefdffff>
    573a:	2665ee63          	bltu	a1,t1,59b6 <__divdf3+0x508>
    573e:	26e5fc63          	bgeu	a1,a4,59b6 <__divdf3+0x508>
    5742:	17f9                	addi	a5,a5,-2
    5744:	959a                	add	a1,a1,t1
    5746:	8d99                	sub	a1,a1,a4
    5748:	03d5d733          	divu	a4,a1,t4
    574c:	06c2                	slli	a3,a3,0x10
    574e:	82c1                	srli	a3,a3,0x10
    5750:	03d5f5b3          	remu	a1,a1,t4
    5754:	02ef0633          	mul	a2,t5,a4
    5758:	05c2                	slli	a1,a1,0x10
    575a:	8dd5                	or	a1,a1,a3
    575c:	00c5fb63          	bgeu	a1,a2,5772 <__divdf3+0x2c4>
    5760:	959a                	add	a1,a1,t1
    5762:	fff70693          	addi	a3,a4,-1 # 7fffff <_data_lma+0x7f8e2b>
    5766:	2465e663          	bltu	a1,t1,59b2 <__divdf3+0x504>
    576a:	24c5f463          	bgeu	a1,a2,59b2 <__divdf3+0x504>
    576e:	1779                	addi	a4,a4,-2
    5770:	959a                	add	a1,a1,t1
    5772:	07c2                	slli	a5,a5,0x10
    5774:	6441                	lui	s0,0x10
    5776:	8f5d                	or	a4,a4,a5
    5778:	fff40793          	addi	a5,s0,-1 # ffff <_data_lma+0x8e2b>
    577c:	00f77533          	and	a0,a4,a5
    5780:	01075893          	srli	a7,a4,0x10
    5784:	010e5f93          	srli	t6,t3,0x10
    5788:	00fe77b3          	and	a5,t3,a5
    578c:	02f502b3          	mul	t0,a0,a5
    5790:	40c586b3          	sub	a3,a1,a2
    5794:	02f883b3          	mul	t2,a7,a5
    5798:	0102d593          	srli	a1,t0,0x10
    579c:	02af8633          	mul	a2,t6,a0
    57a0:	961e                	add	a2,a2,t2
    57a2:	962e                	add	a2,a2,a1
    57a4:	03f88533          	mul	a0,a7,t6
    57a8:	00767363          	bgeu	a2,t2,57ae <__divdf3+0x300>
    57ac:	9522                	add	a0,a0,s0
    57ae:	68c1                	lui	a7,0x10
    57b0:	18fd                	addi	a7,a7,-1
    57b2:	01065593          	srli	a1,a2,0x10
    57b6:	01167633          	and	a2,a2,a7
    57ba:	0642                	slli	a2,a2,0x10
    57bc:	0112f8b3          	and	a7,t0,a7
    57c0:	95aa                	add	a1,a1,a0
    57c2:	9646                	add	a2,a2,a7
    57c4:	12b6e663          	bltu	a3,a1,58f0 <__divdf3+0x442>
    57c8:	12b68263          	beq	a3,a1,58ec <__divdf3+0x43e>
    57cc:	40cb0633          	sub	a2,s6,a2
    57d0:	8e8d                	sub	a3,a3,a1
    57d2:	00cb3b33          	sltu	s6,s6,a2
    57d6:	41668b33          	sub	s6,a3,s6
    57da:	3ff48513          	addi	a0,s1,1023
    57de:	17630c63          	beq	t1,s6,5956 <__divdf3+0x4a8>
    57e2:	03db58b3          	divu	a7,s6,t4
    57e6:	01065593          	srli	a1,a2,0x10
    57ea:	03db7b33          	remu	s6,s6,t4
    57ee:	031f06b3          	mul	a3,t5,a7
    57f2:	0b42                	slli	s6,s6,0x10
    57f4:	0165eb33          	or	s6,a1,s6
    57f8:	00db7b63          	bgeu	s6,a3,580e <__divdf3+0x360>
    57fc:	9b1a                	add	s6,s6,t1
    57fe:	fff88593          	addi	a1,a7,-1 # ffff <_data_lma+0x8e2b>
    5802:	206b6d63          	bltu	s6,t1,5a1c <__divdf3+0x56e>
    5806:	20db7b63          	bgeu	s6,a3,5a1c <__divdf3+0x56e>
    580a:	18f9                	addi	a7,a7,-2
    580c:	9b1a                	add	s6,s6,t1
    580e:	40db0b33          	sub	s6,s6,a3
    5812:	03db56b3          	divu	a3,s6,t4
    5816:	0642                	slli	a2,a2,0x10
    5818:	8241                	srli	a2,a2,0x10
    581a:	03db7b33          	remu	s6,s6,t4
    581e:	02df0f33          	mul	t5,t5,a3
    5822:	0b42                	slli	s6,s6,0x10
    5824:	01666633          	or	a2,a2,s6
    5828:	01e67b63          	bgeu	a2,t5,583e <__divdf3+0x390>
    582c:	961a                	add	a2,a2,t1
    582e:	fff68593          	addi	a1,a3,-1 # 7fffff <_data_lma+0x7f8e2b>
    5832:	1e666763          	bltu	a2,t1,5a20 <__divdf3+0x572>
    5836:	1fe67563          	bgeu	a2,t5,5a20 <__divdf3+0x572>
    583a:	16f9                	addi	a3,a3,-2
    583c:	961a                	add	a2,a2,t1
    583e:	08c2                	slli	a7,a7,0x10
    5840:	00d8e8b3          	or	a7,a7,a3
    5844:	01089593          	slli	a1,a7,0x10
    5848:	0108d293          	srli	t0,a7,0x10
    584c:	81c1                	srli	a1,a1,0x10
    584e:	02f58eb3          	mul	t4,a1,a5
    5852:	41e60633          	sub	a2,a2,t5
    5856:	02bf85b3          	mul	a1,t6,a1
    585a:	010ed693          	srli	a3,t4,0x10
    585e:	02f287b3          	mul	a5,t0,a5
    5862:	95be                	add	a1,a1,a5
    5864:	96ae                	add	a3,a3,a1
    5866:	025f8fb3          	mul	t6,t6,t0
    586a:	00f6f463          	bgeu	a3,a5,5872 <__divdf3+0x3c4>
    586e:	67c1                	lui	a5,0x10
    5870:	9fbe                	add	t6,t6,a5
    5872:	65c1                	lui	a1,0x10
    5874:	15fd                	addi	a1,a1,-1
    5876:	0106d793          	srli	a5,a3,0x10
    587a:	8eed                	and	a3,a3,a1
    587c:	06c2                	slli	a3,a3,0x10
    587e:	00befeb3          	and	t4,t4,a1
    5882:	9fbe                	add	t6,t6,a5
    5884:	96f6                	add	a3,a3,t4
    5886:	09f67f63          	bgeu	a2,t6,5924 <__divdf3+0x476>
    588a:	961a                	add	a2,a2,t1
    588c:	fff88793          	addi	a5,a7,-1
    5890:	1a666963          	bltu	a2,t1,5a42 <__divdf3+0x594>
    5894:	19f66863          	bltu	a2,t6,5a24 <__divdf3+0x576>
    5898:	1bf60f63          	beq	a2,t6,5a56 <__divdf3+0x5a8>
    589c:	88be                	mv	a7,a5
    589e:	0018e893          	ori	a7,a7,1
    58a2:	b511                	j	56a6 <__divdf3+0x1f8>
    58a4:	854a                	mv	a0,s2
    58a6:	316010ef          	jal	ra,6bbc <__clzsi2>
    58aa:	01550713          	addi	a4,a0,21
    58ae:	45f1                	li	a1,28
    58b0:	02050493          	addi	s1,a0,32
    58b4:	4622                	lw	a2,8(sp)
    58b6:	46b2                	lw	a3,12(sp)
    58b8:	d4e5dae3          	bge	a1,a4,560c <__divdf3+0x15e>
    58bc:	ff850413          	addi	s0,a0,-8
    58c0:	00891a33          	sll	s4,s2,s0
    58c4:	4b01                	li	s6,0
    58c6:	b385                	j	5626 <__divdf3+0x178>
    58c8:	8532                	mv	a0,a2
    58ca:	c432                	sw	a2,8(sp)
    58cc:	2f0010ef          	jal	ra,6bbc <__clzsi2>
    58d0:	01550713          	addi	a4,a0,21
    58d4:	46f1                	li	a3,28
    58d6:	87aa                	mv	a5,a0
    58d8:	4622                	lw	a2,8(sp)
    58da:	02050513          	addi	a0,a0,32
    58de:	cee6d6e3          	bge	a3,a4,55ca <__divdf3+0x11c>
    58e2:	17e1                	addi	a5,a5,-8
    58e4:	00f61733          	sll	a4,a2,a5
    58e8:	4881                	li	a7,0
    58ea:	b9e5                	j	55e2 <__divdf3+0x134>
    58ec:	eecb70e3          	bgeu	s6,a2,57cc <__divdf3+0x31e>
    58f0:	9b72                	add	s6,s6,t3
    58f2:	01cb3533          	sltu	a0,s6,t3
    58f6:	951a                	add	a0,a0,t1
    58f8:	96aa                	add	a3,a3,a0
    58fa:	fff70513          	addi	a0,a4,-1
    58fe:	02d37863          	bgeu	t1,a3,592e <__divdf3+0x480>
    5902:	10b6e663          	bltu	a3,a1,5a0e <__divdf3+0x560>
    5906:	10d58263          	beq	a1,a3,5a0a <__divdf3+0x55c>
    590a:	872a                	mv	a4,a0
    590c:	b5c1                	j	57cc <__divdf3+0x31e>
    590e:	df1b65e3          	bltu	s6,a7,56f8 <__divdf3+0x24a>
    5912:	001b5593          	srli	a1,s6,0x1
    5916:	01fa1693          	slli	a3,s4,0x1f
    591a:	001a5413          	srli	s0,s4,0x1
    591e:	8ecd                	or	a3,a3,a1
    5920:	0b7e                	slli	s6,s6,0x1f
    5922:	bbf9                	j	5700 <__divdf3+0x252>
    5924:	f7f61de3          	bne	a2,t6,589e <__divdf3+0x3f0>
    5928:	d6068fe3          	beqz	a3,56a6 <__divdf3+0x1f8>
    592c:	bfb9                	j	588a <__divdf3+0x3dc>
    592e:	fcd31ee3          	bne	t1,a3,590a <__divdf3+0x45c>
    5932:	fdcb78e3          	bgeu	s6,t3,5902 <__divdf3+0x454>
    5936:	872a                	mv	a4,a0
    5938:	bd51                	j	57cc <__divdf3+0x31e>
    593a:	00f8f793          	andi	a5,a7,15
    593e:	4691                	li	a3,4
    5940:	d6d789e3          	beq	a5,a3,56b2 <__divdf3+0x204>
    5944:	ffc8b793          	sltiu	a5,a7,-4
    5948:	00488693          	addi	a3,a7,4
    594c:	0017c793          	xori	a5,a5,1
    5950:	828d                	srli	a3,a3,0x3
    5952:	973e                	add	a4,a4,a5
    5954:	b38d                	j	56b6 <__divdf3+0x208>
    5956:	4681                	li	a3,0
    5958:	4785                	li	a5,1
    595a:	fea04ce3          	bgtz	a0,5952 <__divdf3+0x4a4>
    595e:	58fd                	li	a7,-1
    5960:	d0051ce3          	bnez	a0,5678 <__divdf3+0x1ca>
    5964:	c0100493          	li	s1,-1023
    5968:	4785                	li	a5,1
    596a:	41e48513          	addi	a0,s1,1054
    596e:	00a716b3          	sll	a3,a4,a0
    5972:	00f8d633          	srl	a2,a7,a5
    5976:	00a89533          	sll	a0,a7,a0
    597a:	8ed1                	or	a3,a3,a2
    597c:	00a03533          	snez	a0,a0
    5980:	8ec9                	or	a3,a3,a0
    5982:	0076f613          	andi	a2,a3,7
    5986:	00f75733          	srl	a4,a4,a5
    598a:	ce01                	beqz	a2,59a2 <__divdf3+0x4f4>
    598c:	00f6f793          	andi	a5,a3,15
    5990:	4611                	li	a2,4
    5992:	00c78863          	beq	a5,a2,59a2 <__divdf3+0x4f4>
    5996:	00468793          	addi	a5,a3,4
    599a:	00d7b6b3          	sltu	a3,a5,a3
    599e:	9736                	add	a4,a4,a3
    59a0:	86be                	mv	a3,a5
    59a2:	00871793          	slli	a5,a4,0x8
    59a6:	0407d863          	bgez	a5,59f6 <__divdf3+0x548>
    59aa:	4605                	li	a2,1
    59ac:	4781                	li	a5,0
    59ae:	4701                	li	a4,0
    59b0:	b6f1                	j	557c <__divdf3+0xce>
    59b2:	8736                	mv	a4,a3
    59b4:	bb7d                	j	5772 <__divdf3+0x2c4>
    59b6:	87b2                	mv	a5,a2
    59b8:	b379                	j	5746 <__divdf3+0x298>
    59ba:	46fd                	li	a3,31
    59bc:	faf6d7e3          	bge	a3,a5,596a <__divdf3+0x4bc>
    59c0:	5605                	li	a2,-31
    59c2:	8e09                	sub	a2,a2,a0
    59c4:	02000693          	li	a3,32
    59c8:	00c75633          	srl	a2,a4,a2
    59cc:	00d78863          	beq	a5,a3,59dc <__divdf3+0x52e>
    59d0:	43e48793          	addi	a5,s1,1086
    59d4:	00f717b3          	sll	a5,a4,a5
    59d8:	00f8e8b3          	or	a7,a7,a5
    59dc:	011036b3          	snez	a3,a7
    59e0:	8ed1                	or	a3,a3,a2
    59e2:	0076f613          	andi	a2,a3,7
    59e6:	4781                	li	a5,0
    59e8:	ce01                	beqz	a2,5a00 <__divdf3+0x552>
    59ea:	00f6f793          	andi	a5,a3,15
    59ee:	4611                	li	a2,4
    59f0:	4701                	li	a4,0
    59f2:	fac792e3          	bne	a5,a2,5996 <__divdf3+0x4e8>
    59f6:	00971793          	slli	a5,a4,0x9
    59fa:	01d71613          	slli	a2,a4,0x1d
    59fe:	83b1                	srli	a5,a5,0xc
    5a00:	0036d713          	srli	a4,a3,0x3
    5a04:	8f51                	or	a4,a4,a2
    5a06:	4601                	li	a2,0
    5a08:	be95                	j	557c <__divdf3+0xce>
    5a0a:	f0cb70e3          	bgeu	s6,a2,590a <__divdf3+0x45c>
    5a0e:	9b72                	add	s6,s6,t3
    5a10:	01cb3533          	sltu	a0,s6,t3
    5a14:	951a                	add	a0,a0,t1
    5a16:	1779                	addi	a4,a4,-2
    5a18:	96aa                	add	a3,a3,a0
    5a1a:	bb4d                	j	57cc <__divdf3+0x31e>
    5a1c:	88ae                	mv	a7,a1
    5a1e:	bbc5                	j	580e <__divdf3+0x360>
    5a20:	86ae                	mv	a3,a1
    5a22:	bd31                	j	583e <__divdf3+0x390>
    5a24:	001e1793          	slli	a5,t3,0x1
    5a28:	01c7be33          	sltu	t3,a5,t3
    5a2c:	9372                	add	t1,t1,t3
    5a2e:	961a                	add	a2,a2,t1
    5a30:	18f9                	addi	a7,a7,-2
    5a32:	8e3e                	mv	t3,a5
    5a34:	e7f615e3          	bne	a2,t6,589e <__divdf3+0x3f0>
    5a38:	c6de07e3          	beq	t3,a3,56a6 <__divdf3+0x1f8>
    5a3c:	0018e893          	ori	a7,a7,1
    5a40:	b19d                	j	56a6 <__divdf3+0x1f8>
    5a42:	88be                	mv	a7,a5
    5a44:	fff60ae3          	beq	a2,t6,5a38 <__divdf3+0x58a>
    5a48:	bd99                	j	589e <__divdf3+0x3f0>
    5a4a:	8836                	mv	a6,a3
    5a4c:	7ff00613          	li	a2,2047
    5a50:	4781                	li	a5,0
    5a52:	4701                	li	a4,0
    5a54:	b625                	j	557c <__divdf3+0xce>
    5a56:	fcde67e3          	bltu	t3,a3,5a24 <__divdf3+0x576>
    5a5a:	88be                	mv	a7,a5
    5a5c:	fede10e3          	bne	t3,a3,5a3c <__divdf3+0x58e>
    5a60:	b199                	j	56a6 <__divdf3+0x1f8>

00005a62 <__eqdf2>:
    5a62:	0145d713          	srli	a4,a1,0x14
    5a66:	001007b7          	lui	a5,0x100
    5a6a:	17fd                	addi	a5,a5,-1
    5a6c:	0146d813          	srli	a6,a3,0x14
    5a70:	7ff77713          	andi	a4,a4,2047
    5a74:	7ff00893          	li	a7,2047
    5a78:	00b7fe33          	and	t3,a5,a1
    5a7c:	8eaa                	mv	t4,a0
    5a7e:	8ff5                	and	a5,a5,a3
    5a80:	81fd                	srli	a1,a1,0x1f
    5a82:	8f32                	mv	t5,a2
    5a84:	7ff87813          	andi	a6,a6,2047
    5a88:	82fd                	srli	a3,a3,0x1f
    5a8a:	01170b63          	beq	a4,a7,5aa0 <__eqdf2+0x3e>
    5a8e:	4305                	li	t1,1
    5a90:	01180663          	beq	a6,a7,5a9c <__eqdf2+0x3a>
    5a94:	01071463          	bne	a4,a6,5a9c <__eqdf2+0x3a>
    5a98:	00fe0d63          	beq	t3,a5,5ab2 <__eqdf2+0x50>
    5a9c:	851a                	mv	a0,t1
    5a9e:	8082                	ret
    5aa0:	00ae68b3          	or	a7,t3,a0
    5aa4:	4305                	li	t1,1
    5aa6:	fe089be3          	bnez	a7,5a9c <__eqdf2+0x3a>
    5aaa:	fee819e3          	bne	a6,a4,5a9c <__eqdf2+0x3a>
    5aae:	8fd1                	or	a5,a5,a2
    5ab0:	f7f5                	bnez	a5,5a9c <__eqdf2+0x3a>
    5ab2:	4305                	li	t1,1
    5ab4:	ffee94e3          	bne	t4,t5,5a9c <__eqdf2+0x3a>
    5ab8:	4301                	li	t1,0
    5aba:	fed581e3          	beq	a1,a3,5a9c <__eqdf2+0x3a>
    5abe:	4305                	li	t1,1
    5ac0:	ff71                	bnez	a4,5a9c <__eqdf2+0x3a>
    5ac2:	00ae6533          	or	a0,t3,a0
    5ac6:	00a03333          	snez	t1,a0
    5aca:	bfc9                	j	5a9c <__eqdf2+0x3a>

00005acc <__gedf2>:
    5acc:	0145d713          	srli	a4,a1,0x14
    5ad0:	001007b7          	lui	a5,0x100
    5ad4:	17fd                	addi	a5,a5,-1
    5ad6:	0146d813          	srli	a6,a3,0x14
    5ada:	7ff77713          	andi	a4,a4,2047
    5ade:	7ff00893          	li	a7,2047
    5ae2:	00b7f333          	and	t1,a5,a1
    5ae6:	8e2a                	mv	t3,a0
    5ae8:	8ff5                	and	a5,a5,a3
    5aea:	81fd                	srli	a1,a1,0x1f
    5aec:	8eb2                	mv	t4,a2
    5aee:	7ff87813          	andi	a6,a6,2047
    5af2:	82fd                	srli	a3,a3,0x1f
    5af4:	03170863          	beq	a4,a7,5b24 <__gedf2+0x58>
    5af8:	03180063          	beq	a6,a7,5b18 <__gedf2+0x4c>
    5afc:	eb0d                	bnez	a4,5b2e <__gedf2+0x62>
    5afe:	00a368b3          	or	a7,t1,a0
    5b02:	00081463          	bnez	a6,5b0a <__gedf2+0x3e>
    5b06:	8e5d                	or	a2,a2,a5
    5b08:	ca29                	beqz	a2,5b5a <__gedf2+0x8e>
    5b0a:	04088563          	beqz	a7,5b54 <__gedf2+0x88>
    5b0e:	02d58863          	beq	a1,a3,5b3e <__gedf2+0x72>
    5b12:	4505                	li	a0,1
    5b14:	ed95                	bnez	a1,5b50 <__gedf2+0x84>
    5b16:	8082                	ret
    5b18:	00c7e8b3          	or	a7,a5,a2
    5b1c:	fe0880e3          	beqz	a7,5afc <__gedf2+0x30>
    5b20:	5579                	li	a0,-2
    5b22:	8082                	ret
    5b24:	00a36533          	or	a0,t1,a0
    5b28:	fd65                	bnez	a0,5b20 <__gedf2+0x54>
    5b2a:	02e80c63          	beq	a6,a4,5b62 <__gedf2+0x96>
    5b2e:	00081463          	bnez	a6,5b36 <__gedf2+0x6a>
    5b32:	8e5d                	or	a2,a2,a5
    5b34:	de79                	beqz	a2,5b12 <__gedf2+0x46>
    5b36:	fcd59ee3          	bne	a1,a3,5b12 <__gedf2+0x46>
    5b3a:	fce84ce3          	blt	a6,a4,5b12 <__gedf2+0x46>
    5b3e:	01074863          	blt	a4,a6,5b4e <__gedf2+0x82>
    5b42:	fc67e8e3          	bltu	a5,t1,5b12 <__gedf2+0x46>
    5b46:	02f30363          	beq	t1,a5,5b6c <__gedf2+0xa0>
    5b4a:	00f37f63          	bgeu	t1,a5,5b68 <__gedf2+0x9c>
    5b4e:	e581                	bnez	a1,5b56 <__gedf2+0x8a>
    5b50:	557d                	li	a0,-1
    5b52:	8082                	ret
    5b54:	def5                	beqz	a3,5b50 <__gedf2+0x84>
    5b56:	4505                	li	a0,1
    5b58:	8082                	ret
    5b5a:	4501                	li	a0,0
    5b5c:	fa089be3          	bnez	a7,5b12 <__gedf2+0x46>
    5b60:	8082                	ret
    5b62:	8e5d                	or	a2,a2,a5
    5b64:	da69                	beqz	a2,5b36 <__gedf2+0x6a>
    5b66:	bf6d                	j	5b20 <__gedf2+0x54>
    5b68:	4501                	li	a0,0
    5b6a:	8082                	ret
    5b6c:	fbcee3e3          	bltu	t4,t3,5b12 <__gedf2+0x46>
    5b70:	4501                	li	a0,0
    5b72:	fbde72e3          	bgeu	t3,t4,5b16 <__gedf2+0x4a>
    5b76:	f1e5                	bnez	a1,5b56 <__gedf2+0x8a>
    5b78:	bfe1                	j	5b50 <__gedf2+0x84>

00005b7a <__ledf2>:
    5b7a:	0145d713          	srli	a4,a1,0x14
    5b7e:	001007b7          	lui	a5,0x100
    5b82:	17fd                	addi	a5,a5,-1
    5b84:	0146d813          	srli	a6,a3,0x14
    5b88:	7ff77713          	andi	a4,a4,2047
    5b8c:	7ff00893          	li	a7,2047
    5b90:	00b7fe33          	and	t3,a5,a1
    5b94:	8eaa                	mv	t4,a0
    5b96:	8ff5                	and	a5,a5,a3
    5b98:	81fd                	srli	a1,a1,0x1f
    5b9a:	8f32                	mv	t5,a2
    5b9c:	7ff87813          	andi	a6,a6,2047
    5ba0:	82fd                	srli	a3,a3,0x1f
    5ba2:	03170e63          	beq	a4,a7,5bde <__ledf2+0x64>
    5ba6:	01180d63          	beq	a6,a7,5bc0 <__ledf2+0x46>
    5baa:	e329                	bnez	a4,5bec <__ledf2+0x72>
    5bac:	00ae68b3          	or	a7,t3,a0
    5bb0:	00081f63          	bnez	a6,5bce <__ledf2+0x54>
    5bb4:	8e5d                	or	a2,a2,a5
    5bb6:	ee01                	bnez	a2,5bce <__ledf2+0x54>
    5bb8:	4301                	li	t1,0
    5bba:	04088c63          	beqz	a7,5c12 <__ledf2+0x98>
    5bbe:	a821                	j	5bd6 <__ledf2+0x5c>
    5bc0:	00c7e8b3          	or	a7,a5,a2
    5bc4:	4309                	li	t1,2
    5bc6:	04089663          	bnez	a7,5c12 <__ledf2+0x98>
    5bca:	d36d                	beqz	a4,5bac <__ledf2+0x32>
    5bcc:	a005                	j	5bec <__ledf2+0x72>
    5bce:	04088463          	beqz	a7,5c16 <__ledf2+0x9c>
    5bd2:	02d58563          	beq	a1,a3,5bfc <__ledf2+0x82>
    5bd6:	4305                	li	t1,1
    5bd8:	cd8d                	beqz	a1,5c12 <__ledf2+0x98>
    5bda:	537d                	li	t1,-1
    5bdc:	a81d                	j	5c12 <__ledf2+0x98>
    5bde:	00ae68b3          	or	a7,t3,a0
    5be2:	4309                	li	t1,2
    5be4:	02089763          	bnez	a7,5c12 <__ledf2+0x98>
    5be8:	02e80a63          	beq	a6,a4,5c1c <__ledf2+0xa2>
    5bec:	00081463          	bnez	a6,5bf4 <__ledf2+0x7a>
    5bf0:	8e5d                	or	a2,a2,a5
    5bf2:	d275                	beqz	a2,5bd6 <__ledf2+0x5c>
    5bf4:	fed591e3          	bne	a1,a3,5bd6 <__ledf2+0x5c>
    5bf8:	fce84fe3          	blt	a6,a4,5bd6 <__ledf2+0x5c>
    5bfc:	01074963          	blt	a4,a6,5c0e <__ledf2+0x94>
    5c00:	fdc7ebe3          	bltu	a5,t3,5bd6 <__ledf2+0x5c>
    5c04:	00fe0f63          	beq	t3,a5,5c22 <__ledf2+0xa8>
    5c08:	4301                	li	t1,0
    5c0a:	00fe7463          	bgeu	t3,a5,5c12 <__ledf2+0x98>
    5c0e:	d5f1                	beqz	a1,5bda <__ledf2+0x60>
    5c10:	4305                	li	t1,1
    5c12:	851a                	mv	a0,t1
    5c14:	8082                	ret
    5c16:	feed                	bnez	a3,5c10 <__ledf2+0x96>
    5c18:	537d                	li	t1,-1
    5c1a:	bfe5                	j	5c12 <__ledf2+0x98>
    5c1c:	8e5d                	or	a2,a2,a5
    5c1e:	da79                	beqz	a2,5bf4 <__ledf2+0x7a>
    5c20:	bfcd                	j	5c12 <__ledf2+0x98>
    5c22:	fbdf6ae3          	bltu	t5,t4,5bd6 <__ledf2+0x5c>
    5c26:	4301                	li	t1,0
    5c28:	ffeef5e3          	bgeu	t4,t5,5c12 <__ledf2+0x98>
    5c2c:	f1f5                	bnez	a1,5c10 <__ledf2+0x96>
    5c2e:	b775                	j	5bda <__ledf2+0x60>

00005c30 <__muldf3>:
    5c30:	7139                	addi	sp,sp,-64
    5c32:	d84a                	sw	s2,48(sp)
    5c34:	0145d913          	srli	s2,a1,0x14
    5c38:	d64e                	sw	s3,44(sp)
    5c3a:	d452                	sw	s4,40(sp)
    5c3c:	d256                	sw	s5,36(sp)
    5c3e:	00c59993          	slli	s3,a1,0xc
    5c42:	de06                	sw	ra,60(sp)
    5c44:	dc22                	sw	s0,56(sp)
    5c46:	da26                	sw	s1,52(sp)
    5c48:	d05a                	sw	s6,32(sp)
    5c4a:	ce5e                	sw	s7,28(sp)
    5c4c:	7ff97913          	andi	s2,s2,2047
    5c50:	8a2a                	mv	s4,a0
    5c52:	00c9d993          	srli	s3,s3,0xc
    5c56:	01f5da93          	srli	s5,a1,0x1f
    5c5a:	0e090d63          	beqz	s2,5d54 <__muldf3+0x124>
    5c5e:	7ff00793          	li	a5,2047
    5c62:	18f90663          	beq	s2,a5,5dee <__muldf3+0x1be>
    5c66:	01d55413          	srli	s0,a0,0x1d
    5c6a:	098e                	slli	s3,s3,0x3
    5c6c:	013469b3          	or	s3,s0,s3
    5c70:	00800437          	lui	s0,0x800
    5c74:	0089e433          	or	s0,s3,s0
    5c78:	00351493          	slli	s1,a0,0x3
    5c7c:	c0190913          	addi	s2,s2,-1023
    5c80:	4981                	li	s3,0
    5c82:	4b81                	li	s7,0
    5c84:	0146d713          	srli	a4,a3,0x14
    5c88:	00c69a13          	slli	s4,a3,0xc
    5c8c:	7ff77713          	andi	a4,a4,2047
    5c90:	85b2                	mv	a1,a2
    5c92:	00ca5a13          	srli	s4,s4,0xc
    5c96:	01f6db13          	srli	s6,a3,0x1f
    5c9a:	10070b63          	beqz	a4,5db0 <__muldf3+0x180>
    5c9e:	7ff00793          	li	a5,2047
    5ca2:	04f70363          	beq	a4,a5,5ce8 <__muldf3+0xb8>
    5ca6:	01d65793          	srli	a5,a2,0x1d
    5caa:	0a0e                	slli	s4,s4,0x3
    5cac:	0147ea33          	or	s4,a5,s4
    5cb0:	c0170713          	addi	a4,a4,-1023
    5cb4:	008007b7          	lui	a5,0x800
    5cb8:	00fa67b3          	or	a5,s4,a5
    5cbc:	00361593          	slli	a1,a2,0x3
    5cc0:	993a                	add	s2,s2,a4
    5cc2:	4881                	li	a7,0
    5cc4:	016ac733          	xor	a4,s5,s6
    5cc8:	46bd                	li	a3,15
    5cca:	853a                	mv	a0,a4
    5ccc:	00190813          	addi	a6,s2,1
    5cd0:	1736e863          	bltu	a3,s3,5e40 <__muldf3+0x210>
    5cd4:	00001617          	auipc	a2,0x1
    5cd8:	3c060613          	addi	a2,a2,960 # 7094 <_ctype_+0x144>
    5cdc:	098a                	slli	s3,s3,0x2
    5cde:	99b2                	add	s3,s3,a2
    5ce0:	0009a683          	lw	a3,0(s3)
    5ce4:	96b2                	add	a3,a3,a2
    5ce6:	8682                	jr	a3
    5ce8:	00ca67b3          	or	a5,s4,a2
    5cec:	7ff90913          	addi	s2,s2,2047
    5cf0:	12079963          	bnez	a5,5e22 <__muldf3+0x1f2>
    5cf4:	0029e993          	ori	s3,s3,2
    5cf8:	4581                	li	a1,0
    5cfa:	4889                	li	a7,2
    5cfc:	b7e1                	j	5cc4 <__muldf3+0x94>
    5cfe:	4701                	li	a4,0
    5d00:	7ff00793          	li	a5,2047
    5d04:	00080437          	lui	s0,0x80
    5d08:	4481                	li	s1,0
    5d0a:	0432                	slli	s0,s0,0xc
    5d0c:	07d2                	slli	a5,a5,0x14
    5d0e:	8031                	srli	s0,s0,0xc
    5d10:	077e                	slli	a4,a4,0x1f
    5d12:	8c5d                	or	s0,s0,a5
    5d14:	8c59                	or	s0,s0,a4
    5d16:	85a2                	mv	a1,s0
    5d18:	50f2                	lw	ra,60(sp)
    5d1a:	5462                	lw	s0,56(sp)
    5d1c:	8526                	mv	a0,s1
    5d1e:	5942                	lw	s2,48(sp)
    5d20:	54d2                	lw	s1,52(sp)
    5d22:	59b2                	lw	s3,44(sp)
    5d24:	5a22                	lw	s4,40(sp)
    5d26:	5a92                	lw	s5,36(sp)
    5d28:	5b02                	lw	s6,32(sp)
    5d2a:	4bf2                	lw	s7,28(sp)
    5d2c:	6121                	addi	sp,sp,64
    5d2e:	8082                	ret
    5d30:	855a                	mv	a0,s6
    5d32:	843e                	mv	s0,a5
    5d34:	84ae                	mv	s1,a1
    5d36:	8bc6                	mv	s7,a7
    5d38:	4789                	li	a5,2
    5d3a:	0efb8d63          	beq	s7,a5,5e34 <__muldf3+0x204>
    5d3e:	478d                	li	a5,3
    5d40:	fafb8fe3          	beq	s7,a5,5cfe <__muldf3+0xce>
    5d44:	4785                	li	a5,1
    5d46:	872a                	mv	a4,a0
    5d48:	38fb9e63          	bne	s7,a5,60e4 <__muldf3+0x4b4>
    5d4c:	4781                	li	a5,0
    5d4e:	4401                	li	s0,0
    5d50:	4481                	li	s1,0
    5d52:	bf65                	j	5d0a <__muldf3+0xda>
    5d54:	00a9e433          	or	s0,s3,a0
    5d58:	c061                	beqz	s0,5e18 <__muldf3+0x1e8>
    5d5a:	c636                	sw	a3,12(sp)
    5d5c:	c432                	sw	a2,8(sp)
    5d5e:	2a098c63          	beqz	s3,6016 <__muldf3+0x3e6>
    5d62:	854e                	mv	a0,s3
    5d64:	659000ef          	jal	ra,6bbc <__clzsi2>
    5d68:	4622                	lw	a2,8(sp)
    5d6a:	46b2                	lw	a3,12(sp)
    5d6c:	87aa                	mv	a5,a0
    5d6e:	ff550713          	addi	a4,a0,-11
    5d72:	4475                	li	s0,29
    5d74:	ff878493          	addi	s1,a5,-8 # 7ffff8 <_data_lma+0x7f8e24>
    5d78:	8c19                	sub	s0,s0,a4
    5d7a:	009999b3          	sll	s3,s3,s1
    5d7e:	008a5433          	srl	s0,s4,s0
    5d82:	01346433          	or	s0,s0,s3
    5d86:	009a14b3          	sll	s1,s4,s1
    5d8a:	0146d713          	srli	a4,a3,0x14
    5d8e:	c0d00913          	li	s2,-1011
    5d92:	00c69a13          	slli	s4,a3,0xc
    5d96:	7ff77713          	andi	a4,a4,2047
    5d9a:	40f90933          	sub	s2,s2,a5
    5d9e:	4981                	li	s3,0
    5da0:	4b81                	li	s7,0
    5da2:	85b2                	mv	a1,a2
    5da4:	00ca5a13          	srli	s4,s4,0xc
    5da8:	01f6db13          	srli	s6,a3,0x1f
    5dac:	ee0719e3          	bnez	a4,5c9e <__muldf3+0x6e>
    5db0:	00ca67b3          	or	a5,s4,a2
    5db4:	c7b1                	beqz	a5,5e00 <__muldf3+0x1d0>
    5db6:	220a0f63          	beqz	s4,5ff4 <__muldf3+0x3c4>
    5dba:	8552                	mv	a0,s4
    5dbc:	c432                	sw	a2,8(sp)
    5dbe:	5ff000ef          	jal	ra,6bbc <__clzsi2>
    5dc2:	4622                	lw	a2,8(sp)
    5dc4:	872a                	mv	a4,a0
    5dc6:	ff550693          	addi	a3,a0,-11
    5dca:	47f5                	li	a5,29
    5dcc:	ff870593          	addi	a1,a4,-8
    5dd0:	8f95                	sub	a5,a5,a3
    5dd2:	00ba1a33          	sll	s4,s4,a1
    5dd6:	00f657b3          	srl	a5,a2,a5
    5dda:	0147e7b3          	or	a5,a5,s4
    5dde:	00b615b3          	sll	a1,a2,a1
    5de2:	40e90933          	sub	s2,s2,a4
    5de6:	c0d90913          	addi	s2,s2,-1011
    5dea:	4881                	li	a7,0
    5dec:	bde1                	j	5cc4 <__muldf3+0x94>
    5dee:	00a9e433          	or	s0,s3,a0
    5df2:	ec01                	bnez	s0,5e0a <__muldf3+0x1da>
    5df4:	49a1                	li	s3,8
    5df6:	4481                	li	s1,0
    5df8:	7ff00913          	li	s2,2047
    5dfc:	4b89                	li	s7,2
    5dfe:	b559                	j	5c84 <__muldf3+0x54>
    5e00:	0019e993          	ori	s3,s3,1
    5e04:	4581                	li	a1,0
    5e06:	4885                	li	a7,1
    5e08:	bd75                	j	5cc4 <__muldf3+0x94>
    5e0a:	844e                	mv	s0,s3
    5e0c:	84aa                	mv	s1,a0
    5e0e:	49b1                	li	s3,12
    5e10:	7ff00913          	li	s2,2047
    5e14:	4b8d                	li	s7,3
    5e16:	b5bd                	j	5c84 <__muldf3+0x54>
    5e18:	4991                	li	s3,4
    5e1a:	4481                	li	s1,0
    5e1c:	4901                	li	s2,0
    5e1e:	4b85                	li	s7,1
    5e20:	b595                	j	5c84 <__muldf3+0x54>
    5e22:	0039e993          	ori	s3,s3,3
    5e26:	87d2                	mv	a5,s4
    5e28:	488d                	li	a7,3
    5e2a:	bd69                	j	5cc4 <__muldf3+0x94>
    5e2c:	4789                	li	a5,2
    5e2e:	8556                	mv	a0,s5
    5e30:	f0fb97e3          	bne	s7,a5,5d3e <__muldf3+0x10e>
    5e34:	872a                	mv	a4,a0
    5e36:	7ff00793          	li	a5,2047
    5e3a:	4401                	li	s0,0
    5e3c:	4481                	li	s1,0
    5e3e:	b5f1                	j	5d0a <__muldf3+0xda>
    5e40:	6ec1                	lui	t4,0x10
    5e42:	fffe8613          	addi	a2,t4,-1 # ffff <_data_lma+0x8e2b>
    5e46:	0104d693          	srli	a3,s1,0x10
    5e4a:	0105de13          	srli	t3,a1,0x10
    5e4e:	8cf1                	and	s1,s1,a2
    5e50:	8df1                	and	a1,a1,a2
    5e52:	02958633          	mul	a2,a1,s1
    5e56:	02b68333          	mul	t1,a3,a1
    5e5a:	01065893          	srli	a7,a2,0x10
    5e5e:	029e0533          	mul	a0,t3,s1
    5e62:	951a                	add	a0,a0,t1
    5e64:	98aa                	add	a7,a7,a0
    5e66:	03c682b3          	mul	t0,a3,t3
    5e6a:	0068f363          	bgeu	a7,t1,5e70 <__muldf3+0x240>
    5e6e:	92f6                	add	t0,t0,t4
    5e70:	6fc1                	lui	t6,0x10
    5e72:	ffff8313          	addi	t1,t6,-1 # ffff <_data_lma+0x8e2b>
    5e76:	0067f533          	and	a0,a5,t1
    5e7a:	0107d393          	srli	t2,a5,0x10
    5e7e:	0068f7b3          	and	a5,a7,t1
    5e82:	07c2                	slli	a5,a5,0x10
    5e84:	00667333          	and	t1,a2,t1
    5e88:	933e                	add	t1,t1,a5
    5e8a:	02950633          	mul	a2,a0,s1
    5e8e:	0108d893          	srli	a7,a7,0x10
    5e92:	02a687b3          	mul	a5,a3,a0
    5e96:	01065f13          	srli	t5,a2,0x10
    5e9a:	029384b3          	mul	s1,t2,s1
    5e9e:	94be                	add	s1,s1,a5
    5ea0:	94fa                	add	s1,s1,t5
    5ea2:	02768eb3          	mul	t4,a3,t2
    5ea6:	00f4f363          	bgeu	s1,a5,5eac <__muldf3+0x27c>
    5eaa:	9efe                	add	t4,t4,t6
    5eac:	6a41                	lui	s4,0x10
    5eae:	fffa0793          	addi	a5,s4,-1 # ffff <_data_lma+0x8e2b>
    5eb2:	01045f93          	srli	t6,s0,0x10
    5eb6:	00f476b3          	and	a3,s0,a5
    5eba:	00f4f9b3          	and	s3,s1,a5
    5ebe:	8e7d                	and	a2,a2,a5
    5ec0:	80c1                	srli	s1,s1,0x10
    5ec2:	02d58433          	mul	s0,a1,a3
    5ec6:	09c2                	slli	s3,s3,0x10
    5ec8:	01d48f33          	add	t5,s1,t4
    5ecc:	99b2                	add	s3,s3,a2
    5ece:	98ce                	add	a7,a7,s3
    5ed0:	02de07b3          	mul	a5,t3,a3
    5ed4:	01045e93          	srli	t4,s0,0x10
    5ed8:	02bf85b3          	mul	a1,t6,a1
    5edc:	97ae                	add	a5,a5,a1
    5ede:	9ebe                	add	t4,t4,a5
    5ee0:	03fe0e33          	mul	t3,t3,t6
    5ee4:	00bef363          	bgeu	t4,a1,5eea <__muldf3+0x2ba>
    5ee8:	9e52                	add	t3,t3,s4
    5eea:	67c1                	lui	a5,0x10
    5eec:	fff78593          	addi	a1,a5,-1 # ffff <_data_lma+0x8e2b>
    5ef0:	00bef633          	and	a2,t4,a1
    5ef4:	8c6d                	and	s0,s0,a1
    5ef6:	0642                	slli	a2,a2,0x10
    5ef8:	9622                	add	a2,a2,s0
    5efa:	010ede93          	srli	t4,t4,0x10
    5efe:	02d505b3          	mul	a1,a0,a3
    5f02:	9e76                	add	t3,t3,t4
    5f04:	02af8533          	mul	a0,t6,a0
    5f08:	0105d413          	srli	s0,a1,0x10
    5f0c:	02d386b3          	mul	a3,t2,a3
    5f10:	96aa                	add	a3,a3,a0
    5f12:	96a2                	add	a3,a3,s0
    5f14:	03f38fb3          	mul	t6,t2,t6
    5f18:	00a6f363          	bgeu	a3,a0,5f1e <__muldf3+0x2ee>
    5f1c:	9fbe                	add	t6,t6,a5
    5f1e:	6541                	lui	a0,0x10
    5f20:	157d                	addi	a0,a0,-1
    5f22:	00a6f7b3          	and	a5,a3,a0
    5f26:	07c2                	slli	a5,a5,0x10
    5f28:	8d6d                	and	a0,a0,a1
    5f2a:	97aa                	add	a5,a5,a0
    5f2c:	005885b3          	add	a1,a7,t0
    5f30:	0135b9b3          	sltu	s3,a1,s3
    5f34:	97fa                	add	a5,a5,t5
    5f36:	95b2                	add	a1,a1,a2
    5f38:	01378433          	add	s0,a5,s3
    5f3c:	00c5b633          	sltu	a2,a1,a2
    5f40:	01c40eb3          	add	t4,s0,t3
    5f44:	00ce8533          	add	a0,t4,a2
    5f48:	01343433          	sltu	s0,s0,s3
    5f4c:	01e7b7b3          	sltu	a5,a5,t5
    5f50:	8fc1                	or	a5,a5,s0
    5f52:	01cebe33          	sltu	t3,t4,t3
    5f56:	0106d413          	srli	s0,a3,0x10
    5f5a:	00c53633          	sltu	a2,a0,a2
    5f5e:	943e                	add	s0,s0,a5
    5f60:	00ce6633          	or	a2,t3,a2
    5f64:	00959493          	slli	s1,a1,0x9
    5f68:	9432                	add	s0,s0,a2
    5f6a:	947e                	add	s0,s0,t6
    5f6c:	0064e4b3          	or	s1,s1,t1
    5f70:	0426                	slli	s0,s0,0x9
    5f72:	01755693          	srli	a3,a0,0x17
    5f76:	009034b3          	snez	s1,s1
    5f7a:	81dd                	srli	a1,a1,0x17
    5f7c:	00951793          	slli	a5,a0,0x9
    5f80:	8ccd                	or	s1,s1,a1
    5f82:	8c55                	or	s0,s0,a3
    5f84:	8cdd                	or	s1,s1,a5
    5f86:	00741793          	slli	a5,s0,0x7
    5f8a:	0007db63          	bgez	a5,5fa0 <__muldf3+0x370>
    5f8e:	0014d793          	srli	a5,s1,0x1
    5f92:	8885                	andi	s1,s1,1
    5f94:	01f41693          	slli	a3,s0,0x1f
    5f98:	8cdd                	or	s1,s1,a5
    5f9a:	8cd5                	or	s1,s1,a3
    5f9c:	8005                	srli	s0,s0,0x1
    5f9e:	8942                	mv	s2,a6
    5fa0:	3ff90793          	addi	a5,s2,1023
    5fa4:	08f05963          	blez	a5,6036 <__muldf3+0x406>
    5fa8:	0074f693          	andi	a3,s1,7
    5fac:	ce81                	beqz	a3,5fc4 <__muldf3+0x394>
    5fae:	00f4f693          	andi	a3,s1,15
    5fb2:	4611                	li	a2,4
    5fb4:	00c68863          	beq	a3,a2,5fc4 <__muldf3+0x394>
    5fb8:	00448693          	addi	a3,s1,4
    5fbc:	0096b4b3          	sltu	s1,a3,s1
    5fc0:	9426                	add	s0,s0,s1
    5fc2:	84b6                	mv	s1,a3
    5fc4:	00741693          	slli	a3,s0,0x7
    5fc8:	0006d863          	bgez	a3,5fd8 <__muldf3+0x3a8>
    5fcc:	ff0007b7          	lui	a5,0xff000
    5fd0:	17fd                	addi	a5,a5,-1
    5fd2:	8c7d                	and	s0,s0,a5
    5fd4:	40090793          	addi	a5,s2,1024
    5fd8:	7fe00693          	li	a3,2046
    5fdc:	0ef6cf63          	blt	a3,a5,60da <__muldf3+0x4aa>
    5fe0:	0034d693          	srli	a3,s1,0x3
    5fe4:	01d41493          	slli	s1,s0,0x1d
    5fe8:	0426                	slli	s0,s0,0x9
    5fea:	8cd5                	or	s1,s1,a3
    5fec:	8031                	srli	s0,s0,0xc
    5fee:	7ff7f793          	andi	a5,a5,2047
    5ff2:	bb21                	j	5d0a <__muldf3+0xda>
    5ff4:	8532                	mv	a0,a2
    5ff6:	c432                	sw	a2,8(sp)
    5ff8:	3c5000ef          	jal	ra,6bbc <__clzsi2>
    5ffc:	01550693          	addi	a3,a0,21 # 10015 <_data_lma+0x8e41>
    6000:	47f1                	li	a5,28
    6002:	02050713          	addi	a4,a0,32
    6006:	4622                	lw	a2,8(sp)
    6008:	dcd7d1e3          	bge	a5,a3,5dca <__muldf3+0x19a>
    600c:	1561                	addi	a0,a0,-8
    600e:	00a617b3          	sll	a5,a2,a0
    6012:	4581                	li	a1,0
    6014:	b3f9                	j	5de2 <__muldf3+0x1b2>
    6016:	3a7000ef          	jal	ra,6bbc <__clzsi2>
    601a:	01550713          	addi	a4,a0,21
    601e:	45f1                	li	a1,28
    6020:	02050793          	addi	a5,a0,32
    6024:	4622                	lw	a2,8(sp)
    6026:	46b2                	lw	a3,12(sp)
    6028:	d4e5d5e3          	bge	a1,a4,5d72 <__muldf3+0x142>
    602c:	1561                	addi	a0,a0,-8
    602e:	00aa1433          	sll	s0,s4,a0
    6032:	4481                	li	s1,0
    6034:	bb99                	j	5d8a <__muldf3+0x15a>
    6036:	4685                	li	a3,1
    6038:	8e9d                	sub	a3,a3,a5
    603a:	e7b1                	bnez	a5,6086 <__muldf3+0x456>
    603c:	41e90913          	addi	s2,s2,1054
    6040:	012497b3          	sll	a5,s1,s2
    6044:	00d4d4b3          	srl	s1,s1,a3
    6048:	01241933          	sll	s2,s0,s2
    604c:	00f037b3          	snez	a5,a5
    6050:	009964b3          	or	s1,s2,s1
    6054:	8cdd                	or	s1,s1,a5
    6056:	0074f793          	andi	a5,s1,7
    605a:	00d456b3          	srl	a3,s0,a3
    605e:	cf81                	beqz	a5,6076 <__muldf3+0x446>
    6060:	00f4f793          	andi	a5,s1,15
    6064:	4611                	li	a2,4
    6066:	00c78863          	beq	a5,a2,6076 <__muldf3+0x446>
    606a:	00448793          	addi	a5,s1,4
    606e:	0097b4b3          	sltu	s1,a5,s1
    6072:	96a6                	add	a3,a3,s1
    6074:	84be                	mv	s1,a5
    6076:	00869793          	slli	a5,a3,0x8
    607a:	0407d863          	bgez	a5,60ca <__muldf3+0x49a>
    607e:	4785                	li	a5,1
    6080:	4401                	li	s0,0
    6082:	4481                	li	s1,0
    6084:	b159                	j	5d0a <__muldf3+0xda>
    6086:	03800613          	li	a2,56
    608a:	ccd641e3          	blt	a2,a3,5d4c <__muldf3+0x11c>
    608e:	467d                	li	a2,31
    6090:	fad656e3          	bge	a2,a3,603c <__muldf3+0x40c>
    6094:	5605                	li	a2,-31
    6096:	40f607b3          	sub	a5,a2,a5
    609a:	02000593          	li	a1,32
    609e:	00f45633          	srl	a2,s0,a5
    60a2:	00b68763          	beq	a3,a1,60b0 <__muldf3+0x480>
    60a6:	43e90913          	addi	s2,s2,1086
    60aa:	012417b3          	sll	a5,s0,s2
    60ae:	8cdd                	or	s1,s1,a5
    60b0:	009034b3          	snez	s1,s1
    60b4:	8cd1                	or	s1,s1,a2
    60b6:	0074f693          	andi	a3,s1,7
    60ba:	4401                	li	s0,0
    60bc:	ca99                	beqz	a3,60d2 <__muldf3+0x4a2>
    60be:	00f4f793          	andi	a5,s1,15
    60c2:	4611                	li	a2,4
    60c4:	4681                	li	a3,0
    60c6:	fac792e3          	bne	a5,a2,606a <__muldf3+0x43a>
    60ca:	00969413          	slli	s0,a3,0x9
    60ce:	8031                	srli	s0,s0,0xc
    60d0:	06f6                	slli	a3,a3,0x1d
    60d2:	808d                	srli	s1,s1,0x3
    60d4:	8cd5                	or	s1,s1,a3
    60d6:	4781                	li	a5,0
    60d8:	b90d                	j	5d0a <__muldf3+0xda>
    60da:	7ff00793          	li	a5,2047
    60de:	4401                	li	s0,0
    60e0:	4481                	li	s1,0
    60e2:	b125                	j	5d0a <__muldf3+0xda>
    60e4:	8942                	mv	s2,a6
    60e6:	bd6d                	j	5fa0 <__muldf3+0x370>

000060e8 <__subdf3>:
    60e8:	00100737          	lui	a4,0x100
    60ec:	177d                	addi	a4,a4,-1
    60ee:	1101                	addi	sp,sp,-32
    60f0:	00b77333          	and	t1,a4,a1
    60f4:	0146d893          	srli	a7,a3,0x14
    60f8:	8f75                	and	a4,a4,a3
    60fa:	01d65e93          	srli	t4,a2,0x1d
    60fe:	cc22                	sw	s0,24(sp)
    6100:	ca26                	sw	s1,20(sp)
    6102:	030e                	slli	t1,t1,0x3
    6104:	0145d493          	srli	s1,a1,0x14
    6108:	01d55793          	srli	a5,a0,0x1d
    610c:	070e                	slli	a4,a4,0x3
    610e:	ce06                	sw	ra,28(sp)
    6110:	c84a                	sw	s2,16(sp)
    6112:	c64e                	sw	s3,12(sp)
    6114:	7ff8f893          	andi	a7,a7,2047
    6118:	7ff00e13          	li	t3,2047
    611c:	00eee733          	or	a4,t4,a4
    6120:	7ff4f493          	andi	s1,s1,2047
    6124:	01f5d413          	srli	s0,a1,0x1f
    6128:	0067e333          	or	t1,a5,t1
    612c:	00351f13          	slli	t5,a0,0x3
    6130:	82fd                	srli	a3,a3,0x1f
    6132:	00361e93          	slli	t4,a2,0x3
    6136:	19c88063          	beq	a7,t3,62b6 <__subdf3+0x1ce>
    613a:	0016c693          	xori	a3,a3,1
    613e:	411485b3          	sub	a1,s1,a7
    6142:	12d40563          	beq	s0,a3,626c <__subdf3+0x184>
    6146:	18b05163          	blez	a1,62c8 <__subdf3+0x1e0>
    614a:	1a088b63          	beqz	a7,6300 <__subdf3+0x218>
    614e:	008007b7          	lui	a5,0x800
    6152:	8f5d                	or	a4,a4,a5
    6154:	59c48063          	beq	s1,t3,66d4 <__subdf3+0x5ec>
    6158:	03800793          	li	a5,56
    615c:	34b7c363          	blt	a5,a1,64a2 <__subdf3+0x3ba>
    6160:	47fd                	li	a5,31
    6162:	48b7c463          	blt	a5,a1,65ea <__subdf3+0x502>
    6166:	02000793          	li	a5,32
    616a:	8f8d                	sub	a5,a5,a1
    616c:	00bed9b3          	srl	s3,t4,a1
    6170:	00f71833          	sll	a6,a4,a5
    6174:	00fe9eb3          	sll	t4,t4,a5
    6178:	01386833          	or	a6,a6,s3
    617c:	00b75733          	srl	a4,a4,a1
    6180:	01d039b3          	snez	s3,t4
    6184:	01386833          	or	a6,a6,s3
    6188:	40e30333          	sub	t1,t1,a4
    618c:	410f09b3          	sub	s3,t5,a6
    6190:	013f37b3          	sltu	a5,t5,s3
    6194:	40f30633          	sub	a2,t1,a5
    6198:	00861793          	slli	a5,a2,0x8
    619c:	2407d363          	bgez	a5,63e2 <__subdf3+0x2fa>
    61a0:	00800937          	lui	s2,0x800
    61a4:	197d                	addi	s2,s2,-1
    61a6:	01267933          	and	s2,a2,s2
    61aa:	2c090f63          	beqz	s2,6488 <__subdf3+0x3a0>
    61ae:	854a                	mv	a0,s2
    61b0:	20d000ef          	jal	ra,6bbc <__clzsi2>
    61b4:	ff850713          	addi	a4,a0,-8
    61b8:	02000793          	li	a5,32
    61bc:	8f99                	sub	a5,a5,a4
    61be:	00f9d7b3          	srl	a5,s3,a5
    61c2:	00e91633          	sll	a2,s2,a4
    61c6:	8fd1                	or	a5,a5,a2
    61c8:	00e999b3          	sll	s3,s3,a4
    61cc:	2a974463          	blt	a4,s1,6474 <__subdf3+0x38c>
    61d0:	8f05                	sub	a4,a4,s1
    61d2:	00170613          	addi	a2,a4,1 # 100001 <_data_lma+0xf8e2d>
    61d6:	46fd                	li	a3,31
    61d8:	3ac6c463          	blt	a3,a2,6580 <__subdf3+0x498>
    61dc:	02000713          	li	a4,32
    61e0:	8f11                	sub	a4,a4,a2
    61e2:	00c9d6b3          	srl	a3,s3,a2
    61e6:	00e99833          	sll	a6,s3,a4
    61ea:	00e79733          	sll	a4,a5,a4
    61ee:	8f55                	or	a4,a4,a3
    61f0:	01003833          	snez	a6,a6
    61f4:	010769b3          	or	s3,a4,a6
    61f8:	00c7d633          	srl	a2,a5,a2
    61fc:	4481                	li	s1,0
    61fe:	0079f793          	andi	a5,s3,7
    6202:	cf81                	beqz	a5,621a <__subdf3+0x132>
    6204:	00f9f693          	andi	a3,s3,15
    6208:	4791                	li	a5,4
    620a:	00f68863          	beq	a3,a5,621a <__subdf3+0x132>
    620e:	00498693          	addi	a3,s3,4
    6212:	0136b833          	sltu	a6,a3,s3
    6216:	9642                	add	a2,a2,a6
    6218:	89b6                	mv	s3,a3
    621a:	00861793          	slli	a5,a2,0x8
    621e:	1c07d663          	bgez	a5,63ea <__subdf3+0x302>
    6222:	00148713          	addi	a4,s1,1
    6226:	7ff00793          	li	a5,2047
    622a:	8805                	andi	s0,s0,1
    622c:	20f70663          	beq	a4,a5,6438 <__subdf3+0x350>
    6230:	ff8007b7          	lui	a5,0xff800
    6234:	17fd                	addi	a5,a5,-1
    6236:	8ff1                	and	a5,a5,a2
    6238:	01d79813          	slli	a6,a5,0x1d
    623c:	0039d993          	srli	s3,s3,0x3
    6240:	07a6                	slli	a5,a5,0x9
    6242:	01386833          	or	a6,a6,s3
    6246:	83b1                	srli	a5,a5,0xc
    6248:	7ff77713          	andi	a4,a4,2047
    624c:	00c79693          	slli	a3,a5,0xc
    6250:	0752                	slli	a4,a4,0x14
    6252:	82b1                	srli	a3,a3,0xc
    6254:	047e                	slli	s0,s0,0x1f
    6256:	8ed9                	or	a3,a3,a4
    6258:	8ec1                	or	a3,a3,s0
    625a:	40f2                	lw	ra,28(sp)
    625c:	4462                	lw	s0,24(sp)
    625e:	44d2                	lw	s1,20(sp)
    6260:	4942                	lw	s2,16(sp)
    6262:	49b2                	lw	s3,12(sp)
    6264:	8542                	mv	a0,a6
    6266:	85b6                	mv	a1,a3
    6268:	6105                	addi	sp,sp,32
    626a:	8082                	ret
    626c:	0ab05663          	blez	a1,6318 <__subdf3+0x230>
    6270:	12088a63          	beqz	a7,63a4 <__subdf3+0x2bc>
    6274:	008007b7          	lui	a5,0x800
    6278:	8f5d                	or	a4,a4,a5
    627a:	2dc48663          	beq	s1,t3,6546 <__subdf3+0x45e>
    627e:	03800793          	li	a5,56
    6282:	18b7c763          	blt	a5,a1,6410 <__subdf3+0x328>
    6286:	47fd                	li	a5,31
    6288:	3cb7d163          	bge	a5,a1,664a <__subdf3+0x562>
    628c:	fe058813          	addi	a6,a1,-32 # ffe0 <_data_lma+0x8e0c>
    6290:	02000793          	li	a5,32
    6294:	010759b3          	srl	s3,a4,a6
    6298:	00f58a63          	beq	a1,a5,62ac <__subdf3+0x1c4>
    629c:	04000793          	li	a5,64
    62a0:	40b785b3          	sub	a1,a5,a1
    62a4:	00b71733          	sll	a4,a4,a1
    62a8:	00eeeeb3          	or	t4,t4,a4
    62ac:	01d03833          	snez	a6,t4
    62b0:	01386833          	or	a6,a6,s3
    62b4:	a295                	j	6418 <__subdf3+0x330>
    62b6:	01d767b3          	or	a5,a4,t4
    62ba:	80148593          	addi	a1,s1,-2047
    62be:	e399                	bnez	a5,62c4 <__subdf3+0x1dc>
    62c0:	0016c693          	xori	a3,a3,1
    62c4:	04d40a63          	beq	s0,a3,6318 <__subdf3+0x230>
    62c8:	e1d1                	bnez	a1,634c <__subdf3+0x264>
    62ca:	00148793          	addi	a5,s1,1
    62ce:	7fe7f793          	andi	a5,a5,2046
    62d2:	1e079863          	bnez	a5,64c2 <__subdf3+0x3da>
    62d6:	01e367b3          	or	a5,t1,t5
    62da:	01d76833          	or	a6,a4,t4
    62de:	16049263          	bnez	s1,6442 <__subdf3+0x35a>
    62e2:	3c078163          	beqz	a5,66a4 <__subdf3+0x5bc>
    62e6:	42081563          	bnez	a6,6710 <__subdf3+0x628>
    62ea:	00351813          	slli	a6,a0,0x3
    62ee:	01d31693          	slli	a3,t1,0x1d
    62f2:	00385813          	srli	a6,a6,0x3
    62f6:	0106e833          	or	a6,a3,a6
    62fa:	00335793          	srli	a5,t1,0x3
    62fe:	a219                	j	6404 <__subdf3+0x31c>
    6300:	01d767b3          	or	a5,a4,t4
    6304:	1a078463          	beqz	a5,64ac <__subdf3+0x3c4>
    6308:	fff58793          	addi	a5,a1,-1
    630c:	3a078a63          	beqz	a5,66c0 <__subdf3+0x5d8>
    6310:	23c58b63          	beq	a1,t3,6546 <__subdf3+0x45e>
    6314:	85be                	mv	a1,a5
    6316:	b589                	j	6158 <__subdf3+0x70>
    6318:	1c059863          	bnez	a1,64e8 <__subdf3+0x400>
    631c:	00148693          	addi	a3,s1,1
    6320:	7fe6f793          	andi	a5,a3,2046
    6324:	efc1                	bnez	a5,63bc <__subdf3+0x2d4>
    6326:	01e367b3          	or	a5,t1,t5
    632a:	34049f63          	bnez	s1,6688 <__subdf3+0x5a0>
    632e:	44078c63          	beqz	a5,6786 <__subdf3+0x69e>
    6332:	01d767b3          	or	a5,a4,t4
    6336:	46079363          	bnez	a5,679c <__subdf3+0x6b4>
    633a:	050e                	slli	a0,a0,0x3
    633c:	01d31813          	slli	a6,t1,0x1d
    6340:	810d                	srli	a0,a0,0x3
    6342:	00a86833          	or	a6,a6,a0
    6346:	00335793          	srli	a5,t1,0x3
    634a:	a86d                	j	6404 <__subdf3+0x31c>
    634c:	409885b3          	sub	a1,a7,s1
    6350:	20049663          	bnez	s1,655c <__subdf3+0x474>
    6354:	01e367b3          	or	a5,t1,t5
    6358:	30078c63          	beqz	a5,6670 <__subdf3+0x588>
    635c:	fff58793          	addi	a5,a1,-1
    6360:	40078863          	beqz	a5,6770 <__subdf3+0x688>
    6364:	7ff00513          	li	a0,2047
    6368:	20a58263          	beq	a1,a0,656c <__subdf3+0x484>
    636c:	85be                	mv	a1,a5
    636e:	03800793          	li	a5,56
    6372:	2ab7c163          	blt	a5,a1,6614 <__subdf3+0x52c>
    6376:	47fd                	li	a5,31
    6378:	3cb7c763          	blt	a5,a1,6746 <__subdf3+0x65e>
    637c:	02000793          	li	a5,32
    6380:	8f8d                	sub	a5,a5,a1
    6382:	00f31833          	sll	a6,t1,a5
    6386:	00bf5633          	srl	a2,t5,a1
    638a:	00ff17b3          	sll	a5,t5,a5
    638e:	00c86833          	or	a6,a6,a2
    6392:	00f039b3          	snez	s3,a5
    6396:	00b35333          	srl	t1,t1,a1
    639a:	01386833          	or	a6,a6,s3
    639e:	40670733          	sub	a4,a4,t1
    63a2:	acad                	j	661c <__subdf3+0x534>
    63a4:	01d767b3          	or	a5,a4,t4
    63a8:	10078263          	beqz	a5,64ac <__subdf3+0x3c4>
    63ac:	fff58793          	addi	a5,a1,-1
    63b0:	1e078e63          	beqz	a5,65ac <__subdf3+0x4c4>
    63b4:	2dc58f63          	beq	a1,t3,6692 <__subdf3+0x5aa>
    63b8:	85be                	mv	a1,a5
    63ba:	b5d1                	j	627e <__subdf3+0x196>
    63bc:	7ff00793          	li	a5,2047
    63c0:	06f68b63          	beq	a3,a5,6436 <__subdf3+0x34e>
    63c4:	9efa                	add	t4,t4,t5
    63c6:	01eeb633          	sltu	a2,t4,t5
    63ca:	00e307b3          	add	a5,t1,a4
    63ce:	97b2                	add	a5,a5,a2
    63d0:	01f79813          	slli	a6,a5,0x1f
    63d4:	001ede93          	srli	t4,t4,0x1
    63d8:	01d869b3          	or	s3,a6,t4
    63dc:	0017d613          	srli	a2,a5,0x1
    63e0:	84b6                	mv	s1,a3
    63e2:	0079f793          	andi	a5,s3,7
    63e6:	e0079fe3          	bnez	a5,6204 <__subdf3+0x11c>
    63ea:	01d61793          	slli	a5,a2,0x1d
    63ee:	0039d813          	srli	a6,s3,0x3
    63f2:	00f86833          	or	a6,a6,a5
    63f6:	85a6                	mv	a1,s1
    63f8:	00365793          	srli	a5,a2,0x3
    63fc:	7ff00713          	li	a4,2047
    6400:	06e58063          	beq	a1,a4,6460 <__subdf3+0x378>
    6404:	07b2                	slli	a5,a5,0xc
    6406:	83b1                	srli	a5,a5,0xc
    6408:	7ff5f713          	andi	a4,a1,2047
    640c:	8805                	andi	s0,s0,1
    640e:	bd3d                	j	624c <__subdf3+0x164>
    6410:	01d76733          	or	a4,a4,t4
    6414:	00e03833          	snez	a6,a4
    6418:	01e809b3          	add	s3,a6,t5
    641c:	01e9b7b3          	sltu	a5,s3,t5
    6420:	00678633          	add	a2,a5,t1
    6424:	00861793          	slli	a5,a2,0x8
    6428:	fa07dde3          	bgez	a5,63e2 <__subdf3+0x2fa>
    642c:	0485                	addi	s1,s1,1
    642e:	7ff00793          	li	a5,2047
    6432:	18f49b63          	bne	s1,a5,65c8 <__subdf3+0x4e0>
    6436:	8805                	andi	s0,s0,1
    6438:	7ff00713          	li	a4,2047
    643c:	4781                	li	a5,0
    643e:	4801                	li	a6,0
    6440:	b531                	j	624c <__subdf3+0x164>
    6442:	10079063          	bnez	a5,6542 <__subdf3+0x45a>
    6446:	3c080063          	beqz	a6,6806 <__subdf3+0x71e>
    644a:	00361813          	slli	a6,a2,0x3
    644e:	01d71793          	slli	a5,a4,0x1d
    6452:	00385813          	srli	a6,a6,0x3
    6456:	00f86833          	or	a6,a6,a5
    645a:	8436                	mv	s0,a3
    645c:	00375793          	srli	a5,a4,0x3
    6460:	00f867b3          	or	a5,a6,a5
    6464:	dbe9                	beqz	a5,6436 <__subdf3+0x34e>
    6466:	4401                	li	s0,0
    6468:	7ff00713          	li	a4,2047
    646c:	000807b7          	lui	a5,0x80
    6470:	4801                	li	a6,0
    6472:	bbe9                	j	624c <__subdf3+0x164>
    6474:	ff800637          	lui	a2,0xff800
    6478:	167d                	addi	a2,a2,-1
    647a:	8e7d                	and	a2,a2,a5
    647c:	0079f793          	andi	a5,s3,7
    6480:	8c99                	sub	s1,s1,a4
    6482:	d80791e3          	bnez	a5,6204 <__subdf3+0x11c>
    6486:	b795                	j	63ea <__subdf3+0x302>
    6488:	854e                	mv	a0,s3
    648a:	2f0d                	jal	6bbc <__clzsi2>
    648c:	01850713          	addi	a4,a0,24
    6490:	47fd                	li	a5,31
    6492:	d2e7d3e3          	bge	a5,a4,61b8 <__subdf3+0xd0>
    6496:	ff850613          	addi	a2,a0,-8
    649a:	00c997b3          	sll	a5,s3,a2
    649e:	4981                	li	s3,0
    64a0:	b335                	j	61cc <__subdf3+0xe4>
    64a2:	01d76833          	or	a6,a4,t4
    64a6:	01003833          	snez	a6,a6
    64aa:	b1cd                	j	618c <__subdf3+0xa4>
    64ac:	00351813          	slli	a6,a0,0x3
    64b0:	01d31793          	slli	a5,t1,0x1d
    64b4:	00385813          	srli	a6,a6,0x3
    64b8:	00f86833          	or	a6,a6,a5
    64bc:	00335793          	srli	a5,t1,0x3
    64c0:	bf35                	j	63fc <__subdf3+0x314>
    64c2:	41df09b3          	sub	s3,t5,t4
    64c6:	40e30933          	sub	s2,t1,a4
    64ca:	013f3633          	sltu	a2,t5,s3
    64ce:	40c90933          	sub	s2,s2,a2
    64d2:	00891793          	slli	a5,s2,0x8
    64d6:	2007ca63          	bltz	a5,66ea <__subdf3+0x602>
    64da:	0129e833          	or	a6,s3,s2
    64de:	cc0816e3          	bnez	a6,61aa <__subdf3+0xc2>
    64e2:	4781                	li	a5,0
    64e4:	4401                	li	s0,0
    64e6:	bf39                	j	6404 <__subdf3+0x31c>
    64e8:	409885b3          	sub	a1,a7,s1
    64ec:	14048163          	beqz	s1,662e <__subdf3+0x546>
    64f0:	008006b7          	lui	a3,0x800
    64f4:	7ff00793          	li	a5,2047
    64f8:	00d36333          	or	t1,t1,a3
    64fc:	20f88163          	beq	a7,a5,66fe <__subdf3+0x616>
    6500:	03800793          	li	a5,56
    6504:	22b7cc63          	blt	a5,a1,673c <__subdf3+0x654>
    6508:	47fd                	li	a5,31
    650a:	2cb7c963          	blt	a5,a1,67dc <__subdf3+0x6f4>
    650e:	02000793          	li	a5,32
    6512:	8f8d                	sub	a5,a5,a1
    6514:	00f31833          	sll	a6,t1,a5
    6518:	00bf56b3          	srl	a3,t5,a1
    651c:	00ff17b3          	sll	a5,t5,a5
    6520:	00d86833          	or	a6,a6,a3
    6524:	00f039b3          	snez	s3,a5
    6528:	00b35333          	srl	t1,t1,a1
    652c:	01386833          	or	a6,a6,s3
    6530:	971a                	add	a4,a4,t1
    6532:	01d809b3          	add	s3,a6,t4
    6536:	01d9b7b3          	sltu	a5,s3,t4
    653a:	00e78633          	add	a2,a5,a4
    653e:	84c6                	mv	s1,a7
    6540:	b5d5                	j	6424 <__subdf3+0x33c>
    6542:	f20812e3          	bnez	a6,6466 <__subdf3+0x37e>
    6546:	00351813          	slli	a6,a0,0x3
    654a:	01d31793          	slli	a5,t1,0x1d
    654e:	00385813          	srli	a6,a6,0x3
    6552:	00f86833          	or	a6,a6,a5
    6556:	00335793          	srli	a5,t1,0x3
    655a:	b719                	j	6460 <__subdf3+0x378>
    655c:	00800537          	lui	a0,0x800
    6560:	7ff00793          	li	a5,2047
    6564:	00a36333          	or	t1,t1,a0
    6568:	e0f893e3          	bne	a7,a5,636e <__subdf3+0x286>
    656c:	060e                	slli	a2,a2,0x3
    656e:	01d71813          	slli	a6,a4,0x1d
    6572:	820d                	srli	a2,a2,0x3
    6574:	00c86833          	or	a6,a6,a2
    6578:	00375793          	srli	a5,a4,0x3
    657c:	8436                	mv	s0,a3
    657e:	b5cd                	j	6460 <__subdf3+0x378>
    6580:	1705                	addi	a4,a4,-31
    6582:	02000693          	li	a3,32
    6586:	00e7d733          	srl	a4,a5,a4
    658a:	00d60a63          	beq	a2,a3,659e <__subdf3+0x4b6>
    658e:	04000693          	li	a3,64
    6592:	40c68633          	sub	a2,a3,a2
    6596:	00c79633          	sll	a2,a5,a2
    659a:	00c9e9b3          	or	s3,s3,a2
    659e:	01303833          	snez	a6,s3
    65a2:	00e869b3          	or	s3,a6,a4
    65a6:	4601                	li	a2,0
    65a8:	4481                	li	s1,0
    65aa:	bd25                	j	63e2 <__subdf3+0x2fa>
    65ac:	01df09b3          	add	s3,t5,t4
    65b0:	00e307b3          	add	a5,t1,a4
    65b4:	01e9bf33          	sltu	t5,s3,t5
    65b8:	01e78633          	add	a2,a5,t5
    65bc:	00861793          	slli	a5,a2,0x8
    65c0:	4485                	li	s1,1
    65c2:	e207d0e3          	bgez	a5,63e2 <__subdf3+0x2fa>
    65c6:	4489                	li	s1,2
    65c8:	ff8007b7          	lui	a5,0xff800
    65cc:	17fd                	addi	a5,a5,-1
    65ce:	8ff1                	and	a5,a5,a2
    65d0:	0019d713          	srli	a4,s3,0x1
    65d4:	0019f813          	andi	a6,s3,1
    65d8:	01076833          	or	a6,a4,a6
    65dc:	01f79993          	slli	s3,a5,0x1f
    65e0:	0109e9b3          	or	s3,s3,a6
    65e4:	0017d613          	srli	a2,a5,0x1
    65e8:	b919                	j	61fe <__subdf3+0x116>
    65ea:	fe058813          	addi	a6,a1,-32
    65ee:	02000793          	li	a5,32
    65f2:	010759b3          	srl	s3,a4,a6
    65f6:	00f58a63          	beq	a1,a5,660a <__subdf3+0x522>
    65fa:	04000793          	li	a5,64
    65fe:	40b785b3          	sub	a1,a5,a1
    6602:	00b71733          	sll	a4,a4,a1
    6606:	00eeeeb3          	or	t4,t4,a4
    660a:	01d03833          	snez	a6,t4
    660e:	01386833          	or	a6,a6,s3
    6612:	bead                	j	618c <__subdf3+0xa4>
    6614:	01e36333          	or	t1,t1,t5
    6618:	00603833          	snez	a6,t1
    661c:	410e89b3          	sub	s3,t4,a6
    6620:	013eb7b3          	sltu	a5,t4,s3
    6624:	40f70633          	sub	a2,a4,a5
    6628:	84c6                	mv	s1,a7
    662a:	8436                	mv	s0,a3
    662c:	b6b5                	j	6198 <__subdf3+0xb0>
    662e:	01e367b3          	or	a5,t1,t5
    6632:	18078763          	beqz	a5,67c0 <__subdf3+0x6d8>
    6636:	fff58793          	addi	a5,a1,-1
    663a:	1c078c63          	beqz	a5,6812 <__subdf3+0x72a>
    663e:	7ff00693          	li	a3,2047
    6642:	0ad58e63          	beq	a1,a3,66fe <__subdf3+0x616>
    6646:	85be                	mv	a1,a5
    6648:	bd65                	j	6500 <__subdf3+0x418>
    664a:	02000793          	li	a5,32
    664e:	8f8d                	sub	a5,a5,a1
    6650:	00bed9b3          	srl	s3,t4,a1
    6654:	00f71833          	sll	a6,a4,a5
    6658:	00fe9eb3          	sll	t4,t4,a5
    665c:	01386833          	or	a6,a6,s3
    6660:	00b75733          	srl	a4,a4,a1
    6664:	01d039b3          	snez	s3,t4
    6668:	01386833          	or	a6,a6,s3
    666c:	933a                	add	t1,t1,a4
    666e:	b36d                	j	6418 <__subdf3+0x330>
    6670:	00361813          	slli	a6,a2,0x3
    6674:	01d71793          	slli	a5,a4,0x1d
    6678:	00385813          	srli	a6,a6,0x3
    667c:	0107e833          	or	a6,a5,a6
    6680:	8436                	mv	s0,a3
    6682:	00375793          	srli	a5,a4,0x3
    6686:	bb9d                	j	63fc <__subdf3+0x314>
    6688:	cbbd                	beqz	a5,66fe <__subdf3+0x616>
    668a:	01d76733          	or	a4,a4,t4
    668e:	dc071ce3          	bnez	a4,6466 <__subdf3+0x37e>
    6692:	050e                	slli	a0,a0,0x3
    6694:	01d31813          	slli	a6,t1,0x1d
    6698:	810d                	srli	a0,a0,0x3
    669a:	00a86833          	or	a6,a6,a0
    669e:	00335793          	srli	a5,t1,0x3
    66a2:	bb7d                	j	6460 <__subdf3+0x378>
    66a4:	e2080fe3          	beqz	a6,64e2 <__subdf3+0x3fa>
    66a8:	00361813          	slli	a6,a2,0x3
    66ac:	01d71793          	slli	a5,a4,0x1d
    66b0:	00385813          	srli	a6,a6,0x3
    66b4:	00f86833          	or	a6,a6,a5
    66b8:	8436                	mv	s0,a3
    66ba:	00375793          	srli	a5,a4,0x3
    66be:	b399                	j	6404 <__subdf3+0x31c>
    66c0:	41df09b3          	sub	s3,t5,t4
    66c4:	40e307b3          	sub	a5,t1,a4
    66c8:	013f3f33          	sltu	t5,t5,s3
    66cc:	41e78633          	sub	a2,a5,t5
    66d0:	4485                	li	s1,1
    66d2:	b4d9                	j	6198 <__subdf3+0xb0>
    66d4:	00351813          	slli	a6,a0,0x3
    66d8:	01d31693          	slli	a3,t1,0x1d
    66dc:	00385813          	srli	a6,a6,0x3
    66e0:	0106e833          	or	a6,a3,a6
    66e4:	00335793          	srli	a5,t1,0x3
    66e8:	bba5                	j	6460 <__subdf3+0x378>
    66ea:	41ee89b3          	sub	s3,t4,t5
    66ee:	40670633          	sub	a2,a4,t1
    66f2:	013eb933          	sltu	s2,t4,s3
    66f6:	41260933          	sub	s2,a2,s2
    66fa:	8436                	mv	s0,a3
    66fc:	b47d                	j	61aa <__subdf3+0xc2>
    66fe:	060e                	slli	a2,a2,0x3
    6700:	01d71813          	slli	a6,a4,0x1d
    6704:	820d                	srli	a2,a2,0x3
    6706:	00c86833          	or	a6,a6,a2
    670a:	00375793          	srli	a5,a4,0x3
    670e:	bb89                	j	6460 <__subdf3+0x378>
    6710:	41df09b3          	sub	s3,t5,t4
    6714:	40e307b3          	sub	a5,t1,a4
    6718:	013f3633          	sltu	a2,t5,s3
    671c:	40c78633          	sub	a2,a5,a2
    6720:	00861793          	slli	a5,a2,0x8
    6724:	0a07d763          	bgez	a5,67d2 <__subdf3+0x6ea>
    6728:	41ee89b3          	sub	s3,t4,t5
    672c:	406707b3          	sub	a5,a4,t1
    6730:	013ebeb3          	sltu	t4,t4,s3
    6734:	41d78633          	sub	a2,a5,t4
    6738:	8436                	mv	s0,a3
    673a:	b4d1                	j	61fe <__subdf3+0x116>
    673c:	01e36333          	or	t1,t1,t5
    6740:	00603833          	snez	a6,t1
    6744:	b3fd                	j	6532 <__subdf3+0x44a>
    6746:	fe058813          	addi	a6,a1,-32
    674a:	02000793          	li	a5,32
    674e:	010359b3          	srl	s3,t1,a6
    6752:	00f58a63          	beq	a1,a5,6766 <__subdf3+0x67e>
    6756:	04000793          	li	a5,64
    675a:	40b785b3          	sub	a1,a5,a1
    675e:	00b31333          	sll	t1,t1,a1
    6762:	006f6f33          	or	t5,t5,t1
    6766:	01e03833          	snez	a6,t5
    676a:	01386833          	or	a6,a6,s3
    676e:	b57d                	j	661c <__subdf3+0x534>
    6770:	41ee89b3          	sub	s3,t4,t5
    6774:	406707b3          	sub	a5,a4,t1
    6778:	013ebeb3          	sltu	t4,t4,s3
    677c:	41d78633          	sub	a2,a5,t4
    6780:	8436                	mv	s0,a3
    6782:	4485                	li	s1,1
    6784:	bc11                	j	6198 <__subdf3+0xb0>
    6786:	00361813          	slli	a6,a2,0x3
    678a:	01d71793          	slli	a5,a4,0x1d
    678e:	00385813          	srli	a6,a6,0x3
    6792:	00f86833          	or	a6,a6,a5
    6796:	00375793          	srli	a5,a4,0x3
    679a:	b1ad                	j	6404 <__subdf3+0x31c>
    679c:	01df09b3          	add	s3,t5,t4
    67a0:	00e307b3          	add	a5,t1,a4
    67a4:	01e9bf33          	sltu	t5,s3,t5
    67a8:	01e78633          	add	a2,a5,t5
    67ac:	00861793          	slli	a5,a2,0x8
    67b0:	c207d9e3          	bgez	a5,63e2 <__subdf3+0x2fa>
    67b4:	ff8007b7          	lui	a5,0xff800
    67b8:	17fd                	addi	a5,a5,-1
    67ba:	8e7d                	and	a2,a2,a5
    67bc:	4485                	li	s1,1
    67be:	b115                	j	63e2 <__subdf3+0x2fa>
    67c0:	060e                	slli	a2,a2,0x3
    67c2:	01d71813          	slli	a6,a4,0x1d
    67c6:	820d                	srli	a2,a2,0x3
    67c8:	00c86833          	or	a6,a6,a2
    67cc:	00375793          	srli	a5,a4,0x3
    67d0:	b135                	j	63fc <__subdf3+0x314>
    67d2:	00c9e833          	or	a6,s3,a2
    67d6:	d00806e3          	beqz	a6,64e2 <__subdf3+0x3fa>
    67da:	b121                	j	63e2 <__subdf3+0x2fa>
    67dc:	fe058813          	addi	a6,a1,-32
    67e0:	02000793          	li	a5,32
    67e4:	010359b3          	srl	s3,t1,a6
    67e8:	00f58a63          	beq	a1,a5,67fc <__subdf3+0x714>
    67ec:	04000793          	li	a5,64
    67f0:	40b785b3          	sub	a1,a5,a1
    67f4:	00b31333          	sll	t1,t1,a1
    67f8:	006f6f33          	or	t5,t5,t1
    67fc:	01e03833          	snez	a6,t5
    6800:	01386833          	or	a6,a6,s3
    6804:	b33d                	j	6532 <__subdf3+0x44a>
    6806:	4401                	li	s0,0
    6808:	7ff00713          	li	a4,2047
    680c:	000807b7          	lui	a5,0x80
    6810:	bc35                	j	624c <__subdf3+0x164>
    6812:	01df09b3          	add	s3,t5,t4
    6816:	00e307b3          	add	a5,t1,a4
    681a:	01d9beb3          	sltu	t4,s3,t4
    681e:	01d78633          	add	a2,a5,t4
    6822:	bb69                	j	65bc <__subdf3+0x4d4>

00006824 <__unorddf2>:
    6824:	0145d713          	srli	a4,a1,0x14
    6828:	001007b7          	lui	a5,0x100
    682c:	17fd                	addi	a5,a5,-1
    682e:	fff74713          	not	a4,a4
    6832:	0146d813          	srli	a6,a3,0x14
    6836:	8dfd                	and	a1,a1,a5
    6838:	8ff5                	and	a5,a5,a3
    683a:	01571693          	slli	a3,a4,0x15
    683e:	7ff87813          	andi	a6,a6,2047
    6842:	ca99                	beqz	a3,6858 <__unorddf2+0x34>
    6844:	7ff00713          	li	a4,2047
    6848:	4501                	li	a0,0
    684a:	00e80363          	beq	a6,a4,6850 <__unorddf2+0x2c>
    684e:	8082                	ret
    6850:	8fd1                	or	a5,a5,a2
    6852:	00f03533          	snez	a0,a5
    6856:	8082                	ret
    6858:	8dc9                	or	a1,a1,a0
    685a:	4505                	li	a0,1
    685c:	d5e5                	beqz	a1,6844 <__unorddf2+0x20>
    685e:	8082                	ret

00006860 <__fixdfsi>:
    6860:	0145d793          	srli	a5,a1,0x14
    6864:	001006b7          	lui	a3,0x100
    6868:	fff68713          	addi	a4,a3,-1 # fffff <_data_lma+0xf8e2b>
    686c:	7ff7f793          	andi	a5,a5,2047
    6870:	3fe00613          	li	a2,1022
    6874:	8f6d                	and	a4,a4,a1
    6876:	81fd                	srli	a1,a1,0x1f
    6878:	00f65c63          	bge	a2,a5,6890 <__fixdfsi+0x30>
    687c:	41d00613          	li	a2,1053
    6880:	00f65a63          	bge	a2,a5,6894 <__fixdfsi+0x34>
    6884:	80000537          	lui	a0,0x80000
    6888:	fff54513          	not	a0,a0
    688c:	952e                	add	a0,a0,a1
    688e:	8082                	ret
    6890:	4501                	li	a0,0
    6892:	8082                	ret
    6894:	43300613          	li	a2,1075
    6898:	8e1d                	sub	a2,a2,a5
    689a:	487d                	li	a6,31
    689c:	8f55                	or	a4,a4,a3
    689e:	00c85d63          	bge	a6,a2,68b8 <__fixdfsi+0x58>
    68a2:	41300693          	li	a3,1043
    68a6:	40f687b3          	sub	a5,a3,a5
    68aa:	00f757b3          	srl	a5,a4,a5
    68ae:	40f00533          	neg	a0,a5
    68b2:	f1e5                	bnez	a1,6892 <__fixdfsi+0x32>
    68b4:	853e                	mv	a0,a5
    68b6:	8082                	ret
    68b8:	bed78793          	addi	a5,a5,-1043 # ffbed <_data_lma+0xf8a19>
    68bc:	00f717b3          	sll	a5,a4,a5
    68c0:	00c55533          	srl	a0,a0,a2
    68c4:	8fc9                	or	a5,a5,a0
    68c6:	b7e5                	j	68ae <__fixdfsi+0x4e>

000068c8 <__floatsidf>:
    68c8:	1141                	addi	sp,sp,-16
    68ca:	c606                	sw	ra,12(sp)
    68cc:	c422                	sw	s0,8(sp)
    68ce:	c226                	sw	s1,4(sp)
    68d0:	cd05                	beqz	a0,6908 <__floatsidf+0x40>
    68d2:	41f55793          	srai	a5,a0,0x1f
    68d6:	00a7c4b3          	xor	s1,a5,a0
    68da:	8c9d                	sub	s1,s1,a5
    68dc:	842a                	mv	s0,a0
    68de:	8526                	mv	a0,s1
    68e0:	2cf1                	jal	6bbc <__clzsi2>
    68e2:	41e00693          	li	a3,1054
    68e6:	8e89                	sub	a3,a3,a0
    68e8:	47a9                	li	a5,10
    68ea:	807d                	srli	s0,s0,0x1f
    68ec:	7ff6f693          	andi	a3,a3,2047
    68f0:	02a7cd63          	blt	a5,a0,692a <__floatsidf+0x62>
    68f4:	472d                	li	a4,11
    68f6:	8f09                	sub	a4,a4,a0
    68f8:	00e4d7b3          	srl	a5,s1,a4
    68fc:	0555                	addi	a0,a0,21
    68fe:	07b2                	slli	a5,a5,0xc
    6900:	00a494b3          	sll	s1,s1,a0
    6904:	83b1                	srli	a5,a5,0xc
    6906:	a029                	j	6910 <__floatsidf+0x48>
    6908:	4401                	li	s0,0
    690a:	4681                	li	a3,0
    690c:	4781                	li	a5,0
    690e:	4481                	li	s1,0
    6910:	07b2                	slli	a5,a5,0xc
    6912:	06d2                	slli	a3,a3,0x14
    6914:	83b1                	srli	a5,a5,0xc
    6916:	047e                	slli	s0,s0,0x1f
    6918:	8fd5                	or	a5,a5,a3
    691a:	8fc1                	or	a5,a5,s0
    691c:	40b2                	lw	ra,12(sp)
    691e:	4422                	lw	s0,8(sp)
    6920:	8526                	mv	a0,s1
    6922:	85be                	mv	a1,a5
    6924:	4492                	lw	s1,4(sp)
    6926:	0141                	addi	sp,sp,16
    6928:	8082                	ret
    692a:	1555                	addi	a0,a0,-11
    692c:	00a497b3          	sll	a5,s1,a0
    6930:	07b2                	slli	a5,a5,0xc
    6932:	83b1                	srli	a5,a5,0xc
    6934:	4481                	li	s1,0
    6936:	bfe9                	j	6910 <__floatsidf+0x48>

00006938 <__floatunsidf>:
    6938:	cd15                	beqz	a0,6974 <__floatunsidf+0x3c>
    693a:	1141                	addi	sp,sp,-16
    693c:	c422                	sw	s0,8(sp)
    693e:	c606                	sw	ra,12(sp)
    6940:	842a                	mv	s0,a0
    6942:	2cad                	jal	6bbc <__clzsi2>
    6944:	41e00693          	li	a3,1054
    6948:	8e89                	sub	a3,a3,a0
    694a:	47a9                	li	a5,10
    694c:	7ff6f693          	andi	a3,a3,2047
    6950:	02a7dc63          	bge	a5,a0,6988 <__floatunsidf+0x50>
    6954:	1555                	addi	a0,a0,-11
    6956:	00a417b3          	sll	a5,s0,a0
    695a:	07b2                	slli	a5,a5,0xc
    695c:	83b1                	srli	a5,a5,0xc
    695e:	4701                	li	a4,0
    6960:	40b2                	lw	ra,12(sp)
    6962:	4422                	lw	s0,8(sp)
    6964:	07b2                	slli	a5,a5,0xc
    6966:	06d2                	slli	a3,a3,0x14
    6968:	83b1                	srli	a5,a5,0xc
    696a:	8fd5                	or	a5,a5,a3
    696c:	853a                	mv	a0,a4
    696e:	85be                	mv	a1,a5
    6970:	0141                	addi	sp,sp,16
    6972:	8082                	ret
    6974:	4781                	li	a5,0
    6976:	4681                	li	a3,0
    6978:	07b2                	slli	a5,a5,0xc
    697a:	06d2                	slli	a3,a3,0x14
    697c:	83b1                	srli	a5,a5,0xc
    697e:	4701                	li	a4,0
    6980:	8fd5                	or	a5,a5,a3
    6982:	853a                	mv	a0,a4
    6984:	85be                	mv	a1,a5
    6986:	8082                	ret
    6988:	472d                	li	a4,11
    698a:	8f09                	sub	a4,a4,a0
    698c:	00e457b3          	srl	a5,s0,a4
    6990:	07b2                	slli	a5,a5,0xc
    6992:	01550713          	addi	a4,a0,21 # 80000015 <_eusrstack+0x5ffe0015>
    6996:	00e41733          	sll	a4,s0,a4
    699a:	83b1                	srli	a5,a5,0xc
    699c:	b7d1                	j	6960 <__floatunsidf+0x28>

0000699e <__trunctfdf2>:
    699e:	00c52803          	lw	a6,12(a0)
    69a2:	4118                	lw	a4,0(a0)
    69a4:	4154                	lw	a3,4(a0)
    69a6:	450c                	lw	a1,8(a0)
    69a8:	6521                	lui	a0,0x8
    69aa:	fff50793          	addi	a5,a0,-1 # 7fff <_data_lma+0xe2b>
    69ae:	01085613          	srli	a2,a6,0x10
    69b2:	00359e13          	slli	t3,a1,0x3
    69b6:	8e7d                	and	a2,a2,a5
    69b8:	01d75893          	srli	a7,a4,0x1d
    69bc:	01d6d793          	srli	a5,a3,0x1d
    69c0:	01081313          	slli	t1,a6,0x10
    69c4:	068e                	slli	a3,a3,0x3
    69c6:	1141                	addi	sp,sp,-16
    69c8:	01c7e7b3          	or	a5,a5,t3
    69cc:	0116e6b3          	or	a3,a3,a7
    69d0:	01035313          	srli	t1,t1,0x10
    69d4:	00371e13          	slli	t3,a4,0x3
    69d8:	00160893          	addi	a7,a2,1 # ff800001 <_eusrstack+0xdf7e0001>
    69dc:	1579                	addi	a0,a0,-2
    69de:	81f5                	srli	a1,a1,0x1d
    69e0:	030e                	slli	t1,t1,0x3
    69e2:	c43e                	sw	a5,8(sp)
    69e4:	c236                	sw	a3,4(sp)
    69e6:	c072                	sw	t3,0(sp)
    69e8:	00a8f533          	and	a0,a7,a0
    69ec:	01f85813          	srli	a6,a6,0x1f
    69f0:	0065e5b3          	or	a1,a1,t1
    69f4:	c905                	beqz	a0,6a24 <__trunctfdf2+0x86>
    69f6:	7771                	lui	a4,0xffffc
    69f8:	40070713          	addi	a4,a4,1024 # ffffc400 <_eusrstack+0xdffdc400>
    69fc:	963a                	add	a2,a2,a4
    69fe:	7fe00713          	li	a4,2046
    6a02:	04c75d63          	bge	a4,a2,6a5c <__trunctfdf2+0xbe>
    6a06:	7ff00613          	li	a2,2047
    6a0a:	4701                	li	a4,0
    6a0c:	4781                	li	a5,0
    6a0e:	0732                	slli	a4,a4,0xc
    6a10:	0652                	slli	a2,a2,0x14
    6a12:	8331                	srli	a4,a4,0xc
    6a14:	087e                	slli	a6,a6,0x1f
    6a16:	8f51                	or	a4,a4,a2
    6a18:	01076733          	or	a4,a4,a6
    6a1c:	853e                	mv	a0,a5
    6a1e:	85ba                	mv	a1,a4
    6a20:	0141                	addi	sp,sp,16
    6a22:	8082                	ret
    6a24:	8fd5                	or	a5,a5,a3
    6a26:	8fcd                	or	a5,a5,a1
    6a28:	01c7e7b3          	or	a5,a5,t3
    6a2c:	e205                	bnez	a2,6a4c <__trunctfdf2+0xae>
    6a2e:	cbf1                	beqz	a5,6b02 <__trunctfdf2+0x164>
    6a30:	4781                	li	a5,0
    6a32:	4695                	li	a3,5
    6a34:	0036d593          	srli	a1,a3,0x3
    6a38:	00979713          	slli	a4,a5,0x9
    6a3c:	01d79693          	slli	a3,a5,0x1d
    6a40:	00b6e7b3          	or	a5,a3,a1
    6a44:	8331                	srli	a4,a4,0xc
    6a46:	7ff67613          	andi	a2,a2,2047
    6a4a:	b7d1                	j	6a0e <__trunctfdf2+0x70>
    6a4c:	dfcd                	beqz	a5,6a06 <__trunctfdf2+0x68>
    6a4e:	4801                	li	a6,0
    6a50:	7ff00613          	li	a2,2047
    6a54:	00080737          	lui	a4,0x80
    6a58:	4781                	li	a5,0
    6a5a:	bf55                	j	6a0e <__trunctfdf2+0x70>
    6a5c:	0ac04663          	bgtz	a2,6b08 <__trunctfdf2+0x16a>
    6a60:	fcc00793          	li	a5,-52
    6a64:	0ef64f63          	blt	a2,a5,6b62 <__trunctfdf2+0x1c4>
    6a68:	03d00793          	li	a5,61
    6a6c:	40c78633          	sub	a2,a5,a2
    6a70:	40565793          	srai	a5,a2,0x5
    6a74:	00080737          	lui	a4,0x80
    6a78:	8dd9                	or	a1,a1,a4
    6a7a:	00279513          	slli	a0,a5,0x2
    6a7e:	870a                	mv	a4,sp
    6a80:	4681                	li	a3,0
    6a82:	c62e                	sw	a1,12(sp)
    6a84:	00a108b3          	add	a7,sp,a0
    6a88:	0711                	addi	a4,a4,4
    6a8a:	8a7d                	andi	a2,a2,31
    6a8c:	01c6e6b3          	or	a3,a3,t3
    6a90:	01170963          	beq	a4,a7,6aa2 <__trunctfdf2+0x104>
    6a94:	00072e03          	lw	t3,0(a4) # 80000 <_data_lma+0x78e2c>
    6a98:	0711                	addi	a4,a4,4
    6a9a:	01c6e6b3          	or	a3,a3,t3
    6a9e:	ff171be3          	bne	a4,a7,6a94 <__trunctfdf2+0xf6>
    6aa2:	470d                	li	a4,3
    6aa4:	8f1d                	sub	a4,a4,a5
    6aa6:	ca79                	beqz	a2,6b7c <__trunctfdf2+0x1de>
    6aa8:	01010893          	addi	a7,sp,16
    6aac:	98aa                	add	a7,a7,a0
    6aae:	ff08a883          	lw	a7,-16(a7)
    6ab2:	02000e13          	li	t3,32
    6ab6:	40ce0e33          	sub	t3,t3,a2
    6aba:	01c898b3          	sll	a7,a7,t3
    6abe:	0116e6b3          	or	a3,a3,a7
    6ac2:	cb75                	beqz	a4,6bb6 <__trunctfdf2+0x218>
    6ac4:	070a                	slli	a4,a4,0x2
    6ac6:	950a                	add	a0,a0,sp
    6ac8:	00e10eb3          	add	t4,sp,a4
    6acc:	888a                	mv	a7,sp
    6ace:	410c                	lw	a1,0(a0)
    6ad0:	00452303          	lw	t1,4(a0)
    6ad4:	0891                	addi	a7,a7,4
    6ad6:	00c5d5b3          	srl	a1,a1,a2
    6ada:	01c31333          	sll	t1,t1,t3
    6ade:	0065e5b3          	or	a1,a1,t1
    6ae2:	feb8ae23          	sw	a1,-4(a7)
    6ae6:	0511                	addi	a0,a0,4
    6ae8:	ff1e93e3          	bne	t4,a7,6ace <__trunctfdf2+0x130>
    6aec:	4591                	li	a1,4
    6aee:	40f587b3          	sub	a5,a1,a5
    6af2:	45b2                	lw	a1,12(sp)
    6af4:	0808                	addi	a0,sp,16
    6af6:	972a                	add	a4,a4,a0
    6af8:	00c5d5b3          	srl	a1,a1,a2
    6afc:	feb72823          	sw	a1,-16(a4)
    6b00:	a861                	j	6b98 <__trunctfdf2+0x1fa>
    6b02:	4601                	li	a2,0
    6b04:	4701                	li	a4,0
    6b06:	b721                	j	6a0e <__trunctfdf2+0x70>
    6b08:	00469713          	slli	a4,a3,0x4
    6b0c:	00479513          	slli	a0,a5,0x4
    6b10:	01c76733          	or	a4,a4,t3
    6b14:	82f1                	srli	a3,a3,0x1c
    6b16:	83f1                	srli	a5,a5,0x1c
    6b18:	0592                	slli	a1,a1,0x4
    6b1a:	00e03733          	snez	a4,a4
    6b1e:	8ec9                	or	a3,a3,a0
    6b20:	8fcd                	or	a5,a5,a1
    6b22:	8ed9                	or	a3,a3,a4
    6b24:	0076f713          	andi	a4,a3,7
    6b28:	c711                	beqz	a4,6b34 <__trunctfdf2+0x196>
    6b2a:	00f6f713          	andi	a4,a3,15
    6b2e:	4591                	li	a1,4
    6b30:	02b71c63          	bne	a4,a1,6b68 <__trunctfdf2+0x1ca>
    6b34:	00800737          	lui	a4,0x800
    6b38:	8f7d                	and	a4,a4,a5
    6b3a:	ee070de3          	beqz	a4,6a34 <__trunctfdf2+0x96>
    6b3e:	0605                	addi	a2,a2,1
    6b40:	7ff00713          	li	a4,2047
    6b44:	ece601e3          	beq	a2,a4,6a06 <__trunctfdf2+0x68>
    6b48:	ff800737          	lui	a4,0xff800
    6b4c:	177d                	addi	a4,a4,-1
    6b4e:	8f7d                	and	a4,a4,a5
    6b50:	01d71793          	slli	a5,a4,0x1d
    6b54:	828d                	srli	a3,a3,0x3
    6b56:	0726                	slli	a4,a4,0x9
    6b58:	7ff67613          	andi	a2,a2,2047
    6b5c:	8fd5                	or	a5,a5,a3
    6b5e:	8331                	srli	a4,a4,0xc
    6b60:	b57d                	j	6a0e <__trunctfdf2+0x70>
    6b62:	4685                	li	a3,1
    6b64:	4781                	li	a5,0
    6b66:	4601                	li	a2,0
    6b68:	ffc6b713          	sltiu	a4,a3,-4
    6b6c:	00174713          	xori	a4,a4,1
    6b70:	97ba                	add	a5,a5,a4
    6b72:	00800737          	lui	a4,0x800
    6b76:	0691                	addi	a3,a3,4
    6b78:	8f7d                	and	a4,a4,a5
    6b7a:	b7c1                	j	6b3a <__trunctfdf2+0x19c>
    6b7c:	858a                	mv	a1,sp
    6b7e:	00a588b3          	add	a7,a1,a0
    6b82:	0008a883          	lw	a7,0(a7)
    6b86:	0591                	addi	a1,a1,4
    6b88:	0605                	addi	a2,a2,1
    6b8a:	ff15ae23          	sw	a7,-4(a1)
    6b8e:	fec758e3          	bge	a4,a2,6b7e <__trunctfdf2+0x1e0>
    6b92:	4711                	li	a4,4
    6b94:	40f707b3          	sub	a5,a4,a5
    6b98:	078a                	slli	a5,a5,0x2
    6b9a:	978a                	add	a5,a5,sp
    6b9c:	0818                	addi	a4,sp,16
    6b9e:	0007a023          	sw	zero,0(a5)
    6ba2:	0791                	addi	a5,a5,4
    6ba4:	fee79de3          	bne	a5,a4,6b9e <__trunctfdf2+0x200>
    6ba8:	4702                	lw	a4,0(sp)
    6baa:	00d036b3          	snez	a3,a3
    6bae:	4792                	lw	a5,4(sp)
    6bb0:	8ed9                	or	a3,a3,a4
    6bb2:	4601                	li	a2,0
    6bb4:	bf85                	j	6b24 <__trunctfdf2+0x186>
    6bb6:	4785                	li	a5,1
    6bb8:	4701                	li	a4,0
    6bba:	bf2d                	j	6af4 <__trunctfdf2+0x156>

00006bbc <__clzsi2>:
    6bbc:	67c1                	lui	a5,0x10
    6bbe:	02f57c63          	bgeu	a0,a5,6bf6 <__clzsi2+0x3a>
    6bc2:	0ff00793          	li	a5,255
    6bc6:	02000713          	li	a4,32
    6bca:	00a7eb63          	bltu	a5,a0,6be0 <__clzsi2+0x24>
    6bce:	00000797          	auipc	a5,0x0
    6bd2:	50678793          	addi	a5,a5,1286 # 70d4 <__clz_tab>
    6bd6:	97aa                	add	a5,a5,a0
    6bd8:	2388                	lbu	a0,0(a5)
    6bda:	40a70533          	sub	a0,a4,a0
    6bde:	8082                	ret
    6be0:	8121                	srli	a0,a0,0x8
    6be2:	00000797          	auipc	a5,0x0
    6be6:	4f278793          	addi	a5,a5,1266 # 70d4 <__clz_tab>
    6bea:	97aa                	add	a5,a5,a0
    6bec:	2388                	lbu	a0,0(a5)
    6bee:	4761                	li	a4,24
    6bf0:	40a70533          	sub	a0,a4,a0
    6bf4:	8082                	ret
    6bf6:	010007b7          	lui	a5,0x1000
    6bfa:	00f56d63          	bltu	a0,a5,6c14 <__clzsi2+0x58>
    6bfe:	8161                	srli	a0,a0,0x18
    6c00:	00000797          	auipc	a5,0x0
    6c04:	4d478793          	addi	a5,a5,1236 # 70d4 <__clz_tab>
    6c08:	97aa                	add	a5,a5,a0
    6c0a:	2388                	lbu	a0,0(a5)
    6c0c:	4721                	li	a4,8
    6c0e:	40a70533          	sub	a0,a4,a0
    6c12:	8082                	ret
    6c14:	8141                	srli	a0,a0,0x10
    6c16:	00000797          	auipc	a5,0x0
    6c1a:	4be78793          	addi	a5,a5,1214 # 70d4 <__clz_tab>
    6c1e:	97aa                	add	a5,a5,a0
    6c20:	2388                	lbu	a0,0(a5)
    6c22:	4741                	li	a4,16
    6c24:	40a70533          	sub	a0,a4,a0
    6c28:	8082                	ret

00006c2a <_close>:
    6c2a:	05800793          	li	a5,88
    6c2e:	20006717          	auipc	a4,0x20006
    6c32:	a2f72f23          	sw	a5,-1474(a4) # 2000c66c <errno>
    6c36:	557d                	li	a0,-1
    6c38:	8082                	ret

00006c3a <_fstat>:
    6c3a:	05800793          	li	a5,88
    6c3e:	20006717          	auipc	a4,0x20006
    6c42:	a2f72723          	sw	a5,-1490(a4) # 2000c66c <errno>
    6c46:	557d                	li	a0,-1
    6c48:	8082                	ret

00006c4a <_isatty>:
    6c4a:	05800793          	li	a5,88
    6c4e:	20006717          	auipc	a4,0x20006
    6c52:	a0f72f23          	sw	a5,-1506(a4) # 2000c66c <errno>
    6c56:	4501                	li	a0,0
    6c58:	8082                	ret

00006c5a <_lseek>:
    6c5a:	05800793          	li	a5,88
    6c5e:	20006717          	auipc	a4,0x20006
    6c62:	a0f72723          	sw	a5,-1522(a4) # 2000c66c <errno>
    6c66:	557d                	li	a0,-1
    6c68:	8082                	ret

00006c6a <_read>:
    6c6a:	05800793          	li	a5,88
    6c6e:	20006717          	auipc	a4,0x20006
    6c72:	9ef72f23          	sw	a5,-1538(a4) # 2000c66c <errno>
    6c76:	557d                	li	a0,-1
    6c78:	8082                	ret
    6c7a:	0000                	unimp
    6c7c:	6572                	flw	fa0,28(sp)
    6c7e:	65726f63          	bltu	tp,s7,72dc <_data_lma+0x108>
    6c82:	6f20                	flw	fs0,88(a4)
    6c84:	6576                	flw	fa0,92(sp)
    6c86:	0d72                	slli	s10,s10,0x1c
    6c88:	0000                	unimp
    6c8a:	0000                	unimp
    6c8c:	075a                	slli	a4,a4,0x16
    6c8e:	0000                	unimp
    6c90:	07aa                	slli	a5,a5,0xa
    6c92:	0000                	unimp
    6c94:	0776                	slli	a4,a4,0x1d
    6c96:	0000                	unimp
    6c98:	07de                	slli	a5,a5,0x17
    6c9a:	0000                	unimp
    6c9c:	073c                	addi	a5,sp,904
    6c9e:	0000                	unimp
    6ca0:	0720                	addi	s0,sp,904
    6ca2:	0000                	unimp
    6ca4:	6c70                	flw	fa2,92(s0)
    6ca6:	7961                	lui	s2,0xffff8
    6ca8:	6420                	flw	fs0,72(s0)
    6caa:	6c62756f          	jal	a0,2e370 <_data_lma+0x2719c>
    6cae:	2065                	jal	6d56 <_read+0xec>
    6cb0:	63696c63          	bltu	s2,s6,72e8 <_data_lma+0x114>
    6cb4:	00000d6b          	0xd6b
    6cb8:	6c70                	flw	fa2,92(s0)
    6cba:	7961                	lui	s2,0xffff8
    6cbc:	7320                	flw	fs0,96(a4)
    6cbe:	6e69                	lui	t3,0x1a
    6cc0:	20656c67          	0x20656c67
    6cc4:	63696c63          	bltu	s2,s6,72fc <_data_lma+0x128>
    6cc8:	00000d6b          	0xd6b
    6ccc:	6572                	flw	fa0,28(sp)
    6cce:	64726f63          	bltu	tp,t2,732c <_data_lma+0x158>
    6cd2:	6c20                	flw	fs0,88(s0)
    6cd4:	20676e6f          	jal	t3,7ceda <_data_lma+0x75d06>
    6cd8:	7270                	flw	fa2,100(a2)
    6cda:	7365                	lui	t1,0xffff9
    6cdc:	74732073          	csrs	0x747,t1
    6ce0:	7261                	lui	tp,0xffff8
    6ce2:	2074                	lbu	a3,6(s0)
    6ce4:	000d                	c.nop	3
    6ce6:	0000                	unimp
    6ce8:	616d                	addi	sp,sp,240
    6cea:	65737563          	bgeu	t1,s7,7334 <_data_lma+0x160>
    6cee:	3d20                	lbu	s0,27(a0)
    6cf0:	2520                	lbu	s0,10(a0)
    6cf2:	3830                	lbu	a2,19(s0)
    6cf4:	0078                	addi	a4,sp,12
    6cf6:	0000                	unimp
    6cf8:	656d                	lui	a0,0x1b
    6cfa:	6370                	flw	fa2,68(a4)
    6cfc:	3d20                	lbu	s0,27(a0)
    6cfe:	2520                	lbu	s0,10(a0)
    6d00:	3830                	lbu	a2,19(s0)
    6d02:	0078                	addi	a4,sp,12
    6d04:	656d                	lui	a0,0x1b
    6d06:	6370                	flw	fa2,68(a4)
    6d08:	2031                	jal	6d14 <_read+0xaa>
    6d0a:	203d                	jal	6d38 <_read+0xce>
    6d0c:	3025                	jal	6534 <__subdf3+0x44c>
    6d0e:	7838                	flw	fa4,112(s0)
    6d10:	0000                	unimp
    6d12:	0000                	unimp
    6d14:	32336863          	bltu	t1,gp,7044 <_ctype_+0xf4>
    6d18:	3376                	lhu	a3,38(a4)
    6d1a:	3730                	lbu	a2,11(a4)
    6d1c:	6820                	flw	fs0,80(s0)
    6d1e:	6c65                	lui	s8,0x19
    6d20:	6f6c                	flw	fa1,92(a4)
    6d22:	7720                	flw	fs0,104(a4)
    6d24:	646c726f          	jal	tp,ce36a <_data_lma+0xc7196>
    6d28:	000d                	c.nop	3
    6d2a:	0000                	unimp
    6d2c:	0000                	unimp
    6d2e:	0000                	unimp
    6d30:	ffff                	0xffff
    6d32:	ffff                	0xffff
    6d34:	ffff                	0xffff
    6d36:	4e497fef          	jal	t6,9e21a <_data_lma+0x97046>
    6d3a:	0046                	c.slli	zero,0x11
    6d3c:	6e69                	lui	t3,0x1a
    6d3e:	0066                	c.slli	zero,0x19
    6d40:	414e                	lw	sp,208(sp)
    6d42:	004e                	c.slli	zero,0x13
    6d44:	616e                	flw	ft2,216(sp)
    6d46:	006e                	c.slli	zero,0x1b
    6d48:	0030                	addi	a2,sp,8
    6d4a:	0000                	unimp
    6d4c:	3130                	lbu	a2,3(a0)
    6d4e:	3332                	lhu	a2,34(a4)
    6d50:	3534                	lbu	a3,11(a0)
    6d52:	3736                	lhu	a3,42(a4)
    6d54:	3938                	lbu	a4,19(a0)
    6d56:	4241                	li	tp,16
    6d58:	46454443          	fmadd.q	fs0,fa0,ft4,fs0,rmm
    6d5c:	0000                	unimp
    6d5e:	0000                	unimp
    6d60:	3130                	lbu	a2,3(a0)
    6d62:	3332                	lhu	a2,34(a4)
    6d64:	3534                	lbu	a3,11(a0)
    6d66:	3736                	lhu	a3,42(a4)
    6d68:	3938                	lbu	a4,19(a0)
    6d6a:	6261                	lui	tp,0x18
    6d6c:	66656463          	bltu	a0,t1,73d4 <_data_lma+0x200>
	...
    6d7c:	0000                	unimp
    6d7e:	3ff8                	lbu	a4,31(a5)
    6d80:	4361                	li	t1,24
    6d82:	87a7636f          	jal	t1,fff7cdfc <_eusrstack+0xdff5cdfc>
    6d86:	3fd2                	lhu	a2,60(a5)
    6d88:	8b60c8b3          	0x8b60c8b3
    6d8c:	8a28                	0x8a28
    6d8e:	3fc6                	lhu	s1,60(a5)
    6d90:	509f79fb          	0x509f79fb
    6d94:	3fd34413          	xori	s0,t1,1021
    6d98:	0000                	unimp
    6d9a:	0000                	unimp
    6d9c:	0000                	unimp
    6d9e:	3ff0                	lbu	a2,31(a5)
    6da0:	0000                	unimp
    6da2:	0000                	unimp
    6da4:	0000                	unimp
    6da6:	4024                	lw	s1,64(s0)
    6da8:	0000                	unimp
    6daa:	0000                	unimp
    6dac:	0000                	unimp
    6dae:	401c                	lw	a5,0(s0)
    6db0:	0000                	unimp
    6db2:	0000                	unimp
    6db4:	0000                	unimp
    6db6:	4014                	lw	a3,0(s0)
    6db8:	0000                	unimp
    6dba:	0000                	unimp
    6dbc:	0000                	unimp
    6dbe:	3fe0                	lbu	s0,31(a5)
    6dc0:	6e49                	lui	t3,0x12
    6dc2:	6966                	flw	fs2,88(sp)
    6dc4:	696e                	flw	fs2,216(sp)
    6dc6:	7974                	flw	fa3,116(a0)
    6dc8:	0000                	unimp
    6dca:	0000                	unimp
    6dcc:	614e                	flw	ft2,208(sp)
    6dce:	004e                	c.slli	zero,0x13

00006dd0 <__sf_fake_stderr>:
	...

00006df0 <__sf_fake_stdin>:
	...

00006e10 <__sf_fake_stdout>:
	...

00006e30 <__mprec_bigtens>:
    6e30:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
    6e40:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
    6e50:	bf3c 7f73 4fdd 7515                         <.s..O.u

00006e58 <__mprec_tens>:
    6e58:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
    6e68:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
    6e78:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
    6e88:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
    6e98:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
    6ea8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
    6eb8:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
    6ec8:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
    6ed8:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
    6ee8:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
    6ef8:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
    6f08:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
    6f18:	9db4 79d9 7843 44ea                         ...yCx.D

00006f20 <p05.3319>:
    6f20:	0005 0000 0019 0000 007d 0000 2d23 2b30     ........}...#-0+
    6f30:	0020 0000 6c68 004c 6665 4567 4746 0000      ...hlL.efgEFG..
    6f40:	0043 0000 4f50 4953 0058 0000 002e 0000     C...POSIX.......

00006f50 <_ctype_>:
    6f50:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
    6f60:	2020 2020 2020 2020 2020 2020 2020 2020                     
    6f70:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
    6f80:	0410 0404 0404 0404 0404 1004 1010 1010     ................
    6f90:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
    6fa0:	0101 0101 0101 0101 0101 0101 1010 1010     ................
    6fb0:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
    6fc0:	0202 0202 0202 0202 0202 0202 1010 1010     ................
    6fd0:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...
    7054:	e69c ffff e520 ffff e630 ffff e638 ffff     .... ...0...8...
    7064:	e630 ffff e550 ffff e630 ffff e638 ffff     0...P...0...8...
    7074:	e520 ffff e520 ffff e550 ffff e638 ffff      ... ...P...8...
    7084:	e692 ffff e692 ffff e692 ffff e550 ffff     ............P...
    7094:	edac ffff ec9e ffff ec9e ffff ec9c ffff     ................
    70a4:	eca4 ffff eca4 ffff ec6a ffff ec9c ffff     ........j.......
    70b4:	eca4 ffff ec6a ffff eca4 ffff ec9c ffff     ....j...........
    70c4:	ed98 ffff ed98 ffff ed98 ffff ec6a ffff     ............j...

000070d4 <__clz_tab>:
    70d4:	0100 0202 0303 0303 0404 0404 0404 0404     ................
    70e4:	0505 0505 0505 0505 0505 0505 0505 0505     ................
    70f4:	0606 0606 0606 0606 0606 0606 0606 0606     ................
    7104:	0606 0606 0606 0606 0606 0606 0606 0606     ................
    7114:	0707 0707 0707 0707 0707 0707 0707 0707     ................
    7124:	0707 0707 0707 0707 0707 0707 0707 0707     ................
    7134:	0707 0707 0707 0707 0707 0707 0707 0707     ................
    7144:	0707 0707 0707 0707 0707 0707 0707 0707     ................
    7154:	0808 0808 0808 0808 0808 0808 0808 0808     ................
    7164:	0808 0808 0808 0808 0808 0808 0808 0808     ................
    7174:	0808 0808 0808 0808 0808 0808 0808 0808     ................
    7184:	0808 0808 0808 0808 0808 0808 0808 0808     ................
    7194:	0808 0808 0808 0808 0808 0808 0808 0808     ................
    71a4:	0808 0808 0808 0808 0808 0808 0808 0808     ................
    71b4:	0808 0808 0808 0808 0808 0808 0808 0808     ................
    71c4:	0808 0808 0808 0808 0808 0808 0808 0808     ................
